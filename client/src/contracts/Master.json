{
  "contractName": "Master",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addressCYON",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
<<<<<<< Updated upstream
          "internalType": "string",
          "name": "_collectionName",
          "type": "string"
=======
          "internalType": "address",
          "name": "_nftCollectionAddress",
          "type": "address"
>>>>>>> Stashed changes
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_collectionAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
<<<<<<< Updated upstream
          "name": "_tokenID",
=======
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "AuctionClosed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_nftCollectionAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_nftTokenID",
>>>>>>> Stashed changes
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_oldOwner",
          "type": "address"
<<<<<<< Updated upstream
=======
        }
      ],
      "name": "AuctionStarted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_nftCollectionAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_nftTokenID",
          "type": "uint256"
>>>>>>> Stashed changes
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "NFTSold",
      "type": "event"
    },
    {
<<<<<<< Updated upstream
=======
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "_collectionName",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_collectionAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_tokenID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_oldOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "NFTSold",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftCollectionAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_nftTokenID",
          "type": "uint256"
        }
      ],
      "name": "bid",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftCollectionAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_nftTokenID",
          "type": "uint256"
        }
      ],
      "name": "checkAuctionTimeExpired",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftCollectionAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_nftTokenID",
          "type": "uint256"
        }
      ],
      "name": "getBiddersAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftCollectionAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_nftTokenID",
          "type": "uint256"
        }
      ],
      "name": "getCurrentHighestBid",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftCollectionAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_nftTokenID",
          "type": "uint256"
        }
      ],
      "name": "getCurrentHighestBidder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftCollectionAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_nftTokenID",
          "type": "uint256"
        }
      ],
      "name": "isInAuction",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftCollectionAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_nftTokenID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_biddingTime",
          "type": "uint256"
        }
      ],
      "name": "startAuction",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
>>>>>>> Stashed changes
      "inputs": [],
      "name": "tokenCYON",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
<<<<<<< Updated upstream
=======
          "internalType": "address",
          "name": "_nftCollectionAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_nftTokenID",
          "type": "uint256"
        }
      ],
      "name": "withdrawRefund",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
>>>>>>> Stashed changes
          "internalType": "address",
          "name": "_collectionAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_firstOwner",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_tokenURI",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_tag",
          "type": "string"
        }
      ],
      "name": "createNFT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_collectionAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "setNewPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_collectionAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenID",
          "type": "uint256"
        }
      ],
      "name": "buyNFT",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_collectionAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenID",
          "type": "uint256"
        }
      ],
<<<<<<< Updated upstream
=======
      "name": "requestAuction",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_collectionAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenID",
          "type": "uint256"
        }
      ],
      "name": "closeAuction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_collectionAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenID",
          "type": "uint256"
        }
      ],
>>>>>>> Stashed changes
      "name": "getURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
<<<<<<< Updated upstream
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addressCYON\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_collectionName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_collectionAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_oldOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"NFTSold\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_collectionAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenID\",\"type\":\"uint256\"}],\"name\":\"buyNFT\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_collectionAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_firstOwner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_tokenURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_tag\",\"type\":\"string\"}],\"name\":\"createNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_collectionAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenID\",\"type\":\"uint256\"}],\"name\":\"getURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_collectionAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"setNewPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenCYON\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Sebastien Gazeau, S\\u00e9bastien Dupertuis et Alexis Mendoza\",\"events\":{\"NFTSold(string,address,uint256,address,address,uint256)\":{\"params\":{\"_collectionAddress\":\"Address of the collection\",\"_collectionName\":\"Name of the NFT collection\",\"_newOwner\":\"New owner of the bought NFT\",\"_oldOwner\":\"Previous owner of the sold NFT\",\"_price\":\"The sale price of the given NFT\",\"_tokenID\":\"The ID of this given NFT\"}}},\"kind\":\"dev\",\"methods\":{\"buyNFT(address,uint256)\":{\"details\":\"Call this function when a buyer click on the BUY button\",\"params\":{\"_collectionAddress\":\"The address of the collection of the NFT to be sold/transfered\",\"_tokenID\":\"The token ID of the NFT to be sold/transfered\"}},\"constructor\":{\"params\":{\"_addressCYON\":\"The ERC20 address of the platform token (CYON) \"}},\"createNFT(address,address,string,string,string,string)\":{\"details\":\"Call this function when the user wants to create a new NFT and mint it to the given address\",\"params\":{\"_collectionAddress\":\"The address of the collection in which the NFT will be created/minted\",\"_description\":\"Description of the new NFT\",\"_firstOwner\":\"The destination address to which the NFT is minted\",\"_name\":\"Name of the new NFT\",\"_tag\":\"Tag of the new NFT allowing filtering\",\"_tokenURI\":\"The metadata through a link URI\"}},\"getURI(address,uint256)\":{\"details\":\"Call this function to get the metadata of the NFT\",\"params\":{\"_collectionAddress\":\"The address of the collection of the NFT to get the URI\",\"_tokenID\":\"The token ID of the NFT to get the URI\"},\"returns\":{\"_0\":\"_URI The URI data\"}},\"setNewPrice(address,uint256,uint256)\":{\"details\":\"Call this function when a sale is initiated\",\"params\":{\"_collectionAddress\":\"The address of the collection of the NFT to set the price\",\"_price\":\"The price to set\",\"_tokenID\":\"The token ID of the NFT to set the price\"}}},\"title\":\"Master contract to manage the decentralized NFT market place \",\"version\":1},\"userdoc\":{\"events\":{\"NFTSold(string,address,uint256,address,address,uint256)\":{\"notice\":\"event for NFT sales\"}},\"kind\":\"user\",\"methods\":{\"buyNFT(address,uint256)\":{\"notice\":\"This function allows to transfer the money to the NFT owner and the NFT to the buyer.\"},\"constructor\":{\"notice\":\"The constructor the Master smart contract\"},\"createNFT(address,address,string,string,string,string)\":{\"notice\":\"This function allows to create NFTs inside a collection and mint it directly\"},\"getURI(address,uint256)\":{\"notice\":\"This function returns the URI data of the given NFT\"},\"setNewPrice(address,uint256,uint256)\":{\"notice\":\"This function allows to set the price of the given NFT\"}},\"notice\":\"This smart contract is the link between the Dapp and the subcontracts\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Master.sol\":\"Master\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x921f012325281f7d81e29c53a13824cf6c2c5d77232065d0d4f3f912e97af6ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7dbcedc364fce0ab5e54d21d4cbd91a97959f52c0674cf5c36a314bb58308f62\",\"dweb:/ipfs/QmfYpqHKtu3bSQ9FGvLwzdxRNykStpVPtoLNTaM1KBKj6E\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x0d4de01fe5360c38b4ad2b0822a12722958428f5138a7ff47c1720eb6fa52bba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77724cecdfba8814632ab58737c2b0f2d4ad2d532bc614aee559b5593c1152f0\",\"dweb:/ipfs/QmUcE6gXyv7CQh4sUdcDABYKGTovTe1zLMZSEq95nkc3ph\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0x1cbe42915bc66227970fe99bc0f783eb1de30f2b48f984af01ad45edb9658698\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2baa08eb67d9da46e6c4c049f17b7684a1c68c5268d0f466cfa0eb23ce2bf9b0\",\"dweb:/ipfs/Qmdnj8zj4PfErB2HM2eKmDt7FrqrhggsZ6Qd8MpD593tgj\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"project:/contracts/Auction.sol\":{\"keccak256\":\"0x1cace4480ccb620371f4213fa3ef67cb47521732d4a574d6d97d6605fda90ee0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://375353db1f3fd12e64c615504a95e3751333d53359033de9a6a58dba47cedc07\",\"dweb:/ipfs/QmSzSUVdPA39owEi7TUqdnHy3ogZ4qqNidVH4MZQ61Ahvs\"]},\"project:/contracts/Master.sol\":{\"keccak256\":\"0x96612ea61ed061d92ce3061e4c46aec3f0640402387a5eb8048da2b9bb1370d9\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://33caaffa14cfdb1a4a13b1a086c4c702ab4e3c18b6cac3c6f5ffb852c22a8c7d\",\"dweb:/ipfs/QmX4tcQmRQ3nf9n8kELfneLe7gzj6UWgZuDMf6LgPxAZC7\"]},\"project:/contracts/NFTCollectionFactory.sol\":{\"keccak256\":\"0x4a45759ba8daf3d401e5994798c1068b26bf02722caeec55366925d4c61e34fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ab363463629a9d8da1de428e276e580d9bdb3355940653275bcbe81e6b2747a\",\"dweb:/ipfs/QmZKekNDBfPbPJpAsFDLojqGoaWtFTYHw359F7FTRJnrcv\"]},\"project:/contracts/NFTCollections.sol\":{\"keccak256\":\"0xbef8229792aaa053475fa62f63f91820f100f8f4181a43b6f5a16bb312845769\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5ee15a601eb2d5a09ff757bfd643ab62edebc9130de1e11aa119a9703120154\",\"dweb:/ipfs/QmcUGQ5kuZpz9Lkc2UGLhLXSBTm7Dc5yzJD8pL5Y3v25Bq\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162001b6238038062001b628339818101604052810190620000379190620000e8565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200011a565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000b08262000083565b9050919050565b620000c281620000a3565b8114620000ce57600080fd5b50565b600081519050620000e281620000b7565b92915050565b6000602082840312156200010157620001006200007e565b5b60006200011184828501620000d1565b91505092915050565b611a38806200012a6000396000f3fe60806040526004361061004a5760003560e01c806328d4ae0f1461004f578063472371621461007857806350194895146100b5578063811ca7cf146100e0578063a82ba76f14610109575b600080fd5b34801561005b57600080fd5b5061007660048036038101906100719190610d84565b610125565b005b34801561008457600080fd5b5061009f600480360381019061009a9190610dd7565b6103ed565b6040516100ac9190610eb0565b60405180910390f35b3480156100c157600080fd5b506100ca610533565b6040516100d79190610f31565b60405180910390f35b3480156100ec57600080fd5b5061010760048036038101906101029190611081565b610557565b005b610123600480360381019061011e9190610dd7565b6106ee565b005b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610194576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161018b906111f0565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff1663c4e41b226040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102039190611225565b82111580156102125750600082115b610251576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102489061129e565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16636352211e846040518263ffffffff1660e01b81526004016102a191906112cd565b602060405180830381865afa1580156102be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e291906112fd565b73ffffffffffffffffffffffffffffffffffffffff1614610338576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032f9061139c565b60405180910390fd5b6000811161037b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103729061142e565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff1663f7d9757783836040518363ffffffff1660e01b81526004016103b692919061144e565b600060405180830381600087803b1580156103d057600080fd5b505af11580156103e4573d6000803e3d6000fd5b50505050505050565b60608273ffffffffffffffffffffffffffffffffffffffff1663c4e41b226040518163ffffffff1660e01b8152600401602060405180830381865afa15801561043a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061045e9190611225565b821115801561046d5750600082115b6104ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a39061129e565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff1663c87b56dd836040518263ffffffff1660e01b81526004016104e591906112cd565b600060405180830381865afa158015610502573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061052b91906114e7565b905092915050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16036105c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105bd906111f0565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610635576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062c906115a2565b60405180910390fd5b8573ffffffffffffffffffffffffffffffffffffffff1663338e111e86338787878760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660008060006040518b63ffffffff1660e01b81526004016106a29a99989796959493929190611627565b6020604051808303816000875af11580156106c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e59190611225565b50505050505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361075d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610754906111f0565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff1663e7572230836040518263ffffffff1660e01b815260040161079891906112cd565b602060405180830381865afa1580156107b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d99190611225565b90506000811161081e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108159061172b565b60405180910390fd5b8060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b815260040161087a92919061174b565b602060405180830381865afa158015610897573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108bb9190611225565b10156108fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108f3906117c0565b60405180910390fd5b60008373ffffffffffffffffffffffffffffffffffffffff16636352211e846040518263ffffffff1660e01b815260040161093791906112cd565b602060405180830381865afa158015610954573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097891906112fd565b905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83856040518363ffffffff1660e01b81526004016109d89291906117e0565b6020604051808303816000875af11580156109f7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1b9190611835565b905080610a5d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a54906118d4565b60405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1663081812fc866040518263ffffffff1660e01b8152600401610aad91906112cd565b602060405180830381865afa158015610aca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aee91906112fd565b73ffffffffffffffffffffffffffffffffffffffff1614610b44576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b3b9061191a565b60405180910390fd5b8473ffffffffffffffffffffffffffffffffffffffff166342842e0e8333876040518463ffffffff1660e01b8152600401610b819392919061193a565b600060405180830381600087803b158015610b9b57600080fd5b505af1158015610baf573d6000803e3d6000fd5b505050508473ffffffffffffffffffffffffffffffffffffffff1663f7d975778560006040518363ffffffff1660e01b8152600401610bef929190611971565b600060405180830381600087803b158015610c0957600080fd5b505af1158015610c1d573d6000803e3d6000fd5b505050507f8146a1050e7850dd9a48240ef51ee45f907a45710d3c5136077e83e633c3ebe18573ffffffffffffffffffffffffffffffffffffffff166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa158015610c8d573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610cb691906114e7565b8686853388604051610ccd9695949392919061199a565b60405180910390a15050505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d1b82610cf0565b9050919050565b610d2b81610d10565b8114610d3657600080fd5b50565b600081359050610d4881610d22565b92915050565b6000819050919050565b610d6181610d4e565b8114610d6c57600080fd5b50565b600081359050610d7e81610d58565b92915050565b600080600060608486031215610d9d57610d9c610ce6565b5b6000610dab86828701610d39565b9350506020610dbc86828701610d6f565b9250506040610dcd86828701610d6f565b9150509250925092565b60008060408385031215610dee57610ded610ce6565b5b6000610dfc85828601610d39565b9250506020610e0d85828601610d6f565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610e51578082015181840152602081019050610e36565b83811115610e60576000848401525b50505050565b6000601f19601f8301169050919050565b6000610e8282610e17565b610e8c8185610e22565b9350610e9c818560208601610e33565b610ea581610e66565b840191505092915050565b60006020820190508181036000830152610eca8184610e77565b905092915050565b6000819050919050565b6000610ef7610ef2610eed84610cf0565b610ed2565b610cf0565b9050919050565b6000610f0982610edc565b9050919050565b6000610f1b82610efe565b9050919050565b610f2b81610f10565b82525050565b6000602082019050610f466000830184610f22565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610f8e82610e66565b810181811067ffffffffffffffff82111715610fad57610fac610f56565b5b80604052505050565b6000610fc0610cdc565b9050610fcc8282610f85565b919050565b600067ffffffffffffffff821115610fec57610feb610f56565b5b610ff582610e66565b9050602081019050919050565b82818337600083830152505050565b600061102461101f84610fd1565b610fb6565b9050828152602081018484840111156110405761103f610f51565b5b61104b848285611002565b509392505050565b600082601f83011261106857611067610f4c565b5b8135611078848260208601611011565b91505092915050565b60008060008060008060c0878903121561109e5761109d610ce6565b5b60006110ac89828a01610d39565b96505060206110bd89828a01610d39565b955050604087013567ffffffffffffffff8111156110de576110dd610ceb565b5b6110ea89828a01611053565b945050606087013567ffffffffffffffff81111561110b5761110a610ceb565b5b61111789828a01611053565b935050608087013567ffffffffffffffff81111561113857611137610ceb565b5b61114489828a01611053565b92505060a087013567ffffffffffffffff81111561116557611164610ceb565b5b61117189828a01611053565b9150509295509295509295565b7f54686520636f6c6c656374696f6e2061646472657373206e6565647320746f2060008201527f626520646966666572656e742066726f6d207a65726f2e000000000000000000602082015250565b60006111da603783610e22565b91506111e58261117e565b604082019050919050565b60006020820190508181036000830152611209816111cd565b9050919050565b60008151905061121f81610d58565b92915050565b60006020828403121561123b5761123a610ce6565b5b600061124984828501611210565b91505092915050565b7f5468697320746f6b656e20494420646f6573206e6f742065786973742e000000600082015250565b6000611288601d83610e22565b915061129382611252565b602082019050919050565b600060208201905081810360008301526112b78161127b565b9050919050565b6112c781610d4e565b82525050565b60006020820190506112e260008301846112be565b92915050565b6000815190506112f781610d22565b92915050565b60006020828403121561131357611312610ce6565b5b6000611321848285016112e8565b91505092915050565b7f54686973204e465420646f6573206e6f742062656c6f6e6720746f207468652060008201527f63757272656e74206d6573736167652073656e6465722e000000000000000000602082015250565b6000611386603783610e22565b91506113918261132a565b604082019050919050565b600060208201905081810360008301526113b581611379565b9050919050565b7f506c6561736520646566696e6520612073656c6c696e6720707269636520686960008201527f67686572207468616e207a65726f2e0000000000000000000000000000000000602082015250565b6000611418602f83610e22565b9150611423826113bc565b604082019050919050565b600060208201905081810360008301526114478161140b565b9050919050565b600060408201905061146360008301856112be565b61147060208301846112be565b9392505050565b600061148a61148584610fd1565b610fb6565b9050828152602081018484840111156114a6576114a5610f51565b5b6114b1848285610e33565b509392505050565b600082601f8301126114ce576114cd610f4c565b5b81516114de848260208601611477565b91505092915050565b6000602082840312156114fd576114fc610ce6565b5b600082015167ffffffffffffffff81111561151b5761151a610ceb565b5b611527848285016114b9565b91505092915050565b7f54686520757365722061646472657373206e6565647320746f2062652064696660008201527f666572656e742066726f6d207a65726f2e000000000000000000000000000000602082015250565b600061158c603183610e22565b915061159782611530565b604082019050919050565b600060208201905081810360008301526115bb8161157f565b9050919050565b6115cb81610d10565b82525050565b6000819050919050565b60006115f66115f16115ec846115d1565b610ed2565b610d4e565b9050919050565b611606816115db565b82525050565b60008115159050919050565b6116218161160c565b82525050565b60006101408201905061163d600083018d6115c2565b61164a602083018c6115c2565b818103604083015261165c818b610e77565b90508181036060830152611670818a610e77565b905081810360808301526116848189610e77565b905081810360a08301526116988188610e77565b90506116a760c08301876115c2565b6116b460e08301866115fd565b6116c2610100830185611618565b6116d0610120830184611618565b9b9a5050505050505050505050565b7f54686973204e4654206973206e6f7420666f722073616c652e00000000000000600082015250565b6000611715601983610e22565b9150611720826116df565b602082019050919050565b6000602082019050818103600083015261174481611708565b9050919050565b600060408201905061176060008301856115c2565b61176d60208301846115c2565b9392505050565b7f43594f4e20746f6b656e20616c6c6f77616e636520746f6f206c6f772e000000600082015250565b60006117aa601d83610e22565b91506117b582611774565b602082019050919050565b600060208201905081810360008301526117d98161179d565b9050919050565b60006040820190506117f560008301856115c2565b61180260208301846112be565b9392505050565b6118128161160c565b811461181d57600080fd5b50565b60008151905061182f81611809565b92915050565b60006020828403121561184b5761184a610ce6565b5b600061185984828501611820565b91505092915050565b7f4661696c656420746f2073656e642043594f4e20746f20746865204e4654206f60008201527f776e65722e000000000000000000000000000000000000000000000000000000602082015250565b60006118be602583610e22565b91506118c982611862565b604082019050919050565b600060208201905081810360008301526118ed816118b1565b9050919050565b50565b6000611904600083610e22565b915061190f826118f4565b600082019050919050565b60006020820190508181036000830152611933816118f7565b9050919050565b600060608201905061194f60008301866115c2565b61195c60208301856115c2565b61196960408301846112be565b949350505050565b600060408201905061198660008301856112be565b61199360208301846115fd565b9392505050565b600060c08201905081810360008301526119b48189610e77565b90506119c360208301886115c2565b6119d060408301876112be565b6119dd60608301866115c2565b6119ea60808301856115c2565b6119f760a08301846112be565b97965050505050505056fea2646970667358221220fd215485092d98ec4e55cda0364a2a0489041dd86700e6f39a09782c67e38dca64736f6c634300080d0033",
  "deployedBytecode": "",
=======
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addressCYON\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_nftCollectionAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_nftTokenID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"AuctionClosed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_nftCollectionAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_nftTokenID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"AuctionStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_nftCollectionAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_nftTokenID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_bidder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_newBid\",\"type\":\"uint256\"}],\"name\":\"HighestBidIncreased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_collectionName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_collectionAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_oldOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"NFTSold\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftCollectionAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_nftTokenID\",\"type\":\"uint256\"}],\"name\":\"bid\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_collectionAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenID\",\"type\":\"uint256\"}],\"name\":\"buyNFT\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftCollectionAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_nftTokenID\",\"type\":\"uint256\"}],\"name\":\"checkAuctionTimeExpired\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_collectionAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenID\",\"type\":\"uint256\"}],\"name\":\"closeAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_collectionAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_firstOwner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_tokenURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_tag\",\"type\":\"string\"}],\"name\":\"createNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftCollectionAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_nftTokenID\",\"type\":\"uint256\"}],\"name\":\"getBiddersAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftCollectionAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_nftTokenID\",\"type\":\"uint256\"}],\"name\":\"getCurrentHighestBid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftCollectionAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_nftTokenID\",\"type\":\"uint256\"}],\"name\":\"getCurrentHighestBidder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_collectionAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenID\",\"type\":\"uint256\"}],\"name\":\"getURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftCollectionAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_nftTokenID\",\"type\":\"uint256\"}],\"name\":\"isInAuction\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_collectionAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenID\",\"type\":\"uint256\"}],\"name\":\"requestAuction\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_collectionAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"setNewPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftCollectionAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_nftTokenID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_biddingTime\",\"type\":\"uint256\"}],\"name\":\"startAuction\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenCYON\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftCollectionAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_nftTokenID\",\"type\":\"uint256\"}],\"name\":\"withdrawRefund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Sebastien Gazeau, S\\u00e9bastien Dupertuis et Alexis Mendoza\",\"events\":{\"NFTSold(string,address,uint256,address,address,uint256)\":{\"params\":{\"_collectionAddress\":\"Address of the collection\",\"_collectionName\":\"Name of the NFT collection\",\"_newOwner\":\"New owner of the bought NFT\",\"_oldOwner\":\"Previous owner of the sold NFT\",\"_price\":\"The sale price of the given NFT\",\"_tokenID\":\"The ID of this given NFT\"}}},\"kind\":\"dev\",\"methods\":{\"bid(address,uint256)\":{\"details\":\"Call this function each time a user place a new bid\",\"params\":{\"_nftCollectionAddress\":\"Collection address of the given NFT\",\"_nftTokenID\":\"Token ID of the given NFT\"}},\"buyNFT(address,uint256)\":{\"details\":\"Call this function when a buyer click on the BUY button\",\"params\":{\"_collectionAddress\":\"The address of the collection of the NFT to be sold/transfered\",\"_tokenID\":\"The token ID of the NFT to be sold/transfered\"}},\"checkAuctionTimeExpired(address,uint256)\":{\"details\":\"Call this function to check if the time of the auction is over or not\",\"params\":{\"_nftCollectionAddress\":\"Collection address of the given NFT\",\"_nftTokenID\":\"Token ID of the given NFT\"},\"returns\":{\"_0\":\"Returns a boolean to define if the auction time has expired (true) or not (false)\"}},\"closeAuction(address,uint256)\":{\"details\":\"Call this function from the front when the auction time has expired\",\"params\":{\"_collectionAddress\":\"The address of the collection of the NFT to close the auction\",\"_tokenID\":\"The token ID of the NFT to close the auction\"}},\"constructor\":{\"params\":{\"_addressCYON\":\"The ERC20 address of the platform token (CYON) \"}},\"createNFT(address,address,string,string,string,string)\":{\"details\":\"Call this function when the user wants to create a new NFT and mint it to the given address\",\"params\":{\"_collectionAddress\":\"The address of the collection in which the NFT will be created/minted\",\"_description\":\"Description of the new NFT\",\"_firstOwner\":\"The destination address to which the NFT is minted\",\"_name\":\"Name of the new NFT\",\"_tag\":\"Tag of the new NFT allowing filtering\",\"_tokenURI\":\"The metadata through a link URI\"}},\"getBiddersAmount(address,uint256)\":{\"details\":\"Call this function from the front to display the amount of bidders over the given limit (here 1000)\",\"params\":{\"_nftCollectionAddress\":\"Collection address of the given NFT\",\"_nftTokenID\":\"Token ID of the given NFT\"},\"returns\":{\"_0\":\"Returns the amount of bidders (how many addresses)\"}},\"getCurrentHighestBid(address,uint256)\":{\"details\":\"Call this function when you want to know the value of the highest bid\",\"params\":{\"_nftCollectionAddress\":\"Collection address of the given NFT\",\"_nftTokenID\":\"Token ID of the given NFT\"},\"returns\":{\"_0\":\"Returns the value of the current highest bid\"}},\"getCurrentHighestBidder(address,uint256)\":{\"details\":\"Call this function when you want to know the address of the highest bidder\",\"params\":{\"_nftCollectionAddress\":\"Collection address of the given NFT\",\"_nftTokenID\":\"Token ID of the given NFT\"},\"returns\":{\"_0\":\"Returns the address of the current highest bidder\"}},\"getURI(address,uint256)\":{\"details\":\"Call this function to get the metadata of the NFT\",\"params\":{\"_collectionAddress\":\"The address of the collection of the NFT to get the URI\",\"_tokenID\":\"The token ID of the NFT to get the URI\"},\"returns\":{\"_0\":\"_URI The URI data\"}},\"isInAuction(address,uint256)\":{\"details\":\"Call this function from the front to know if there is an auction ongoing\",\"params\":{\"_nftCollectionAddress\":\"Collection address of the given NFT\",\"_nftTokenID\":\"Token ID of the given NFT\"},\"returns\":{\"_0\":\"Returns true if an auction is in progress\"}},\"requestAuction(address,uint256)\":{\"details\":\"Call this function before starting the auction procedure\",\"params\":{\"_collectionAddress\":\"The address of the collection of the NFT to start an auction\",\"_tokenID\":\"The token ID of the NFT to start an auction\"},\"returns\":{\"_0\":\"_validity True if the auction is authorized\"}},\"setNewPrice(address,uint256,uint256)\":{\"details\":\"Call this function when a sale is initiated\",\"params\":{\"_collectionAddress\":\"The address of the collection of the NFT to set the price\",\"_price\":\"The price to set\",\"_tokenID\":\"The token ID of the NFT to set the price\"}},\"startAuction(address,uint256,uint256)\":{\"details\":\"Call this function when the user decides to sell his NFT through an auction. The owner can define a starting price if he sends money in the transaction.\",\"params\":{\"_biddingTime\":\"Auction time in seconds\",\"_nftCollectionAddress\":\"Collection address of the given NFT\",\"_nftTokenID\":\"Token ID of the given NFT\"}},\"withdrawRefund(address,uint256)\":{\"details\":\"The user can call this function through the front when his bid is not the highest anymore.\",\"params\":{\"_nftCollectionAddress\":\"Collection address of the given NFT\",\"_nftTokenID\":\"Token ID of the given NFT\"}}},\"title\":\"Master contract to manage the decentralized NFT market place \",\"version\":1},\"userdoc\":{\"events\":{\"AuctionClosed(address,uint256,address,uint256)\":{\"notice\":\"Event raised when the auction has finished\"},\"AuctionStarted(address,uint256,address)\":{\"notice\":\"Event raised when the auction has started\"},\"HighestBidIncreased(address,uint256,address,uint256)\":{\"notice\":\"Event raised when the bid has increased\"},\"NFTSold(string,address,uint256,address,address,uint256)\":{\"notice\":\"event for NFT sales\"}},\"kind\":\"user\",\"methods\":{\"bid(address,uint256)\":{\"notice\":\"This function allows to place a new bid\"},\"buyNFT(address,uint256)\":{\"notice\":\"This function allows to transfer the money to the NFT owner and the NFT to the buyer after a direct sale.\"},\"checkAuctionTimeExpired(address,uint256)\":{\"notice\":\"This function allows to check if the auction ended\"},\"closeAuction(address,uint256)\":{\"notice\":\"This function allows to close an auction when the time has expired\"},\"constructor\":{\"notice\":\"The constructor the Master smart contract\"},\"createNFT(address,address,string,string,string,string)\":{\"notice\":\"This function allows to create NFTs inside a collection and mint it directly\"},\"getBiddersAmount(address,uint256)\":{\"notice\":\"This function allows to check for the amount of bidders\"},\"getCurrentHighestBid(address,uint256)\":{\"notice\":\"This function allows to check for the current highest bid\"},\"getCurrentHighestBidder(address,uint256)\":{\"notice\":\"This function allows to check for the current highest bidder\"},\"getURI(address,uint256)\":{\"notice\":\"This function returns the URI data of the given NFT\"},\"isInAuction(address,uint256)\":{\"notice\":\"This function allows to check if there is an auction in progress for the given NFT\"},\"requestAuction(address,uint256)\":{\"notice\":\"This function allows to initiate an auction by verifying owner and tokenID\"},\"setNewPrice(address,uint256,uint256)\":{\"notice\":\"This function allows to set the price of the given NFT\"},\"startAuction(address,uint256,uint256)\":{\"notice\":\"This function allows to start a new auction\"},\"withdrawRefund(address,uint256)\":{\"notice\":\"This function allows a user that placed a bid (not the highest anymore) to get back his funds\"}},\"notice\":\"This smart contract is the link between the Dapp and the subcontracts\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Master.sol\":\"Master\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x921f012325281f7d81e29c53a13824cf6c2c5d77232065d0d4f3f912e97af6ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7dbcedc364fce0ab5e54d21d4cbd91a97959f52c0674cf5c36a314bb58308f62\",\"dweb:/ipfs/QmfYpqHKtu3bSQ9FGvLwzdxRNykStpVPtoLNTaM1KBKj6E\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x0d4de01fe5360c38b4ad2b0822a12722958428f5138a7ff47c1720eb6fa52bba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77724cecdfba8814632ab58737c2b0f2d4ad2d532bc614aee559b5593c1152f0\",\"dweb:/ipfs/QmUcE6gXyv7CQh4sUdcDABYKGTovTe1zLMZSEq95nkc3ph\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0x1cbe42915bc66227970fe99bc0f783eb1de30f2b48f984af01ad45edb9658698\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2baa08eb67d9da46e6c4c049f17b7684a1c68c5268d0f466cfa0eb23ce2bf9b0\",\"dweb:/ipfs/Qmdnj8zj4PfErB2HM2eKmDt7FrqrhggsZ6Qd8MpD593tgj\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"project:/contracts/Auction.sol\":{\"keccak256\":\"0x8540c014d1e2c7b522bbff094e2aa555cd42736adec79e26d263ac852e668149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://770dbb032193c88a66766cc4422b58d7a4b2a13f66cd7681202cc8e292043f11\",\"dweb:/ipfs/QmRg7myAdqftL64g24ScX4K1cQEQLqmNvp45UPP9UkSRwt\"]},\"project:/contracts/Master.sol\":{\"keccak256\":\"0xcc6d44825b32befc6e931bc4217f07befe7f971580a203440a8913faf960cd8c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://55cc06de5064c061c07aae98901b1af762fc7d641bcfdf596b29efb1352a2d06\",\"dweb:/ipfs/QmWfYWLgNVQbeihi7sJTe9i96WUmrEnbBZ2n9rknxsuja9\"]},\"project:/contracts/NFTCollectionFactory.sol\":{\"keccak256\":\"0x4a45759ba8daf3d401e5994798c1068b26bf02722caeec55366925d4c61e34fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ab363463629a9d8da1de428e276e580d9bdb3355940653275bcbe81e6b2747a\",\"dweb:/ipfs/QmZKekNDBfPbPJpAsFDLojqGoaWtFTYHw359F7FTRJnrcv\"]},\"project:/contracts/NFTCollections.sol\":{\"keccak256\":\"0xf47a876f9cf5871ba9443a4be15c509f458dd8c7d774efc40b8a86a8d0b0d729\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://623987c66016849872112d6121888c64c7a88c17d27dfc1312c83219594929c7\",\"dweb:/ipfs/QmWpvPXkiUnWzkB5tva3pdndLXT4YPNYVSuZrrRWNmCKS7\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162005005380380620050058339818101604052810190620000379190620000e9565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200011b565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000b18262000084565b9050919050565b620000c381620000a4565b8114620000cf57600080fd5b50565b600081519050620000e381620000b8565b92915050565b6000602082840312156200010257620001016200007f565b5b60006200011284828501620000d2565b91505092915050565b614eda806200012b6000396000f3fe6080604052600436106100e85760003560e01c806356dd47551161008a578063a82ba76f11610059578063a82ba76f146102e8578063cceb2a4c14610304578063d189ab1914610341578063d35bfa951461037e576100e8565b806356dd47551461024a57806359d667a5146102665780637b50315e14610282578063811ca7cf146102bf576100e8565b8063469298b1116100c6578063469298b11461017c57806347237162146101b957806350194895146101f657806353ea4d8a14610221576100e8565b806320a564e6146100ed57806328d4ae0f1461012a578063438364a114610153575b600080fd5b3480156100f957600080fd5b50610114600480360381019061010f9190613902565b6103bb565b6040516101219190613951565b60405180910390f35b34801561013657600080fd5b50610151600480360381019061014c919061396c565b610525565b005b34801561015f57600080fd5b5061017a60048036038101906101759190613902565b610730565b005b34801561018857600080fd5b506101a3600480360381019061019e9190613902565b610f5e565b6040516101b09190613951565b60405180910390f35b3480156101c557600080fd5b506101e060048036038101906101db9190613902565b6110cb565b6040516101ed9190613a58565b60405180910390f35b34801561020257600080fd5b5061020b6111cf565b6040516102189190613ad9565b60405180910390f35b34801561022d57600080fd5b5061024860048036038101906102439190613902565b6111f5565b005b610264600480360381019061025f919061396c565b6115a6565b005b610280600480360381019061027b9190613902565b611b26565b005b34801561028e57600080fd5b506102a960048036038101906102a49190613902565b6124e4565b6040516102b69190613b0f565b60405180910390f35b3480156102cb57600080fd5b506102e660048036038101906102e19190613c5f565b612651565b005b61030260048036038101906102fd9190613902565b6127ea565b005b34801561031057600080fd5b5061032b60048036038101906103269190613902565b612ddb565b6040516103389190613b0f565b60405180910390f35b34801561034d57600080fd5b5061036860048036038101906103639190613902565b612eb3565b6040516103759190613b0f565b60405180910390f35b34801561038a57600080fd5b506103a560048036038101906103a09190613902565b6130db565b6040516103b29190613d6b565b60405180910390f35b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361042b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042290613df8565b60405180910390fd5b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060000160149054906101000a900460ff166104ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c190613e8a565b60405180910390fd5b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060030154905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610594576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058b90613df8565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16636352211e846040518263ffffffff1660e01b81526004016105e49190613951565b602060405180830381865afa158015610601573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106259190613ebf565b73ffffffffffffffffffffffffffffffffffffffff161461067b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067290613f5e565b60405180910390fd5b600081116106be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106b590613ff0565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff1663f7d9757783836040518363ffffffff1660e01b81526004016106f9929190614010565b600060405180830381600087803b15801561071357600080fd5b505af1158015610727573d6000803e3d6000fd5b50505050505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361079f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079690613df8565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff16636352211e826040518263ffffffff1660e01b81526004016107d89190613951565b602060405180830381865afa1580156107f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108199190613ebf565b503073ffffffffffffffffffffffffffffffffffffffff1663cceb2a4c83836040518363ffffffff1660e01b8152600401610855929190614039565b602060405180830381865afa158015610872573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610896919061408e565b6108d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108cc9061412d565b60405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff16637b50315e83836040518363ffffffff1660e01b8152600401610910929190614039565b602060405180830381865afa15801561092d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610951919061408e565b610990576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610987906141bf565b60405180910390fd5b60003073ffffffffffffffffffffffffffffffffffffffff166320a564e684846040518363ffffffff1660e01b81526004016109cd929190614039565b602060405180830381865afa1580156109ea573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a0e91906141f4565b905060008373ffffffffffffffffffffffffffffffffffffffff16636352211e846040518263ffffffff1660e01b8152600401610a4b9190613951565b602060405180830381865afa158015610a68573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8c9190613ebf565b905060003073ffffffffffffffffffffffffffffffffffffffff1663d35bfa9586866040518363ffffffff1660e01b8152600401610acb929190614039565b602060405180830381865afa158015610ae8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b0c9190613ebf565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b7d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7490614293565b60405180910390fd5b6000831115610f575760008273ffffffffffffffffffffffffffffffffffffffff1684604051610bac906142e4565b60006040518083038185875af1925050503d8060008114610be9576040519150601f19603f3d011682016040523d82523d6000602084013e610bee565b606091505b5050905080610c32576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c299061436b565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614610f4b578573ffffffffffffffffffffffffffffffffffffffff1663f7d9757786866040518363ffffffff1660e01b8152600401610ca0929190614010565b600060405180830381600087803b158015610cba57600080fd5b505af1158015610cce573d6000803e3d6000fd5b505050503073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1663081812fc876040518263ffffffff1660e01b8152600401610d229190613951565b602060405180830381865afa158015610d3f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d639190613ebf565b73ffffffffffffffffffffffffffffffffffffffff1614610db9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610db0906143ae565b60405180910390fd5b8573ffffffffffffffffffffffffffffffffffffffff166342842e0e8484886040518463ffffffff1660e01b8152600401610df6939291906143ce565b600060405180830381600087803b158015610e1057600080fd5b505af1158015610e24573d6000803e3d6000fd5b505050508573ffffffffffffffffffffffffffffffffffffffff1663f7d975778660006040518363ffffffff1660e01b8152600401610e64929190614440565b600060405180830381600087803b158015610e7e57600080fd5b505af1158015610e92573d6000803e3d6000fd5b505050507f8146a1050e7850dd9a48240ef51ee45f907a45710d3c5136077e83e633c3ebe18673ffffffffffffffffffffffffffffffffffffffff166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa158015610f02573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610f2b91906144d9565b8787868689604051610f4296959493929190614522565b60405180910390a15b610f558686613265565b505b5050505050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610fce576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fc590613df8565b60405180910390fd5b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060000160149054906101000a900460ff1661106d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161106490613e8a565b60405180910390fd5b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060060180549050905092915050565b60608273ffffffffffffffffffffffffffffffffffffffff16636352211e836040518263ffffffff1660e01b81526004016111069190613951565b602060405180830381865afa158015611123573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111479190613ebf565b508273ffffffffffffffffffffffffffffffffffffffff1663c87b56dd836040518263ffffffff1660e01b81526004016111819190613951565b600060405180830381865afa15801561119e573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906111c791906144d9565b905092915050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611264576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161125b90613df8565b60405180910390fd5b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411611336576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161132d906145fc565b60405180910390fd5b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060050160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060003373ffffffffffffffffffffffffffffffffffffffff168260405161151a906142e4565b60006040518083038185875af1925050503d8060008114611557576040519150601f19603f3d011682016040523d82523d6000602084013e61155c565b606091505b50509050806115a0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115979061468e565b60405180910390fd5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611615576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161160c90613df8565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146116f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116ec90614720565b60405180910390fd5b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060000160149054906101000a900460ff1615611795576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161178c906147b2565b60405180910390fd5b600081116117d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117cf90614844565b60405180910390fd5b80426117e49190614893565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060010181905550336000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550346000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008481526020019081526020016000206003018190555060016000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060000160146101000a81548160ff0219169083151502179055506000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020600601339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550346000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060050160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611adf9190614893565b925050819055507f881afad1f847f87e78464b076756f7b1016a2062fbff555c3c4992527cc2dbe0838333604051611b19939291906148e9565b60405180910390a1505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611b95576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b8c90613df8565b60405180910390fd5b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082815260200190815260200160002060000160149054906101000a900460ff16611c34576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c2b90613e8a565b60405180910390fd5b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828152602001908152602001600020600101544210611cc8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611cbf9061496c565b60405180910390fd5b6103e86000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206006018054905010611d61576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d58906149fe565b60405180910390fd5b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082815260200190815260200160002060030154346000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060050160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611e4f9190614893565b11611e8f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e8690614a6a565b60405180910390fd5b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206003015414612054576000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828152602001908152602001600020600301546000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060040160008060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461204c9190614893565b925050819055505b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060050160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020540361219f576000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828152602001908152602001600020600601339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b346000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060050160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461223e9190614893565b925050819055506000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082815260200190815260200160002060050160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060030181905550336000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507ffab03ca36a06bc40a01733649a187387b026bc61b5ce7c1f2e0db35ff066bda88282336000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000868152602001908152602001600020600301546040516124d89493929190614a8a565b60405180910390a15050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603612554576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161254b90613df8565b60405180910390fd5b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060000160149054906101000a900460ff166125f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016125ea90613e8a565b60405180910390fd5b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060010154421015905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16036126c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016126b790613df8565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff160361272f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161272690614b41565b60405180910390fd5b8573ffffffffffffffffffffffffffffffffffffffff1663338e111e863387878787600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660008060006040518b63ffffffff1660e01b815260040161279e9a99989796959493929190614b61565b6020604051808303816000875af11580156127bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127e191906141f4565b50505050505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603612859576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161285090613df8565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff1663e7572230836040518263ffffffff1660e01b81526004016128949190613951565b602060405180830381865afa1580156128b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128d591906141f4565b90506000811161291a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161291190614c65565b60405180910390fd5b80600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401612978929190614c85565b602060405180830381865afa158015612995573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129b991906141f4565b10156129fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016129f190614cfa565b60405180910390fd5b60008373ffffffffffffffffffffffffffffffffffffffff16636352211e846040518263ffffffff1660e01b8152600401612a359190613951565b602060405180830381865afa158015612a52573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a769190613ebf565b90506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83856040518363ffffffff1660e01b8152600401612ad7929190614039565b6020604051808303816000875af1158015612af6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b1a919061408e565b905080612b5c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612b5390614d8c565b60405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1663081812fc866040518263ffffffff1660e01b8152600401612bac9190613951565b602060405180830381865afa158015612bc9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612bed9190613ebf565b73ffffffffffffffffffffffffffffffffffffffff1614612c43576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612c3a906143ae565b60405180910390fd5b8473ffffffffffffffffffffffffffffffffffffffff166342842e0e8333876040518463ffffffff1660e01b8152600401612c80939291906143ce565b600060405180830381600087803b158015612c9a57600080fd5b505af1158015612cae573d6000803e3d6000fd5b505050508473ffffffffffffffffffffffffffffffffffffffff1663f7d975778560006040518363ffffffff1660e01b8152600401612cee929190614440565b600060405180830381600087803b158015612d0857600080fd5b505af1158015612d1c573d6000803e3d6000fd5b505050507f8146a1050e7850dd9a48240ef51ee45f907a45710d3c5136077e83e633c3ebe18573ffffffffffffffffffffffffffffffffffffffff166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa158015612d8c573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190612db591906144d9565b8686853388604051612dcc96959493929190614522565b60405180910390a15050505050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603612e4b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612e4290613df8565b60405180910390fd5b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060000160149054906101000a900460ff16905092915050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603612f23576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612f1a90613df8565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16636352211e846040518263ffffffff1660e01b8152600401612f739190613951565b602060405180830381865afa158015612f90573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612fb49190613ebf565b73ffffffffffffffffffffffffffffffffffffffff161461300a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161300190613f5e565b60405180910390fd5b60008373ffffffffffffffffffffffffffffffffffffffff1663e7572230846040518263ffffffff1660e01b81526004016130459190613951565b602060405180830381865afa158015613062573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061308691906141f4565b146130c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016130bd90614df8565b60405180910390fd5b6130d1838333613677565b6001905092915050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361314b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161314290613df8565b60405180910390fd5b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060000160149054906101000a900460ff166131ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016131e190613e8a565b60405180910390fd5b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905092915050565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060000160146101000a81548160ff02191690831515021790555060008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206006018054905090506000808290505b6000811115613511576000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002060060160018261342b9190614e18565b8154811061343c5761343b614e4c565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915060008060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600086815260200190815260200160002060050160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550808061350990614e7b565b9150506133c3565b506000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008481526020019081526020016000206006016000613570919061381c565b7ff821246114f0eb7e6c237eb13dac30e0cae5c2f953eef99ca5c103d3ce0d639584846000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600087815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000888152602001908152602001600020600301546040516136699493929190614a8a565b60405180910390a150505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036136e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016136dd90613df8565b60405180910390fd5b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060000160149054906101000a900460ff1615613786576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161377d906147b2565b60405180910390fd5b806000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b508054600082559060005260206000209081019061383a919061383d565b50565b5b8082111561385657600081600090555060010161383e565b5090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006138998261386e565b9050919050565b6138a98161388e565b81146138b457600080fd5b50565b6000813590506138c6816138a0565b92915050565b6000819050919050565b6138df816138cc565b81146138ea57600080fd5b50565b6000813590506138fc816138d6565b92915050565b6000806040838503121561391957613918613864565b5b6000613927858286016138b7565b9250506020613938858286016138ed565b9150509250929050565b61394b816138cc565b82525050565b60006020820190506139666000830184613942565b92915050565b60008060006060848603121561398557613984613864565b5b6000613993868287016138b7565b93505060206139a4868287016138ed565b92505060406139b5868287016138ed565b9150509250925092565b600081519050919050565b600082825260208201905092915050565b60005b838110156139f95780820151818401526020810190506139de565b83811115613a08576000848401525b50505050565b6000601f19601f8301169050919050565b6000613a2a826139bf565b613a3481856139ca565b9350613a448185602086016139db565b613a4d81613a0e565b840191505092915050565b60006020820190508181036000830152613a728184613a1f565b905092915050565b6000819050919050565b6000613a9f613a9a613a958461386e565b613a7a565b61386e565b9050919050565b6000613ab182613a84565b9050919050565b6000613ac382613aa6565b9050919050565b613ad381613ab8565b82525050565b6000602082019050613aee6000830184613aca565b92915050565b60008115159050919050565b613b0981613af4565b82525050565b6000602082019050613b246000830184613b00565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b613b6c82613a0e565b810181811067ffffffffffffffff82111715613b8b57613b8a613b34565b5b80604052505050565b6000613b9e61385a565b9050613baa8282613b63565b919050565b600067ffffffffffffffff821115613bca57613bc9613b34565b5b613bd382613a0e565b9050602081019050919050565b82818337600083830152505050565b6000613c02613bfd84613baf565b613b94565b905082815260208101848484011115613c1e57613c1d613b2f565b5b613c29848285613be0565b509392505050565b600082601f830112613c4657613c45613b2a565b5b8135613c56848260208601613bef565b91505092915050565b60008060008060008060c08789031215613c7c57613c7b613864565b5b6000613c8a89828a016138b7565b9650506020613c9b89828a016138b7565b955050604087013567ffffffffffffffff811115613cbc57613cbb613869565b5b613cc889828a01613c31565b945050606087013567ffffffffffffffff811115613ce957613ce8613869565b5b613cf589828a01613c31565b935050608087013567ffffffffffffffff811115613d1657613d15613869565b5b613d2289828a01613c31565b92505060a087013567ffffffffffffffff811115613d4357613d42613869565b5b613d4f89828a01613c31565b9150509295509295509295565b613d658161388e565b82525050565b6000602082019050613d806000830184613d5c565b92915050565b7f54686520636f6c6c656374696f6e2061646472657373206e6565647320746f2060008201527f626520646966666572656e742066726f6d207a65726f2e000000000000000000602082015250565b6000613de26037836139ca565b9150613ded82613d86565b604082019050919050565b60006020820190508181036000830152613e1181613dd5565b9050919050565b7f5468657265206973206e6f2061756374696f6e207374617274656420666f722060008201527f74686973204e46542e0000000000000000000000000000000000000000000000602082015250565b6000613e746029836139ca565b9150613e7f82613e18565b604082019050919050565b60006020820190508181036000830152613ea381613e67565b9050919050565b600081519050613eb9816138a0565b92915050565b600060208284031215613ed557613ed4613864565b5b6000613ee384828501613eaa565b91505092915050565b7f54686973204e465420646f6573206e6f742062656c6f6e6720746f207468652060008201527f63757272656e74206d6573736167652073656e6465722e000000000000000000602082015250565b6000613f486037836139ca565b9150613f5382613eec565b604082019050919050565b60006020820190508181036000830152613f7781613f3b565b9050919050565b7f506c6561736520646566696e6520612073656c6c696e6720707269636520686960008201527f67686572207468616e207a65726f2e0000000000000000000000000000000000602082015250565b6000613fda602f836139ca565b9150613fe582613f7e565b604082019050919050565b6000602082019050818103600083015261400981613fcd565b9050919050565b60006040820190506140256000830185613942565b6140326020830184613942565b9392505050565b600060408201905061404e6000830185613d5c565b61405b6020830184613942565b9392505050565b61406b81613af4565b811461407657600080fd5b50565b60008151905061408881614062565b92915050565b6000602082840312156140a4576140a3613864565b5b60006140b284828501614079565b91505092915050565b7f54686973204e465420646964206e6f7420737461727420616e2061756374696f60008201527f6e2e000000000000000000000000000000000000000000000000000000000000602082015250565b60006141176022836139ca565b9150614122826140bb565b604082019050919050565b600060208201905081810360008301526141468161410a565b9050919050565b7f5468652061756374696f6e20686173206e6f742066696e69736865642079657460008201527f2e00000000000000000000000000000000000000000000000000000000000000602082015250565b60006141a96021836139ca565b91506141b48261414d565b604082019050919050565b600060208201905081810360008301526141d88161419c565b9050919050565b6000815190506141ee816138d6565b92915050565b60006020828403121561420a57614209613864565b5b6000614218848285016141df565b91505092915050565b7f4572726f723a207468652068696768657374206269646465722069732074686560008201527f207a65726f20616464726573732e000000000000000000000000000000000000602082015250565b600061427d602e836139ca565b915061428882614221565b604082019050919050565b600060208201905081810360008301526142ac81614270565b9050919050565b600081905092915050565b50565b60006142ce6000836142b3565b91506142d9826142be565b600082019050919050565b60006142ef826142c1565b9150819050919050565b7f4661696c656420746f2073656e642045544820746f20746865204e4654206f7760008201527f6e65722e00000000000000000000000000000000000000000000000000000000602082015250565b60006143556024836139ca565b9150614360826142f9565b604082019050919050565b6000602082019050818103600083015261438481614348565b9050919050565b60006143986000836139ca565b91506143a3826142be565b600082019050919050565b600060208201905081810360008301526143c78161438b565b9050919050565b60006060820190506143e36000830186613d5c565b6143f06020830185613d5c565b6143fd6040830184613942565b949350505050565b6000819050919050565b600061442a61442561442084614405565b613a7a565b6138cc565b9050919050565b61443a8161440f565b82525050565b60006040820190506144556000830185613942565b6144626020830184614431565b9392505050565b600061447c61447784613baf565b613b94565b90508281526020810184848401111561449857614497613b2f565b5b6144a38482856139db565b509392505050565b600082601f8301126144c0576144bf613b2a565b5b81516144d0848260208601614469565b91505092915050565b6000602082840312156144ef576144ee613864565b5b600082015167ffffffffffffffff81111561450d5761450c613869565b5b614519848285016144ab565b91505092915050565b600060c082019050818103600083015261453c8189613a1f565b905061454b6020830188613d5c565b6145586040830187613942565b6145656060830186613d5c565b6145726080830185613d5c565b61457f60a0830184613942565b979650505050505050565b7f5468657265206973206e6f7468696e6720746f20726566756e6420746f20746860008201527f65206d6573736167652073656e64657220666f722074686973204e46542e0000602082015250565b60006145e6603e836139ca565b91506145f18261458a565b604082019050919050565b60006020820190508181036000830152614615816145d9565b9050919050565b7f4661696c656420746f2073656e642045544820746f207468652072657175657360008201527f7465722e00000000000000000000000000000000000000000000000000000000602082015250565b60006146786024836139ca565b91506146838261461c565b604082019050919050565b600060208201905081810360008301526146a78161466b565b9050919050565b7f5468652076616c6964697479206f66207468652061756374696f6e206861732060008201527f6e6f74206265656e2076657269666965642c2079657400000000000000000000602082015250565b600061470a6036836139ca565b9150614715826146ae565b604082019050919050565b60006020820190508181036000830152614739816146fd565b9050919050565b7f416e2061756374696f6e2068617320616c72656164792073746172746564206660008201527f6f722074686973204e46542e0000000000000000000000000000000000000000602082015250565b600061479c602c836139ca565b91506147a782614740565b604082019050919050565b600060208201905081810360008301526147cb8161478f565b9050919050565b7f506c6561736520646566696e6520616e2061756374696f6e206869676865722060008201527f7468616e207a65726f2e00000000000000000000000000000000000000000000602082015250565b600061482e602a836139ca565b9150614839826147d2565b604082019050919050565b6000602082019050818103600083015261485d81614821565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061489e826138cc565b91506148a9836138cc565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156148de576148dd614864565b5b828201905092915050565b60006060820190506148fe6000830186613d5c565b61490b6020830185613942565b6149186040830184613d5c565b949350505050565b7f5468652061756374696f6e2068617320616c726561647920656e6465642e0000600082015250565b6000614956601e836139ca565b915061496182614920565b602082019050919050565b6000602082019050818103600083015261498581614949565b9050919050565b7f546869732061756374696f6e20616368696576656420746865206d6178696d7560008201527f6d20616d6f756e74206f6620626964732e000000000000000000000000000000602082015250565b60006149e86031836139ca565b91506149f38261498c565b604082019050919050565b60006020820190508181036000830152614a17816149db565b9050919050565b7f5468652062696420697320746f6f206c6f772e00000000000000000000000000600082015250565b6000614a546013836139ca565b9150614a5f82614a1e565b602082019050919050565b60006020820190508181036000830152614a8381614a47565b9050919050565b6000608082019050614a9f6000830187613d5c565b614aac6020830186613942565b614ab96040830185613d5c565b614ac66060830184613942565b95945050505050565b7f54686520757365722061646472657373206e6565647320746f2062652064696660008201527f666572656e742066726f6d207a65726f2e000000000000000000000000000000602082015250565b6000614b2b6031836139ca565b9150614b3682614acf565b604082019050919050565b60006020820190508181036000830152614b5a81614b1e565b9050919050565b600061014082019050614b77600083018d613d5c565b614b84602083018c613d5c565b8181036040830152614b96818b613a1f565b90508181036060830152614baa818a613a1f565b90508181036080830152614bbe8189613a1f565b905081810360a0830152614bd28188613a1f565b9050614be160c0830187613d5c565b614bee60e0830186614431565b614bfc610100830185613b00565b614c0a610120830184613b00565b9b9a5050505050505050505050565b7f54686973204e4654206973206e6f7420666f722073616c652e00000000000000600082015250565b6000614c4f6019836139ca565b9150614c5a82614c19565b602082019050919050565b60006020820190508181036000830152614c7e81614c42565b9050919050565b6000604082019050614c9a6000830185613d5c565b614ca76020830184613d5c565b9392505050565b7f43594f4e20746f6b656e20616c6c6f77616e636520746f6f206c6f772e000000600082015250565b6000614ce4601d836139ca565b9150614cef82614cae565b602082019050919050565b60006020820190508181036000830152614d1381614cd7565b9050919050565b7f4661696c656420746f2073656e642043594f4e20746f20746865204e4654206f60008201527f776e65722e000000000000000000000000000000000000000000000000000000602082015250565b6000614d766025836139ca565b9150614d8182614d1a565b604082019050919050565b60006020820190508181036000830152614da581614d69565b9050919050565b7f54686973204e465420697320616c726561647920666f722073616c652e000000600082015250565b6000614de2601d836139ca565b9150614ded82614dac565b602082019050919050565b60006020820190508181036000830152614e1181614dd5565b9050919050565b6000614e23826138cc565b9150614e2e836138cc565b925082821015614e4157614e40614864565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000614e86826138cc565b915060008203614e9957614e98614864565b5b60018203905091905056fea26469706673582212202c95eee611b3461a620045678d62ad819658671365a5d7653dc8ef240e05944f64736f6c634300080d0033",
  "deployedBytecode": "",
>>>>>>> Stashed changes
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1199:20",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:20",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:20",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:20"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:20",
                "type": ""
              }
            ],
            "src": "7:75:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:20",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:20",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:20"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:20",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:20",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:20"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:81:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:65:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "404:5:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "411:42:20",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "400:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "400:54:20"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:20"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:20",
                "type": ""
              }
            ],
            "src": "334:126:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:51:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "521:35:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "550:5:20"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "532:17:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "532:24:20"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "521:7:20"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "493:5:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "503:7:20",
                "type": ""
              }
            ],
            "src": "466:96:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "611:79:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "668:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "677:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "680:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "670:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "670:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "670:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "634:5:20"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "659:5:20"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "641:17:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "641:24:20"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "631:2:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "631:35:20"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "624:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "624:43:20"
                  },
                  "nodeType": "YulIf",
                  "src": "621:63:20"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "604:5:20",
                "type": ""
              }
            ],
            "src": "568:122:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "759:80:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "769:22:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "784:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "778:5:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "778:13:20"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "769:5:20"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "827:5:20"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "800:26:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "800:33:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "800:33:20"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "737:6:20",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "745:3:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "753:5:20",
                "type": ""
              }
            ],
            "src": "696:143:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "922:274:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "968:83:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "970:77:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "970:79:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "970:79:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "943:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "952:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "939:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "939:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "964:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "935:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "935:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "932:119:20"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1061:128:20",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1076:15:20",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1090:1:20",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1080:6:20",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1105:74:20",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1151:9:20"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1162:6:20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1147:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1147:22:20"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1171:7:20"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1115:31:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1115:64:20"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1105:6:20"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "892:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "903:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "915:6:20",
                "type": ""
              }
            ],
            "src": "845:351:20"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
      "id": 20,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
<<<<<<< Updated upstream
        "src": "0:25870:20",
=======
        "src": "0:42632:16",
>>>>>>> Stashed changes
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:20",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:20",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:20"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:20",
                "type": ""
              }
            ],
            "src": "7:75:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:20",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:20",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:20"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:20",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:20",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:20"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:81:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:65:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "404:5:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "411:42:20",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "400:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "400:54:20"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:20"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:20",
                "type": ""
              }
            ],
            "src": "334:126:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:51:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "521:35:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "550:5:20"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "532:17:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "532:24:20"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "521:7:20"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "493:5:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "503:7:20",
                "type": ""
              }
            ],
            "src": "466:96:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "611:79:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "668:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "677:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "680:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "670:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "670:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "670:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "634:5:20"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "659:5:20"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "641:17:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "641:24:20"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "631:2:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "631:35:20"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "624:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "624:43:20"
                  },
                  "nodeType": "YulIf",
                  "src": "621:63:20"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "604:5:20",
                "type": ""
              }
            ],
            "src": "568:122:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "748:87:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "758:29:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "780:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "767:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "767:20:20"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "758:5:20"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "823:5:20"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "796:26:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "796:33:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "796:33:20"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "726:6:20",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "734:3:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "742:5:20",
                "type": ""
              }
            ],
            "src": "696:139:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "886:32:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "896:16:20",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "907:5:20"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "896:7:20"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "868:5:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "878:7:20",
                "type": ""
              }
            ],
            "src": "841:77:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "967:79:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1024:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1033:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1036:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1026:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1026:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1026:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "990:5:20"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1015:5:20"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "997:17:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "997:24:20"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "987:2:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "987:35:20"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "980:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "980:43:20"
                  },
                  "nodeType": "YulIf",
                  "src": "977:63:20"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "960:5:20",
                "type": ""
              }
            ],
            "src": "924:122:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1104:87:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1114:29:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1136:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1123:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1123:20:20"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1114:5:20"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1179:5:20"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "1152:26:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1152:33:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1152:33:20"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1082:6:20",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1090:3:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1098:5:20",
                "type": ""
              }
            ],
            "src": "1052:139:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< Updated upstream
              "src": "1297:519:20",
=======
              "src": "1280:391:16",
>>>>>>> Stashed changes
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
<<<<<<< Updated upstream
                    "src": "1343:83:20",
=======
                    "src": "1326:83:16",
>>>>>>> Stashed changes
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                            "src": "1345:77:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1345:79:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1345:79:20"
=======
                            "src": "1328:77:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1328:79:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1328:79:16"
>>>>>>> Stashed changes
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                            "src": "1318:7:20"
=======
                            "src": "1301:7:16"
>>>>>>> Stashed changes
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                            "src": "1327:9:20"
=======
                            "src": "1310:9:16"
>>>>>>> Stashed changes
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                          "src": "1314:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1314:23:20"
=======
                          "src": "1297:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1297:23:16"
>>>>>>> Stashed changes
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< Updated upstream
                        "src": "1339:2:20",
=======
                        "src": "1322:2:16",
>>>>>>> Stashed changes
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "1310:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1310:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "1307:119:20"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1436:117:20",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1451:15:20",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1465:1:20",
=======
                      "src": "1293:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1293:32:16"
                  },
                  "nodeType": "YulIf",
                  "src": "1290:119:16"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1419:117:16",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1434:15:16",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1448:1:16",
>>>>>>> Stashed changes
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
<<<<<<< Updated upstream
                          "src": "1455:6:20",
=======
                          "src": "1438:6:16",
>>>>>>> Stashed changes
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
<<<<<<< Updated upstream
                      "src": "1480:63:20",
=======
                      "src": "1463:63:16",
>>>>>>> Stashed changes
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                                "src": "1515:9:20"
=======
                                "src": "1498:9:16"
>>>>>>> Stashed changes
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                                "src": "1526:6:20"
=======
                                "src": "1509:6:16"
>>>>>>> Stashed changes
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                              "src": "1511:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1511:22:20"
=======
                              "src": "1494:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1494:22:16"
>>>>>>> Stashed changes
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                            "src": "1535:7:20"
=======
                            "src": "1518:7:16"
>>>>>>> Stashed changes
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                          "src": "1490:20:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1490:53:20"
=======
                          "src": "1473:20:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1473:53:16"
>>>>>>> Stashed changes
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                          "src": "1480:6:20"
=======
                          "src": "1463:6:16"
>>>>>>> Stashed changes
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
<<<<<<< Updated upstream
                  "src": "1563:118:20",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1578:16:20",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1592:2:20",
=======
                  "src": "1546:118:16",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1561:16:16",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1575:2:16",
>>>>>>> Stashed changes
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
<<<<<<< Updated upstream
                          "src": "1582:6:20",
=======
                          "src": "1565:6:16",
>>>>>>> Stashed changes
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
<<<<<<< Updated upstream
                      "src": "1608:63:20",
=======
                      "src": "1591:63:16",
>>>>>>> Stashed changes
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                                "src": "1643:9:20"
=======
                                "src": "1626:9:16"
>>>>>>> Stashed changes
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                                "src": "1654:6:20"
=======
                                "src": "1637:6:16"
>>>>>>> Stashed changes
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                              "src": "1639:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1639:22:20"
=======
                              "src": "1622:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1622:22:16"
>>>>>>> Stashed changes
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                            "src": "1663:7:20"
=======
                            "src": "1646:7:16"
>>>>>>> Stashed changes
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                          "src": "1618:20:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1618:53:20"
=======
                          "src": "1601:20:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1601:53:16"
>>>>>>> Stashed changes
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                          "src": "1608:6:20"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1691:118:20",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1706:16:20",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1720:2:20",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1710:6:20",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1736:63:20",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1771:9:20"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1782:6:20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1767:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1767:22:20"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1791:7:20"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1746:20:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1746:53:20"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "1736:6:20"
=======
                          "src": "1591:6:16"
>>>>>>> Stashed changes
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
<<<<<<< Updated upstream
                "src": "1251:9:20",
=======
                "src": "1242:9:16",
>>>>>>> Stashed changes
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
<<<<<<< Updated upstream
                "src": "1262:7:20",
=======
                "src": "1253:7:16",
>>>>>>> Stashed changes
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
<<<<<<< Updated upstream
                "src": "1274:6:20",
=======
                "src": "1265:6:16",
>>>>>>> Stashed changes
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
<<<<<<< Updated upstream
                "src": "1282:6:20",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1290:6:20",
                "type": ""
              }
            ],
            "src": "1197:619:20"
=======
                "src": "1273:6:16",
                "type": ""
              }
            ],
            "src": "1197:474:16"
>>>>>>> Stashed changes
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< Updated upstream
              "src": "1905:391:20",
=======
              "src": "1742:53:16",
>>>>>>> Stashed changes
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1951:83:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1953:77:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1953:79:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1953:79:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
<<<<<<< Updated upstream
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1926:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1935:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1922:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1922:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1947:2:20",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1918:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1918:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "1915:119:20"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2044:117:20",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2059:15:20",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2073:1:20",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2063:6:20",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2088:63:20",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2123:9:20"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2134:6:20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2119:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2119:22:20"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2143:7:20"
=======
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1759:3:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1782:5:16"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1764:17:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1764:24:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1752:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1752:37:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1752:37:16"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1730:5:16",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1737:3:16",
                "type": ""
              }
            ],
            "src": "1677:118:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1899:124:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1909:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1921:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1932:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1917:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1917:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1909:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1989:6:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2002:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2013:1:16",
                            "type": "",
                            "value": "0"
>>>>>>> Stashed changes
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                          "src": "2098:20:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2098:53:20"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2088:6:20"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2171:118:20",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2186:16:20",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2200:2:20",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2190:6:20",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2216:63:20",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2251:9:20"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2262:6:20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2247:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2247:22:20"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2271:7:20"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2226:20:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2226:53:20"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2216:6:20"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1867:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1878:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1890:6:20",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1898:6:20",
                "type": ""
              }
            ],
            "src": "1822:474:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2361:40:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2372:22:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2388:5:20"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2382:5:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2382:12:20"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "2372:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_string_memory_ptr",
=======
                          "src": "1998:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1998:17:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1945:43:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1945:71:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1945:71:16"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
>>>>>>> Stashed changes
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1871:9:16",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
<<<<<<< Updated upstream
                "src": "2344:5:20",
=======
                "src": "1883:6:16",
>>>>>>> Stashed changes
                "type": ""
              }
            ],
            "returnVariables": [
              {
<<<<<<< Updated upstream
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2354:6:20",
                "type": ""
              }
            ],
            "src": "2302:99:20"
=======
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1894:4:16",
                "type": ""
              }
            ],
            "src": "1801:222:16"
>>>>>>> Stashed changes
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< Updated upstream
              "src": "2503:73:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2520:3:20"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2525:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2513:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2513:19:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2513:19:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2541:29:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2560:3:20"
=======
              "src": "2129:519:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2175:83:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "2177:77:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2177:79:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2177:79:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2150:7:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2159:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2146:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2146:23:16"
>>>>>>> Stashed changes
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< Updated upstream
                        "src": "2565:4:20",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2556:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2556:14:20"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "2541:11:20"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2475:3:20",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2480:6:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "2491:11:20",
                "type": ""
              }
            ],
            "src": "2407:169:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2631:258:20",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2641:10:20",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2650:1:20",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "2645:1:20",
                      "type": ""
=======
                        "src": "2171:2:16",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2142:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2142:32:16"
                  },
                  "nodeType": "YulIf",
                  "src": "2139:119:16"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2268:117:16",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2283:15:16",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2297:1:16",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2287:6:16",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2312:63:16",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2347:9:16"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2358:6:16"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2343:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2343:22:16"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2367:7:16"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2322:20:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2322:53:16"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2312:6:16"
                        }
                      ]
>>>>>>> Stashed changes
                    }
                  ]
                },
                {
<<<<<<< Updated upstream
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2710:63:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "2735:3:20"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "2740:1:20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2731:3:20"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2731:11:20"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "2754:3:20"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "2759:1:20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2750:3:20"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2750:11:20"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "2744:5:20"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2744:18:20"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2724:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2724:39:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2724:39:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "2671:1:20"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2674:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "2668:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2668:13:20"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "2682:19:20",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2684:15:20",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "2693:1:20"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2696:2:20",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2689:3:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2689:10:20"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "2684:1:20"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "2664:3:20",
                    "statements": []
                  },
                  "src": "2660:113:20"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2807:76:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "2857:3:20"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "2862:6:20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2853:3:20"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2853:16:20"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2871:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2846:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2846:27:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2846:27:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "2788:1:20"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2791:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2785:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2785:13:20"
                  },
                  "nodeType": "YulIf",
                  "src": "2782:101:20"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "2613:3:20",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "2618:3:20",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2623:6:20",
                "type": ""
              }
            ],
            "src": "2582:307:20"
=======
                  "nodeType": "YulBlock",
                  "src": "2395:118:16",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2410:16:16",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2424:2:16",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2414:6:16",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2440:63:16",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2475:9:16"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2486:6:16"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2471:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2471:22:16"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2495:7:16"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2450:20:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2450:53:16"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2440:6:16"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2523:118:16",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2538:16:16",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2552:2:16",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2542:6:16",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2568:63:16",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2603:9:16"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2614:6:16"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2599:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2599:22:16"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2623:7:16"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2578:20:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2578:53:16"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "2568:6:16"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2083:9:16",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2094:7:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2106:6:16",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2114:6:16",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2122:6:16",
                "type": ""
              }
            ],
            "src": "2029:619:16"
>>>>>>> Stashed changes
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< Updated upstream
              "src": "2943:54:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2953:38:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2971:5:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2978:2:20",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2967:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2967:14:20"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2987:2:20",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "2983:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2983:7:20"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "2963:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2963:28:20"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "2953:6:20"
=======
              "src": "2713:40:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2724:22:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2740:5:16"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2734:5:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2734:12:16"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "2724:6:16"
>>>>>>> Stashed changes
                    }
                  ]
                }
              ]
            },
<<<<<<< Updated upstream
            "name": "round_up_to_mul_of_32",
=======
            "name": "array_length_t_string_memory_ptr",
>>>>>>> Stashed changes
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< Updated upstream
                "src": "2926:5:20",
=======
                "src": "2696:5:16",
>>>>>>> Stashed changes
                "type": ""
              }
            ],
            "returnVariables": [
              {
<<<<<<< Updated upstream
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "2936:6:20",
                "type": ""
              }
            ],
            "src": "2895:102:20"
=======
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2706:6:16",
                "type": ""
              }
            ],
            "src": "2654:99:16"
>>>>>>> Stashed changes
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< Updated upstream
              "src": "3095:272:20",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3105:53:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3152:5:20"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "3119:32:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3119:39:20"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "3109:6:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3167:78:20",
=======
              "src": "2855:73:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2872:3:16"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2877:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2865:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2865:19:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2865:19:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2893:29:16",
>>>>>>> Stashed changes
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                        "src": "3233:3:20"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3238:6:20"
=======
                        "src": "2912:3:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2917:4:16",
                        "type": "",
                        "value": "0x20"
>>>>>>> Stashed changes
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "3174:58:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3174:71:20"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3167:3:20"
                    }
                  ]
                },
=======
                      "src": "2908:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2908:14:16"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "2893:11:16"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2827:3:16",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2832:6:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "2843:11:16",
                "type": ""
              }
            ],
            "src": "2759:169:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2983:258:16",
              "statements": [
>>>>>>> Stashed changes
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2993:10:16",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "3002:1:16",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "2997:1:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3062:63:16",
                    "statements": [
                      {
<<<<<<< Updated upstream
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3280:5:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3287:4:20",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3276:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3276:16:20"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3294:3:20"
=======
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "3087:3:16"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "3092:1:16"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3083:3:16"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3083:11:16"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "3106:3:16"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "3111:1:16"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "3102:3:16"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3102:11:16"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "3096:5:16"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3096:18:16"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3076:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3076:39:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3076:39:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "3023:1:16"
>>>>>>> Stashed changes
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                        "src": "3299:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "3254:21:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3254:52:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3254:52:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3315:46:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3326:3:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "3353:6:20"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "3331:21:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3331:29:20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3322:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3322:39:20"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3315:3:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
=======
                        "src": "3026:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "3020:2:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3020:13:16"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "3034:19:16",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3036:15:16",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "3045:1:16"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3048:2:16",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "3041:3:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3041:10:16"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "3036:1:16"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "3016:3:16",
                    "statements": []
                  },
                  "src": "3012:113:16"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3159:76:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "3209:3:16"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "3214:6:16"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3205:3:16"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3205:16:16"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3223:1:16",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3198:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3198:27:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3198:27:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "3140:1:16"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3143:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3137:2:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3137:13:16"
                  },
                  "nodeType": "YulIf",
                  "src": "3134:101:16"
                }
              ]
            },
            "name": "copy_memory_to_memory",
>>>>>>> Stashed changes
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< Updated upstream
                "src": "3076:5:20",
=======
                "src": "2965:3:16",
>>>>>>> Stashed changes
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
<<<<<<< Updated upstream
                "src": "3083:3:20",
=======
                "src": "2970:3:16",
>>>>>>> Stashed changes
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
<<<<<<< Updated upstream
                "src": "3091:3:20",
                "type": ""
              }
            ],
            "src": "3003:364:20"
=======
                "src": "2975:6:16",
                "type": ""
              }
            ],
            "src": "2934:307:16"
>>>>>>> Stashed changes
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< Updated upstream
              "src": "3491:195:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3501:26:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3513:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3524:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3509:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3509:18:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3501:4:20"
=======
              "src": "3295:54:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3305:38:16",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3323:5:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3330:2:16",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3319:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3319:14:16"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3339:2:16",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "3335:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3335:7:16"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "3315:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3315:28:16"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "3305:6:16"
>>>>>>> Stashed changes
                    }
                  ]
                }
              ]
            },
            "name": "round_up_to_mul_of_32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3278:5:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "3288:6:16",
                "type": ""
              }
            ],
            "src": "3247:102:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3447:272:16",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3457:53:16",
                  "value": {
                    "arguments": [
                      {
<<<<<<< Updated upstream
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3548:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3559:1:20",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3544:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3544:17:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "3567:4:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3573:9:20"
=======
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3504:5:16"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "3471:32:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3471:39:16"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "3461:6:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3519:78:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3585:3:16"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3590:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3526:58:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3526:71:16"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3519:3:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3632:5:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3639:4:16",
                            "type": "",
                            "value": "0x20"
>>>>>>> Stashed changes
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                          "src": "3563:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3563:20:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3537:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3537:47:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3537:47:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3593:86:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3665:6:20"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "3674:4:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3601:63:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3601:78:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3593:4:20"
=======
                          "src": "3628:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3628:16:16"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3646:3:16"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3651:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "3606:21:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3606:52:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3606:52:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3667:46:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3678:3:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "3705:6:16"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "3683:21:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3683:29:16"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3674:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3674:39:16"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3667:3:16"
>>>>>>> Stashed changes
                    }
                  ]
                }
              ]
            },
<<<<<<< Updated upstream
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3463:9:20",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3475:6:20",
=======
            "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3428:5:16",
>>>>>>> Stashed changes
                "type": ""
              }
            ],
            "returnVariables": [
              {
<<<<<<< Updated upstream
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3486:4:20",
                "type": ""
              }
            ],
            "src": "3373:313:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3724:28:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3734:12:20",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3741:5:20"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "3734:3:20"
                    }
                  ]
                }
              ]
            },
            "name": "identity",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3710:5:20",
=======
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3435:3:16",
>>>>>>> Stashed changes
                "type": ""
              }
            ],
            "returnVariables": [
              {
<<<<<<< Updated upstream
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "3720:3:20",
                "type": ""
              }
            ],
            "src": "3692:60:20"
=======
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3443:3:16",
                "type": ""
              }
            ],
            "src": "3355:364:16"
>>>>>>> Stashed changes
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< Updated upstream
              "src": "3818:82:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3828:66:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3886:5:20"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint160",
                              "nodeType": "YulIdentifier",
                              "src": "3868:17:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3868:24:20"
=======
              "src": "3843:195:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3853:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3865:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3876:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3861:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3861:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3853:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3900:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3911:1:16",
                            "type": "",
                            "value": "0"
>>>>>>> Stashed changes
                          }
                        ],
                        "functionName": {
                          "name": "identity",
                          "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                          "src": "3859:8:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3859:34:20"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "3841:17:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3841:53:20"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "3828:9:20"
=======
                          "src": "3896:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3896:17:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "3919:4:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3925:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3915:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3915:20:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3889:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3889:47:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3889:47:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3945:86:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4017:6:16"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4026:4:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3953:63:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3953:78:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3945:4:16"
>>>>>>> Stashed changes
                    }
                  ]
                }
              ]
            },
<<<<<<< Updated upstream
            "name": "convert_t_uint160_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3798:5:20",
=======
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3815:9:16",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3827:6:16",
>>>>>>> Stashed changes
                "type": ""
              }
            ],
            "returnVariables": [
              {
<<<<<<< Updated upstream
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "3808:9:20",
                "type": ""
              }
            ],
            "src": "3758:142:20"
=======
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3838:4:16",
                "type": ""
              }
            ],
            "src": "3725:313:16"
>>>>>>> Stashed changes
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< Updated upstream
              "src": "3966:66:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3976:50:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4020:5:20"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "3989:30:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3989:37:20"
=======
              "src": "4076:28:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4086:12:16",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "4093:5:16"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "4086:3:16"
                    }
                  ]
                }
              ]
            },
            "name": "identity",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4062:5:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "4072:3:16",
                "type": ""
              }
            ],
            "src": "4044:60:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4170:82:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4180:66:16",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4238:5:16"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint160",
                              "nodeType": "YulIdentifier",
                              "src": "4220:17:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4220:24:16"
                          }
                        ],
                        "functionName": {
                          "name": "identity",
                          "nodeType": "YulIdentifier",
                          "src": "4211:8:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4211:34:16"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "4193:17:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4193:53:16"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "4180:9:16"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4150:5:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "4160:9:16",
                "type": ""
              }
            ],
            "src": "4110:142:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4318:66:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4328:50:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4372:5:16"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "4341:30:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4341:37:16"
>>>>>>> Stashed changes
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "3976:9:20"
=======
                      "src": "4328:9:16"
>>>>>>> Stashed changes
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< Updated upstream
                "src": "3946:5:20",
=======
                "src": "4298:5:16",
>>>>>>> Stashed changes
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
<<<<<<< Updated upstream
                "src": "3956:9:20",
                "type": ""
              }
            ],
            "src": "3906:126:20"
=======
                "src": "4308:9:16",
                "type": ""
              }
            ],
            "src": "4258:126:16"
>>>>>>> Stashed changes
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< Updated upstream
              "src": "4113:66:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4123:50:20",
=======
              "src": "4463:66:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4473:50:16",
>>>>>>> Stashed changes
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                        "src": "4167:5:20"
=======
                        "src": "4517:5:16"
>>>>>>> Stashed changes
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_address",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "4136:30:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4136:37:20"
=======
                      "src": "4486:30:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4486:37:16"
>>>>>>> Stashed changes
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "4123:9:20"
=======
                      "src": "4473:9:16"
>>>>>>> Stashed changes
                    }
                  ]
                }
              ]
            },
<<<<<<< Updated upstream
            "name": "convert_t_contract$_IERC20_$4032_to_t_address",
=======
            "name": "convert_t_contract$_IERC20_$77_to_t_address",
>>>>>>> Stashed changes
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< Updated upstream
                "src": "4093:5:20",
=======
                "src": "4443:5:16",
>>>>>>> Stashed changes
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
<<<<<<< Updated upstream
                "src": "4103:9:20",
                "type": ""
              }
            ],
            "src": "4038:141:20"
=======
                "src": "4453:9:16",
                "type": ""
              }
            ],
            "src": "4390:139:16"
>>>>>>> Stashed changes
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< Updated upstream
              "src": "4265:81:20",
=======
              "src": "4613:79:16",
>>>>>>> Stashed changes
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                        "src": "4282:3:20"
=======
                        "src": "4630:3:16"
>>>>>>> Stashed changes
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                            "src": "4333:5:20"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_IERC20_$4032_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "4287:45:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4287:52:20"
=======
                            "src": "4679:5:16"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_IERC20_$77_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "4635:43:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4635:50:16"
>>>>>>> Stashed changes
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "4275:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4275:65:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4275:65:20"
                }
              ]
            },
            "name": "abi_encode_t_contract$_IERC20_$4032_to_t_address_fromStack",
=======
                      "src": "4623:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4623:63:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4623:63:16"
                }
              ]
            },
            "name": "abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack",
>>>>>>> Stashed changes
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< Updated upstream
                "src": "4253:5:20",
=======
                "src": "4601:5:16",
>>>>>>> Stashed changes
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
<<<<<<< Updated upstream
                "src": "4260:3:20",
                "type": ""
              }
            ],
            "src": "4185:161:20"
=======
                "src": "4608:3:16",
                "type": ""
              }
            ],
            "src": "4535:157:16"
>>>>>>> Stashed changes
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< Updated upstream
              "src": "4465:139:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4475:26:20",
=======
              "src": "4809:137:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4819:26:16",
>>>>>>> Stashed changes
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                        "src": "4487:9:20"
=======
                        "src": "4831:9:16"
>>>>>>> Stashed changes
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< Updated upstream
                        "src": "4498:2:20",
=======
                        "src": "4842:2:16",
>>>>>>> Stashed changes
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "4483:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4483:18:20"
=======
                      "src": "4827:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4827:18:16"
>>>>>>> Stashed changes
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "4475:4:20"
=======
                      "src": "4819:4:16"
>>>>>>> Stashed changes
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                        "src": "4570:6:20"
=======
                        "src": "4912:6:16"
>>>>>>> Stashed changes
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                            "src": "4583:9:20"
=======
                            "src": "4925:9:16"
>>>>>>> Stashed changes
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< Updated upstream
                            "src": "4594:1:20",
=======
                            "src": "4936:1:16",
>>>>>>> Stashed changes
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                          "src": "4579:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4579:17:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_IERC20_$4032_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4511:58:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4511:86:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4511:86:20"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IERC20_$4032__to_t_address__fromStack_reversed",
=======
                          "src": "4921:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4921:17:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4855:56:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4855:84:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4855:84:16"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed",
>>>>>>> Stashed changes
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
<<<<<<< Updated upstream
                "src": "4437:9:20",
=======
                "src": "4781:9:16",
>>>>>>> Stashed changes
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
<<<<<<< Updated upstream
                "src": "4449:6:20",
=======
                "src": "4793:6:16",
>>>>>>> Stashed changes
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
<<<<<<< Updated upstream
                "src": "4460:4:20",
                "type": ""
              }
            ],
            "src": "4352:252:20"
=======
                "src": "4804:4:16",
                "type": ""
              }
            ],
            "src": "4698:248:16"
>>>>>>> Stashed changes
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< Updated upstream
              "src": "4699:28:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4716:1:20",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4719:1:20",
                        "type": "",
                        "value": "0"
=======
              "src": "4994:48:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5004:32:16",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5029:5:16"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "5022:6:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5022:13:16"
>>>>>>> Stashed changes
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "4709:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4709:12:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4709:12:20"
=======
                      "src": "5015:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5015:21:16"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "5004:7:16"
                    }
                  ]
>>>>>>> Stashed changes
                }
              ]
            },
            "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
            "nodeType": "YulFunctionDefinition",
<<<<<<< Updated upstream
            "src": "4610:117:20"
=======
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4976:5:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "4986:7:16",
                "type": ""
              }
            ],
            "src": "4952:90:16"
>>>>>>> Stashed changes
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< Updated upstream
              "src": "4822:28:20",
=======
              "src": "5107:50:16",
>>>>>>> Stashed changes
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< Updated upstream
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4839:1:20",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4842:1:20",
                        "type": "",
                        "value": "0"
=======
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5124:3:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5144:5:16"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "5129:14:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5129:21:16"
>>>>>>> Stashed changes
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "4832:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4832:12:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4832:12:20"
=======
                      "src": "5117:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5117:34:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5117:34:16"
>>>>>>> Stashed changes
                }
              ]
            },
            "name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
            "nodeType": "YulFunctionDefinition",
<<<<<<< Updated upstream
            "src": "4733:117:20"
=======
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5095:5:16",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5102:3:16",
                "type": ""
              }
            ],
            "src": "5048:109:16"
>>>>>>> Stashed changes
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< Updated upstream
              "src": "4884:152:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4901:1:20",
                        "type": "",
                        "value": "0"
=======
              "src": "5255:118:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5265:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5277:9:16"
>>>>>>> Stashed changes
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< Updated upstream
                        "src": "4904:77:20",
=======
                        "src": "5288:2:16",
>>>>>>> Stashed changes
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "4894:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4894:88:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4894:88:20"
=======
                      "src": "5273:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5273:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5265:4:16"
                    }
                  ]
>>>>>>> Stashed changes
                },
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< Updated upstream
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4998:1:20",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5001:4:20",
                        "type": "",
                        "value": "0x41"
=======
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5339:6:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5352:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5363:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5348:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5348:17:16"
>>>>>>> Stashed changes
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4991:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4991:15:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4991:15:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5022:1:20",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5025:4:20",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "5015:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5015:15:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5015:15:20"
=======
                      "src": "5301:37:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5301:65:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5301:65:16"
>>>>>>> Stashed changes
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
<<<<<<< Updated upstream
            "src": "4856:180:20"
=======
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5227:9:16",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5239:6:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5250:4:16",
                "type": ""
              }
            ],
            "src": "5163:210:16"
>>>>>>> Stashed changes
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< Updated upstream
              "src": "5085:238:20",
=======
              "src": "5468:28:16",
>>>>>>> Stashed changes
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5095:58:20",
                  "value": {
                    "arguments": [
                      {
<<<<<<< Updated upstream
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "5117:6:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "size",
                            "nodeType": "YulIdentifier",
                            "src": "5147:4:20"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "5125:21:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5125:27:20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5113:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5113:40:20"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "5099:10:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5264:22:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "5266:16:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5266:18:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5266:18:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "5207:10:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5219:18:20",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "5204:2:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5204:34:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "5243:10:20"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "5255:6:20"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "5240:2:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5240:22:20"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "5201:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5201:62:20"
                  },
                  "nodeType": "YulIf",
                  "src": "5198:88:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5302:2:20",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "5306:10:20"
=======
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5485:1:16",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5488:1:16",
                        "type": "",
                        "value": "0"
>>>>>>> Stashed changes
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "5295:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5295:22:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5295:22:20"
                }
              ]
            },
            "name": "finalize_allocation",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "5071:6:20",
                "type": ""
              },
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "5079:4:20",
                "type": ""
              }
            ],
            "src": "5042:281:20"
=======
                      "src": "5478:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5478:12:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5478:12:16"
                }
              ]
            },
            "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
            "nodeType": "YulFunctionDefinition",
            "src": "5379:117:16"
>>>>>>> Stashed changes
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< Updated upstream
              "src": "5370:88:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5380:30:20",
                  "value": {
                    "arguments": [],
                    "functionName": {
                      "name": "allocate_unbounded",
                      "nodeType": "YulIdentifier",
                      "src": "5390:18:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5390:20:20"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "5380:6:20"
                    }
                  ]
                },
=======
              "src": "5591:28:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5608:1:16",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5611:1:16",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "5601:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5601:12:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5601:12:16"
                }
              ]
            },
            "name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
            "nodeType": "YulFunctionDefinition",
            "src": "5502:117:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5653:152:16",
              "statements": [
>>>>>>> Stashed changes
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< Updated upstream
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "5439:6:20"
                      },
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "5447:4:20"
                      }
                    ],
                    "functionName": {
                      "name": "finalize_allocation",
                      "nodeType": "YulIdentifier",
                      "src": "5419:19:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5419:33:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5419:33:20"
                }
              ]
            },
            "name": "allocate_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "5354:4:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "5363:6:20",
                "type": ""
              }
            ],
            "src": "5329:129:20"
=======
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5670:1:16",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5673:77:16",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5663:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5663:88:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5663:88:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5767:1:16",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5770:4:16",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5760:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5760:15:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5760:15:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5791:1:16",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5794:4:16",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "5784:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5784:15:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5784:15:16"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "5625:180:16"
>>>>>>> Stashed changes
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< Updated upstream
              "src": "5531:241:20",
=======
              "src": "5854:238:16",
>>>>>>> Stashed changes
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5864:58:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "5886:6:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "size",
                            "nodeType": "YulIdentifier",
                            "src": "5916:4:16"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "5894:21:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5894:27:16"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5882:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5882:40:16"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "5868:10:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
<<<<<<< Updated upstream
                    "src": "5636:22:20",
=======
                    "src": "6033:22:16",
>>>>>>> Stashed changes
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                            "src": "5638:16:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5638:18:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5638:18:20"
=======
                            "src": "6035:16:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6035:18:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6035:18:16"
>>>>>>> Stashed changes
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
<<<<<<< Updated upstream
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5608:6:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5616:18:20",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "5605:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5605:30:20"
                  },
                  "nodeType": "YulIf",
                  "src": "5602:56:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5668:37:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5698:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "round_up_to_mul_of_32",
                      "nodeType": "YulIdentifier",
                      "src": "5676:21:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5676:29:20"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "5668:4:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5742:23:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "5754:4:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5760:4:20",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5750:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5750:15:20"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "5742:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "array_allocation_size_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "5515:6:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "5526:4:20",
                "type": ""
              }
            ],
            "src": "5464:308:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5829:103:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "5852:3:20"
                      },
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "5857:3:20"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5862:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "5839:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5839:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5839:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "5910:3:20"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "5915:6:20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5906:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5906:16:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5924:1:20",
                        "type": "",
                        "value": "0"
=======
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "5976:10:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5988:18:16",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "5973:2:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5973:34:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "6012:10:16"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "6024:6:16"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "6009:2:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6009:22:16"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "5970:2:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5970:62:16"
                  },
                  "nodeType": "YulIf",
                  "src": "5967:88:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6071:2:16",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "6075:10:16"
>>>>>>> Stashed changes
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "5899:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5899:27:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5899:27:20"
                }
              ]
            },
            "name": "copy_calldata_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "5811:3:20",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "5816:3:20",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "5821:6:20",
                "type": ""
              }
            ],
            "src": "5778:154:20"
=======
                      "src": "6064:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6064:22:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6064:22:16"
                }
              ]
            },
            "name": "finalize_allocation",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "5840:6:16",
                "type": ""
              },
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "5848:4:16",
                "type": ""
              }
            ],
            "src": "5811:281:16"
>>>>>>> Stashed changes
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< Updated upstream
              "src": "6022:328:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6032:75:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "6099:6:20"
                          }
                        ],
                        "functionName": {
                          "name": "array_allocation_size_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "6057:41:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6057:49:20"
                      }
                    ],
                    "functionName": {
                      "name": "allocate_memory",
                      "nodeType": "YulIdentifier",
                      "src": "6041:15:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6041:66:20"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "6032:5:20"
=======
              "src": "6139:88:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6149:30:16",
                  "value": {
                    "arguments": [],
                    "functionName": {
                      "name": "allocate_unbounded",
                      "nodeType": "YulIdentifier",
                      "src": "6159:18:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6159:20:16"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "6149:6:16"
>>>>>>> Stashed changes
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< Updated upstream
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "6123:5:20"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6130:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6116:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6116:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6116:21:20"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6146:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "6161:5:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6168:4:20",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6157:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6157:16:20"
                  },
                  "variables": [
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "6150:3:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6211:83:20",
=======
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "6208:6:16"
                      },
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "6216:4:16"
                      }
                    ],
                    "functionName": {
                      "name": "finalize_allocation",
                      "nodeType": "YulIdentifier",
                      "src": "6188:19:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6188:33:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6188:33:16"
                }
              ]
            },
            "name": "allocate_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "6123:4:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "6132:6:16",
                "type": ""
              }
            ],
            "src": "6098:129:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6300:241:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6405:22:16",
>>>>>>> Stashed changes
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
<<<<<<< Updated upstream
                            "name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
                            "nodeType": "YulIdentifier",
                            "src": "6213:77:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6213:79:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6213:79:20"
=======
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "6407:16:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6407:18:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6407:18:16"
>>>>>>> Stashed changes
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
<<<<<<< Updated upstream
                        "arguments": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "6192:3:20"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "6197:6:20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6188:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6188:16:20"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "6206:3:20"
=======
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6377:6:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6385:18:16",
                        "type": "",
                        "value": "0xffffffffffffffff"
>>>>>>> Stashed changes
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "6185:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6185:25:20"
                  },
                  "nodeType": "YulIf",
                  "src": "6182:112:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "6327:3:20"
                      },
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "6332:3:20"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6337:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "copy_calldata_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "6303:23:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6303:41:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6303:41:20"
                }
              ]
            },
            "name": "abi_decode_available_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "5995:3:20",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "6000:6:20",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6008:3:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "6016:5:20",
                "type": ""
              }
            ],
            "src": "5938:412:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6432:278:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6481:83:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
                            "nodeType": "YulIdentifier",
                            "src": "6483:77:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6483:79:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6483:79:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "6460:6:20"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6468:4:20",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6456:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6456:17:20"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "6475:3:20"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "6452:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6452:27:20"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6445:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6445:35:20"
                  },
                  "nodeType": "YulIf",
                  "src": "6442:122:20"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6573:34:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "6600:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "6587:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6587:20:20"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "6577:6:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6616:88:20",
                  "value": {
=======
                      "src": "6374:2:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6374:30:16"
                  },
                  "nodeType": "YulIf",
                  "src": "6371:56:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6437:37:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6467:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "round_up_to_mul_of_32",
                      "nodeType": "YulIdentifier",
                      "src": "6445:21:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6445:29:16"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "6437:4:16"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6511:23:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "6523:4:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6529:4:16",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6519:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6519:15:16"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "6511:4:16"
                    }
                  ]
                }
              ]
            },
            "name": "array_allocation_size_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "6284:6:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "6295:4:16",
                "type": ""
              }
            ],
            "src": "6233:308:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6598:103:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "6621:3:16"
                      },
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "6626:3:16"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6631:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "6608:12:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6608:30:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6608:30:16"
                },
                {
                  "expression": {
>>>>>>> Stashed changes
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                            "src": "6677:6:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6685:4:20",
                            "type": "",
                            "value": "0x20"
=======
                            "src": "6679:3:16"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "6684:6:16"
>>>>>>> Stashed changes
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                          "src": "6673:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6673:17:20"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6692:6:20"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "6700:3:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_available_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "6625:47:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6625:79:20"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "6616:5:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "6410:6:20",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6418:3:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "6426:5:20",
                "type": ""
              }
            ],
            "src": "6370:340:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6907:1586:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6954:83:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "6956:77:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6956:79:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6956:79:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6928:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6937:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6924:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6924:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6949:3:20",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6920:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6920:33:20"
                  },
                  "nodeType": "YulIf",
                  "src": "6917:120:20"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "7047:117:20",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "7062:15:20",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7076:1:20",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "7066:6:20",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7091:63:20",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7126:9:20"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "7137:6:20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7122:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7122:22:20"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7146:7:20"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "7101:20:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7101:53:20"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "7091:6:20"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "7174:118:20",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "7189:16:20",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7203:2:20",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "7193:6:20",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7219:63:20",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7254:9:20"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "7265:6:20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7250:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7250:22:20"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7274:7:20"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "7229:20:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7229:53:20"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "7219:6:20"
                        }
                      ]
=======
                          "src": "6675:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6675:16:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6693:1:16",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6668:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6668:27:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6668:27:16"
                }
              ]
            },
            "name": "copy_calldata_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "6580:3:16",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "6585:3:16",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "6590:6:16",
                "type": ""
              }
            ],
            "src": "6547:154:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6791:328:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6801:75:16",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "6868:6:16"
                          }
                        ],
                        "functionName": {
                          "name": "array_allocation_size_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "6826:41:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6826:49:16"
                      }
                    ],
                    "functionName": {
                      "name": "allocate_memory",
                      "nodeType": "YulIdentifier",
                      "src": "6810:15:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6810:66:16"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "6801:5:16"
>>>>>>> Stashed changes
                    }
                  ]
                },
                {
<<<<<<< Updated upstream
                  "nodeType": "YulBlock",
                  "src": "7302:288:20",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "7317:46:20",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7348:9:20"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7359:2:20",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7344:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7344:18:20"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "7331:12:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7331:32:20"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "7321:6:20",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "7410:83:20",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                                "nodeType": "YulIdentifier",
                                "src": "7412:77:20"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7412:79:20"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "7412:79:20"
                          }
                        ]
=======
                  "expression": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "6892:5:16"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6899:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6885:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6885:21:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6885:21:16"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6915:27:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "6930:5:16"
>>>>>>> Stashed changes
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6937:4:16",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6926:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6926:16:16"
                  },
                  "variables": [
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "6919:3:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6980:83:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
                            "nodeType": "YulIdentifier",
                            "src": "6982:77:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6982:79:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6982:79:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                            "src": "7382:6:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7390:18:20",
                            "type": "",
                            "value": "0xffffffffffffffff"
=======
                            "src": "6961:3:16"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "6966:6:16"
>>>>>>> Stashed changes
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                          "src": "7379:2:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7379:30:20"
                      },
                      "nodeType": "YulIf",
                      "src": "7376:117:20"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7507:73:20",
                      "value": {
=======
                          "src": "6957:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6957:16:16"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "6975:3:16"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "6954:2:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6954:25:16"
                  },
                  "nodeType": "YulIf",
                  "src": "6951:112:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "7096:3:16"
                      },
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "7101:3:16"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7106:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "copy_calldata_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "7072:23:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7072:41:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7072:41:16"
                }
              ]
            },
            "name": "abi_decode_available_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "6764:3:16",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "6769:6:16",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6777:3:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "6785:5:16",
                "type": ""
              }
            ],
            "src": "6707:412:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7201:278:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7250:83:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
                            "nodeType": "YulIdentifier",
                            "src": "7252:77:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7252:79:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7252:79:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
>>>>>>> Stashed changes
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                                "src": "7552:9:20"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "7563:6:20"
=======
                                "src": "7229:6:16"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7237:4:16",
                                "type": "",
                                "value": "0x1f"
>>>>>>> Stashed changes
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                              "src": "7548:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7548:22:20"
=======
                              "src": "7225:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7225:17:16"
>>>>>>> Stashed changes
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                            "src": "7572:7:20"
=======
                            "src": "7244:3:16"
>>>>>>> Stashed changes
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                          "src": "7517:30:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7517:63:20"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "7507:6:20"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "7600:288:20",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "7615:46:20",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7646:9:20"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7657:2:20",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7642:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7642:18:20"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "7629:12:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7629:32:20"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "7619:6:20",
                          "type": ""
                        }
                      ]
=======
                          "src": "7221:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7221:27:16"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "7214:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7214:35:16"
                  },
                  "nodeType": "YulIf",
                  "src": "7211:122:16"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7342:34:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "7369:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "7356:12:16"
>>>>>>> Stashed changes
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7356:20:16"
                  },
                  "variables": [
                    {
<<<<<<< Updated upstream
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "7708:83:20",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                                "nodeType": "YulIdentifier",
                                "src": "7710:77:20"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7710:79:20"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "7710:79:20"
                          }
                        ]
                      },
                      "condition": {
=======
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "7346:6:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7385:88:16",
                  "value": {
                    "arguments": [
                      {
>>>>>>> Stashed changes
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                            "src": "7680:6:20"
=======
                            "src": "7446:6:16"
>>>>>>> Stashed changes
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< Updated upstream
                            "src": "7688:18:20",
=======
                            "src": "7454:4:16",
>>>>>>> Stashed changes
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                          "src": "7677:2:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7677:30:20"
                      },
                      "nodeType": "YulIf",
                      "src": "7674:117:20"
=======
                          "src": "7442:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7442:17:16"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7461:6:16"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "7469:3:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_available_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "7394:47:16"
>>>>>>> Stashed changes
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7394:79:16"
                  },
                  "variableNames": [
                    {
<<<<<<< Updated upstream
                      "nodeType": "YulAssignment",
                      "src": "7805:73:20",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7850:9:20"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "7861:6:20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7846:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7846:22:20"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7870:7:20"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "7815:30:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7815:63:20"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "7805:6:20"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "7898:289:20",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "7913:47:20",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7944:9:20"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7955:3:20",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7940:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7940:19:20"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "7927:12:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7927:33:20"
=======
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "7385:5:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "7179:6:16",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7187:3:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "7195:5:16",
                "type": ""
              }
            ],
            "src": "7139:340:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7676:1586:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7723:83:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "7725:77:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7725:79:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7725:79:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7697:7:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7706:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7693:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7693:23:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7718:3:16",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "7689:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7689:33:16"
                  },
                  "nodeType": "YulIf",
                  "src": "7686:120:16"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "7816:117:16",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "7831:15:16",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7845:1:16",
                        "type": "",
                        "value": "0"
>>>>>>> Stashed changes
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
<<<<<<< Updated upstream
                          "src": "7917:6:20",
=======
                          "src": "7835:6:16",
>>>>>>> Stashed changes
                          "type": ""
                        }
                      ]
                    },
                    {
<<<<<<< Updated upstream
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "8007:83:20",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                                "nodeType": "YulIdentifier",
                                "src": "8009:77:20"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8009:79:20"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "8009:79:20"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "7979:6:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7987:18:20",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "7976:2:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7976:30:20"
                      },
                      "nodeType": "YulIf",
                      "src": "7973:117:20"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "8104:73:20",
=======
                      "nodeType": "YulAssignment",
                      "src": "7860:63:16",
>>>>>>> Stashed changes
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                                "src": "8149:9:20"
=======
                                "src": "7895:9:16"
>>>>>>> Stashed changes
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                                "src": "8160:6:20"
=======
                                "src": "7906:6:16"
>>>>>>> Stashed changes
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                              "src": "8145:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8145:22:20"
=======
                              "src": "7891:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7891:22:16"
>>>>>>> Stashed changes
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                            "src": "8169:7:20"
=======
                            "src": "7915:7:16"
>>>>>>> Stashed changes
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                          "src": "8114:30:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8114:63:20"
=======
                          "src": "7870:20:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7870:53:16"
>>>>>>> Stashed changes
                      },
                      "variableNames": [
                        {
                          "name": "value4",
                          "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                          "src": "8104:6:20"
=======
                          "src": "7860:6:16"
>>>>>>> Stashed changes
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
<<<<<<< Updated upstream
                  "src": "8197:289:20",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "8212:47:20",
=======
                  "src": "7943:118:16",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "7958:16:16",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7972:2:16",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "7962:6:16",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7988:63:16",
>>>>>>> Stashed changes
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                                "src": "8243:9:20"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8254:3:20",
                                "type": "",
                                "value": "160"
=======
                                "src": "8023:9:16"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "8034:6:16"
>>>>>>> Stashed changes
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                              "src": "8239:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8239:19:20"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "8226:12:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8226:33:20"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "8216:6:20",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "8306:83:20",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                                "nodeType": "YulIdentifier",
                                "src": "8308:77:20"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8308:79:20"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "8308:79:20"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "8278:6:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8286:18:20",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "8275:2:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8275:30:20"
                      },
                      "nodeType": "YulIf",
                      "src": "8272:117:20"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "8403:73:20",
=======
                              "src": "8019:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8019:22:16"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8043:7:16"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "7998:20:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7998:53:16"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "7988:6:16"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "8071:288:16",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "8086:46:16",
>>>>>>> Stashed changes
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                                "src": "8448:9:20"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "8459:6:20"
=======
                                "src": "8117:9:16"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8128:2:16",
                                "type": "",
                                "value": "64"
>>>>>>> Stashed changes
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                              "src": "8444:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8444:22:20"
=======
                              "src": "8113:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8113:18:16"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "8100:12:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8100:32:16"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "8090:6:16",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "8179:83:16",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                                "nodeType": "YulIdentifier",
                                "src": "8181:77:16"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8181:79:16"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "8181:79:16"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "8151:6:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8159:18:16",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "8148:2:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8148:30:16"
                      },
                      "nodeType": "YulIf",
                      "src": "8145:117:16"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "8276:73:16",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8321:9:16"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "8332:6:16"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8317:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8317:22:16"
>>>>>>> Stashed changes
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                            "src": "8468:7:20"
=======
                            "src": "8341:7:16"
>>>>>>> Stashed changes
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                          "src": "8413:30:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8413:63:20"
=======
                          "src": "8286:30:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8286:63:16"
>>>>>>> Stashed changes
                      },
                      "variableNames": [
                        {
                          "name": "value5",
                          "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                          "src": "8403:6:20"
=======
                          "src": "8276:6:16"
>>>>>>> Stashed changes
                        }
                      ]
                    }
                  ]
<<<<<<< Updated upstream
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6837:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6848:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6860:6:20",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6868:6:20",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "6876:6:20",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "6884:6:20",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "6892:6:20",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "6900:6:20",
                "type": ""
              }
            ],
            "src": "6716:1777:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8605:136:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "8627:6:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8635:1:20",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8623:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8623:14:20"
                      },
                      {
                        "hexValue": "54686520636f6c6c656374696f6e2061646472657373206e6565647320746f20",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8639:34:20",
                        "type": "",
                        "value": "The collection address needs to "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8616:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8616:58:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8616:58:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "8695:6:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8703:2:20",
                            "type": "",
                            "value": "32"
=======
                },
                {
                  "nodeType": "YulBlock",
                  "src": "8369:288:16",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "8384:46:16",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8415:9:16"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8426:2:16",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8411:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8411:18:16"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "8398:12:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8398:32:16"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "8388:6:16",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "8477:83:16",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                                "nodeType": "YulIdentifier",
                                "src": "8479:77:16"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8479:79:16"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "8479:79:16"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "8449:6:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8457:18:16",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "8446:2:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8446:30:16"
                      },
                      "nodeType": "YulIf",
                      "src": "8443:117:16"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "8574:73:16",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8619:9:16"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "8630:6:16"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8615:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8615:22:16"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8639:7:16"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "8584:30:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8584:63:16"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "8574:6:16"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "8667:289:16",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "8682:47:16",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8713:9:16"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8724:3:16",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8709:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8709:19:16"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "8696:12:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8696:33:16"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "8686:6:16",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "8776:83:16",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                                "nodeType": "YulIdentifier",
                                "src": "8778:77:16"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8778:79:16"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "8778:79:16"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "8748:6:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8756:18:16",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "8745:2:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8745:30:16"
                      },
                      "nodeType": "YulIf",
                      "src": "8742:117:16"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "8873:73:16",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8918:9:16"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "8929:6:16"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8914:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8914:22:16"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8938:7:16"
>>>>>>> Stashed changes
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                          "src": "8691:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8691:15:20"
                      },
                      {
                        "hexValue": "626520646966666572656e742066726f6d207a65726f2e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8708:25:20",
                        "type": "",
                        "value": "be different from zero."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8684:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8684:50:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8684:50:20"
=======
                          "src": "8883:30:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8883:63:16"
                      },
                      "variableNames": [
                        {
                          "name": "value4",
                          "nodeType": "YulIdentifier",
                          "src": "8873:6:16"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "8966:289:16",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "8981:47:16",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9012:9:16"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9023:3:16",
                                "type": "",
                                "value": "160"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9008:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9008:19:16"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "8995:12:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8995:33:16"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "8985:6:16",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "9075:83:16",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                                "nodeType": "YulIdentifier",
                                "src": "9077:77:16"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9077:79:16"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "9077:79:16"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "9047:6:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9055:18:16",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "9044:2:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9044:30:16"
                      },
                      "nodeType": "YulIf",
                      "src": "9041:117:16"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "9172:73:16",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9217:9:16"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "9228:6:16"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9213:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9213:22:16"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "9237:7:16"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "9182:30:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9182:63:16"
                      },
                      "variableNames": [
                        {
                          "name": "value5",
                          "nodeType": "YulIdentifier",
                          "src": "9172:6:16"
                        }
                      ]
                    }
                  ]
>>>>>>> Stashed changes
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7606:9:16",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "7617:7:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7629:6:16",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7637:6:16",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "7645:6:16",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "7653:6:16",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "7661:6:16",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
<<<<<<< Updated upstream
                "src": "8597:6:20",
                "type": ""
              }
            ],
            "src": "8499:242:20"
=======
                "src": "7669:6:16",
                "type": ""
              }
            ],
            "src": "7485:1777:16"
>>>>>>> Stashed changes
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< Updated upstream
              "src": "8893:220:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8903:74:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8969:3:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8974:2:20",
                        "type": "",
                        "value": "55"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8910:58:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8910:67:20"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "8903:3:20"
                    }
                  ]
                },
                {
=======
              "src": "9333:53:16",
              "statements": [
                {
>>>>>>> Stashed changes
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                        "src": "9075:3:20"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_75d51b7f4f784217631f4d90c02e688b32ba4b4faadf2799078ab0609aeff458",
                      "nodeType": "YulIdentifier",
                      "src": "8986:88:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8986:93:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8986:93:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9088:19:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9099:3:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9104:2:20",
                        "type": "",
                        "value": "64"
=======
                        "src": "9350:3:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9373:5:16"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "9355:17:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9355:24:16"
>>>>>>> Stashed changes
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "9095:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9095:12:20"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "9088:3:20"
                    }
                  ]
=======
                      "src": "9343:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9343:37:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9343:37:16"
>>>>>>> Stashed changes
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< Updated upstream
                "src": "8881:3:20",
=======
                "src": "9321:5:16",
>>>>>>> Stashed changes
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
<<<<<<< Updated upstream
                "src": "8889:3:20",
                "type": ""
              }
            ],
            "src": "8747:366:20"
=======
                "src": "9328:3:16",
                "type": ""
              }
            ],
            "src": "9268:118:16"
>>>>>>> Stashed changes
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< Updated upstream
              "src": "9290:248:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9300:26:20",
=======
              "src": "9490:124:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9500:26:16",
>>>>>>> Stashed changes
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                        "src": "9312:9:20"
=======
                        "src": "9512:9:16"
>>>>>>> Stashed changes
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< Updated upstream
                        "src": "9323:2:20",
=======
                        "src": "9523:2:16",
>>>>>>> Stashed changes
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "9308:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9308:18:20"
=======
                      "src": "9508:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9508:18:16"
>>>>>>> Stashed changes
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "9300:4:20"
=======
                      "src": "9500:4:16"
>>>>>>> Stashed changes
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "9580:6:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                            "src": "9347:9:20"
=======
                            "src": "9593:9:16"
>>>>>>> Stashed changes
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< Updated upstream
                            "src": "9358:1:20",
=======
                            "src": "9604:1:16",
>>>>>>> Stashed changes
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                          "src": "9343:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9343:17:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "9366:4:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9372:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9362:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9362:20:20"
=======
                          "src": "9589:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9589:17:16"
>>>>>>> Stashed changes
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "9336:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9336:47:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9336:47:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9392:139:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "9526:4:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_75d51b7f4f784217631f4d90c02e688b32ba4b4faadf2799078ab0609aeff458_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9400:124:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9400:131:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9392:4:20"
                    }
                  ]
=======
                      "src": "9536:43:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9536:71:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9536:71:16"
>>>>>>> Stashed changes
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
<<<<<<< Updated upstream
                "src": "9270:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9285:4:20",
                "type": ""
              }
            ],
            "src": "9119:419:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9607:80:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9617:22:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "9632:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "9626:5:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9626:13:20"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "9617:5:20"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9675:5:20"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "9648:26:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9648:33:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9648:33:20"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "9585:6:20",
=======
                "src": "9462:9:16",
>>>>>>> Stashed changes
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
<<<<<<< Updated upstream
                "src": "9593:3:20",
=======
                "src": "9474:6:16",
>>>>>>> Stashed changes
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
<<<<<<< Updated upstream
                "src": "9601:5:20",
                "type": ""
              }
            ],
            "src": "9544:143:20"
=======
                "src": "9485:4:16",
                "type": ""
              }
            ],
            "src": "9392:222:16"
>>>>>>> Stashed changes
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< Updated upstream
              "src": "9770:274:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9816:83:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "9818:77:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9818:79:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9818:79:20"
                      }
                    ]
                  },
                  "condition": {
=======
              "src": "9726:136:16",
              "statements": [
                {
                  "expression": {
>>>>>>> Stashed changes
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                            "src": "9791:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9800:9:20"
=======
                            "src": "9748:6:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9756:1:16",
                            "type": "",
                            "value": "0"
>>>>>>> Stashed changes
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                          "src": "9787:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9787:23:20"
=======
                          "src": "9744:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9744:14:16"
>>>>>>> Stashed changes
                      },
                      {
                        "hexValue": "54686520636f6c6c656374696f6e2061646472657373206e6565647320746f20",
                        "kind": "string",
                        "nodeType": "YulLiteral",
<<<<<<< Updated upstream
                        "src": "9812:2:20",
=======
                        "src": "9760:34:16",
>>>>>>> Stashed changes
                        "type": "",
                        "value": "The collection address needs to "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "9783:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9783:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "9780:119:20"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "9909:128:20",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "9924:15:20",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9938:1:20",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "9928:6:20",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "9953:74:20",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9999:9:20"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "10010:6:20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9995:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9995:22:20"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "10019:7:20"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "9963:31:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9963:64:20"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "9953:6:20"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9740:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "9751:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9763:6:20",
                "type": ""
              }
            ],
            "src": "9693:351:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10156:73:20",
              "statements": [
                {
=======
                      "src": "9737:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9737:58:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9737:58:16"
                },
                {
>>>>>>> Stashed changes
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                            "src": "10178:6:20"
=======
                            "src": "9816:6:16"
>>>>>>> Stashed changes
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< Updated upstream
                            "src": "10186:1:20",
=======
                            "src": "9824:2:16",
>>>>>>> Stashed changes
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                          "src": "10174:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10174:14:20"
=======
                          "src": "9812:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9812:15:16"
>>>>>>> Stashed changes
                      },
                      {
                        "hexValue": "626520646966666572656e742066726f6d207a65726f2e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
<<<<<<< Updated upstream
                        "src": "10190:31:20",
=======
                        "src": "9829:25:16",
>>>>>>> Stashed changes
                        "type": "",
                        "value": "be different from zero."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "10167:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10167:55:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10167:55:20"
=======
                      "src": "9805:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9805:50:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9805:50:16"
>>>>>>> Stashed changes
                }
              ]
            },
            "name": "store_literal_in_memory_75d51b7f4f784217631f4d90c02e688b32ba4b4faadf2799078ab0609aeff458",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
<<<<<<< Updated upstream
                "src": "10148:6:20",
                "type": ""
              }
            ],
            "src": "10050:179:20"
=======
                "src": "9718:6:16",
                "type": ""
              }
            ],
            "src": "9620:242:16"
>>>>>>> Stashed changes
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< Updated upstream
              "src": "10381:220:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10391:74:20",
=======
              "src": "10014:220:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10024:74:16",
>>>>>>> Stashed changes
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                        "src": "10457:3:20"
=======
                        "src": "10090:3:16"
>>>>>>> Stashed changes
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< Updated upstream
                        "src": "10462:2:20",
=======
                        "src": "10095:2:16",
>>>>>>> Stashed changes
                        "type": "",
                        "value": "55"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "10398:58:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10398:67:20"
=======
                      "src": "10031:58:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10031:67:16"
>>>>>>> Stashed changes
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "10391:3:20"
=======
                      "src": "10024:3:16"
>>>>>>> Stashed changes
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                        "src": "10563:3:20"
=======
                        "src": "10196:3:16"
>>>>>>> Stashed changes
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_75d51b7f4f784217631f4d90c02e688b32ba4b4faadf2799078ab0609aeff458",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "10474:88:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10474:93:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10474:93:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10576:19:20",
=======
                      "src": "10107:88:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10107:93:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10107:93:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10209:19:16",
>>>>>>> Stashed changes
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                        "src": "10587:3:20"
=======
                        "src": "10220:3:16"
>>>>>>> Stashed changes
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< Updated upstream
                        "src": "10592:2:20",
=======
                        "src": "10225:2:16",
>>>>>>> Stashed changes
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "10583:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10583:12:20"
=======
                      "src": "10216:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10216:12:16"
>>>>>>> Stashed changes
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "10576:3:20"
=======
                      "src": "10209:3:16"
>>>>>>> Stashed changes
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_75d51b7f4f784217631f4d90c02e688b32ba4b4faadf2799078ab0609aeff458_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
<<<<<<< Updated upstream
                "src": "10369:3:20",
=======
                "src": "10002:3:16",
>>>>>>> Stashed changes
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
<<<<<<< Updated upstream
                "src": "10377:3:20",
                "type": ""
              }
            ],
            "src": "10235:366:20"
=======
                "src": "10010:3:16",
                "type": ""
              }
            ],
            "src": "9868:366:16"
>>>>>>> Stashed changes
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< Updated upstream
              "src": "10778:248:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10788:26:20",
=======
              "src": "10411:248:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10421:26:16",
>>>>>>> Stashed changes
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                        "src": "10800:9:20"
=======
                        "src": "10433:9:16"
>>>>>>> Stashed changes
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< Updated upstream
                        "src": "10811:2:20",
=======
                        "src": "10444:2:16",
>>>>>>> Stashed changes
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "10796:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10796:18:20"
=======
                      "src": "10429:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10429:18:16"
>>>>>>> Stashed changes
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "10788:4:20"
=======
                      "src": "10421:4:16"
>>>>>>> Stashed changes
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                            "src": "10835:9:20"
=======
                            "src": "10468:9:16"
>>>>>>> Stashed changes
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< Updated upstream
                            "src": "10846:1:20",
=======
                            "src": "10479:1:16",
>>>>>>> Stashed changes
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                          "src": "10831:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10831:17:20"
=======
                          "src": "10464:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10464:17:16"
>>>>>>> Stashed changes
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                            "src": "10854:4:20"
=======
                            "src": "10487:4:16"
>>>>>>> Stashed changes
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                            "src": "10860:9:20"
=======
                            "src": "10493:9:16"
>>>>>>> Stashed changes
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                          "src": "10850:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10850:20:20"
=======
                          "src": "10483:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10483:20:16"
>>>>>>> Stashed changes
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "10824:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10824:47:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10824:47:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10880:139:20",
=======
                      "src": "10457:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10457:47:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10457:47:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10513:139:16",
>>>>>>> Stashed changes
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                        "src": "11014:4:20"
=======
                        "src": "10647:4:16"
>>>>>>> Stashed changes
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_75d51b7f4f784217631f4d90c02e688b32ba4b4faadf2799078ab0609aeff458_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "10888:124:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10888:131:20"
=======
                      "src": "10521:124:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10521:131:16"
>>>>>>> Stashed changes
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "10880:4:20"
=======
                      "src": "10513:4:16"
>>>>>>> Stashed changes
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_75d51b7f4f784217631f4d90c02e688b32ba4b4faadf2799078ab0609aeff458__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
<<<<<<< Updated upstream
                "src": "10758:9:20",
=======
                "src": "10391:9:16",
>>>>>>> Stashed changes
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
<<<<<<< Updated upstream
                "src": "10773:4:20",
                "type": ""
              }
            ],
            "src": "10607:419:20"
=======
                "src": "10406:4:16",
                "type": ""
              }
            ],
            "src": "10240:419:16"
>>>>>>> Stashed changes
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< Updated upstream
              "src": "11097:53:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11114:3:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "11137:5:20"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "11119:17:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11119:24:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11107:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11107:37:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11107:37:20"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11085:5:20",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "11092:3:20",
                "type": ""
              }
            ],
            "src": "11032:118:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11254:124:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11264:26:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11276:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11287:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11272:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11272:18:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11264:4:20"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "11344:6:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11357:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11368:1:20",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11353:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11353:17:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11300:43:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11300:71:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11300:71:20"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11226:9:20",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11238:6:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11249:4:20",
                "type": ""
              }
            ],
            "src": "11156:222:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11447:80:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11457:22:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "11472:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "11466:5:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11466:13:20"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "11457:5:20"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "11515:5:20"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "11488:26:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11488:33:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11488:33:20"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "11425:6:20",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "11433:3:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11441:5:20",
                "type": ""
              }
            ],
            "src": "11384:143:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11610:274:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11656:83:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "11658:77:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11658:79:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11658:79:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "11631:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11640:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "11627:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11627:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11652:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "11623:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11623:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "11620:119:20"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "11749:128:20",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "11764:15:20",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11778:1:20",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "11768:6:20",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "11793:74:20",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "11839:9:20"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "11850:6:20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11835:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11835:22:20"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "11859:7:20"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "11803:31:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11803:64:20"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "11793:6:20"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11580:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "11591:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11603:6:20",
                "type": ""
              }
            ],
            "src": "11533:351:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11996:136:20",
              "statements": [
                {
                  "expression": {
=======
              "src": "10771:122:16",
              "statements": [
                {
                  "expression": {
>>>>>>> Stashed changes
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                            "src": "12018:6:20"
=======
                            "src": "10793:6:16"
>>>>>>> Stashed changes
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< Updated upstream
                            "src": "12026:1:20",
=======
                            "src": "10801:1:16",
>>>>>>> Stashed changes
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                          "src": "12014:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12014:14:20"
=======
                          "src": "10789:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10789:14:16"
>>>>>>> Stashed changes
                      },
                      {
                        "hexValue": "5468657265206973206e6f2061756374696f6e207374617274656420666f7220",
                        "kind": "string",
                        "nodeType": "YulLiteral",
<<<<<<< Updated upstream
                        "src": "12030:34:20",
=======
                        "src": "10805:34:16",
>>>>>>> Stashed changes
                        "type": "",
                        "value": "There is no auction started for "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "12007:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12007:58:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12007:58:20"
=======
                      "src": "10782:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10782:58:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10782:58:16"
>>>>>>> Stashed changes
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                            "src": "12086:6:20"
=======
                            "src": "10861:6:16"
>>>>>>> Stashed changes
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< Updated upstream
                            "src": "12094:2:20",
=======
                            "src": "10869:2:16",
>>>>>>> Stashed changes
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                          "src": "12082:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12082:15:20"
=======
                          "src": "10857:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10857:15:16"
>>>>>>> Stashed changes
                      },
                      {
                        "hexValue": "74686973204e46542e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
<<<<<<< Updated upstream
                        "src": "12099:25:20",
=======
                        "src": "10874:11:16",
>>>>>>> Stashed changes
                        "type": "",
                        "value": "this NFT."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "12075:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12075:50:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12075:50:20"
=======
                      "src": "10850:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10850:36:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10850:36:16"
>>>>>>> Stashed changes
                }
              ]
            },
            "name": "store_literal_in_memory_249c9a1e474a0c842afe62f50e173a3d189009824d168304fa12f2538493206d",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
<<<<<<< Updated upstream
                "src": "11988:6:20",
                "type": ""
              }
            ],
            "src": "11890:242:20"
=======
                "src": "10763:6:16",
                "type": ""
              }
            ],
            "src": "10665:228:16"
>>>>>>> Stashed changes
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< Updated upstream
              "src": "12284:220:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12294:74:20",
=======
              "src": "11045:220:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11055:74:16",
>>>>>>> Stashed changes
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                        "src": "12360:3:20"
=======
                        "src": "11121:3:16"
>>>>>>> Stashed changes
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< Updated upstream
                        "src": "12365:2:20",
=======
                        "src": "11126:2:16",
>>>>>>> Stashed changes
                        "type": "",
                        "value": "41"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "12301:58:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12301:67:20"
=======
                      "src": "11062:58:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11062:67:16"
>>>>>>> Stashed changes
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "12294:3:20"
=======
                      "src": "11055:3:16"
>>>>>>> Stashed changes
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                        "src": "12466:3:20"
=======
                        "src": "11227:3:16"
>>>>>>> Stashed changes
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_249c9a1e474a0c842afe62f50e173a3d189009824d168304fa12f2538493206d",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "12377:88:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12377:93:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12377:93:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12479:19:20",
=======
                      "src": "11138:88:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11138:93:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11138:93:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11240:19:16",
>>>>>>> Stashed changes
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                        "src": "12490:3:20"
=======
                        "src": "11251:3:16"
>>>>>>> Stashed changes
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< Updated upstream
                        "src": "12495:2:20",
=======
                        "src": "11256:2:16",
>>>>>>> Stashed changes
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "12486:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12486:12:20"
=======
                      "src": "11247:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11247:12:16"
>>>>>>> Stashed changes
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "12479:3:20"
=======
                      "src": "11240:3:16"
>>>>>>> Stashed changes
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_249c9a1e474a0c842afe62f50e173a3d189009824d168304fa12f2538493206d_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
<<<<<<< Updated upstream
                "src": "12272:3:20",
=======
                "src": "11033:3:16",
>>>>>>> Stashed changes
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
<<<<<<< Updated upstream
                "src": "12280:3:20",
                "type": ""
              }
            ],
            "src": "12138:366:20"
=======
                "src": "11041:3:16",
                "type": ""
              }
            ],
            "src": "10899:366:16"
>>>>>>> Stashed changes
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< Updated upstream
              "src": "12681:248:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12691:26:20",
=======
              "src": "11442:248:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11452:26:16",
>>>>>>> Stashed changes
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                        "src": "12703:9:20"
=======
                        "src": "11464:9:16"
>>>>>>> Stashed changes
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< Updated upstream
                        "src": "12714:2:20",
=======
                        "src": "11475:2:16",
>>>>>>> Stashed changes
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "12699:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12699:18:20"
=======
                      "src": "11460:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11460:18:16"
>>>>>>> Stashed changes
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "12691:4:20"
=======
                      "src": "11452:4:16"
>>>>>>> Stashed changes
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                            "src": "12738:9:20"
=======
                            "src": "11499:9:16"
>>>>>>> Stashed changes
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< Updated upstream
                            "src": "12749:1:20",
=======
                            "src": "11510:1:16",
>>>>>>> Stashed changes
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                          "src": "12734:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12734:17:20"
=======
                          "src": "11495:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11495:17:16"
>>>>>>> Stashed changes
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                            "src": "12757:4:20"
=======
                            "src": "11518:4:16"
>>>>>>> Stashed changes
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                            "src": "12763:9:20"
=======
                            "src": "11524:9:16"
>>>>>>> Stashed changes
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                          "src": "12753:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12753:20:20"
=======
                          "src": "11514:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11514:20:16"
>>>>>>> Stashed changes
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "12727:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12727:47:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12727:47:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12783:139:20",
=======
                      "src": "11488:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11488:47:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11488:47:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11544:139:16",
>>>>>>> Stashed changes
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                        "src": "12917:4:20"
=======
                        "src": "11678:4:16"
>>>>>>> Stashed changes
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_249c9a1e474a0c842afe62f50e173a3d189009824d168304fa12f2538493206d_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "12791:124:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12791:131:20"
=======
                      "src": "11552:124:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11552:131:16"
>>>>>>> Stashed changes
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "12783:4:20"
=======
                      "src": "11544:4:16"
>>>>>>> Stashed changes
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_249c9a1e474a0c842afe62f50e173a3d189009824d168304fa12f2538493206d__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
<<<<<<< Updated upstream
                "src": "12661:9:20",
=======
                "src": "11422:9:16",
>>>>>>> Stashed changes
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
<<<<<<< Updated upstream
                "src": "12676:4:20",
                "type": ""
              }
            ],
            "src": "12510:419:20"
=======
                "src": "11437:4:16",
                "type": ""
              }
            ],
            "src": "11271:419:16"
>>>>>>> Stashed changes
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< Updated upstream
              "src": "13041:128:20",
=======
              "src": "11759:80:16",
>>>>>>> Stashed changes
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11769:22:16",
                  "value": {
                    "arguments": [
                      {
<<<<<<< Updated upstream
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "13063:6:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13071:1:20",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13059:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13059:14:20"
                      },
                      {
                        "hexValue": "506c6561736520646566696e6520612073656c6c696e67207072696365206869",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13075:34:20",
                        "type": "",
                        "value": "Please define a selling price hi"
=======
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "11784:6:16"
>>>>>>> Stashed changes
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "13052:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13052:58:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13052:58:20"
=======
                      "src": "11778:5:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11778:13:16"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "11769:5:16"
                    }
                  ]
>>>>>>> Stashed changes
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "11827:5:16"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "11800:26:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11800:33:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11800:33:16"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "11737:6:16",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "11745:3:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11753:5:16",
                "type": ""
              }
            ],
            "src": "11696:143:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11922:274:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11968:83:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "11970:77:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11970:79:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11970:79:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "11943:7:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11952:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "11939:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11939:23:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11964:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "11935:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11935:32:16"
                  },
                  "nodeType": "YulIf",
                  "src": "11932:119:16"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "12061:128:16",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "12076:15:16",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12090:1:16",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "12080:6:16",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "12105:74:16",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "12151:9:16"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "12162:6:16"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "12147:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12147:22:16"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "12171:7:16"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "12115:31:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12115:64:16"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "12105:6:16"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11892:9:16",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "11903:7:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11915:6:16",
                "type": ""
              }
            ],
            "src": "11845:351:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12308:136:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "12330:6:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12338:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12326:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12326:14:16"
                      },
                      {
                        "hexValue": "54686973204e465420646f6573206e6f742062656c6f6e6720746f2074686520",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12342:34:16",
                        "type": "",
                        "value": "This NFT does not belong to the "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12319:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12319:58:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12319:58:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                            "src": "13131:6:20"
=======
                            "src": "12398:6:16"
>>>>>>> Stashed changes
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< Updated upstream
                            "src": "13139:2:20",
=======
                            "src": "12406:2:16",
>>>>>>> Stashed changes
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                          "src": "13127:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13127:15:20"
=======
                          "src": "12394:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12394:15:16"
>>>>>>> Stashed changes
                      },
                      {
                        "hexValue": "63757272656e74206d6573736167652073656e6465722e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
<<<<<<< Updated upstream
                        "src": "13144:17:20",
=======
                        "src": "12411:25:16",
>>>>>>> Stashed changes
                        "type": "",
                        "value": "current message sender."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "13120:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13120:42:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13120:42:20"
=======
                      "src": "12387:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12387:50:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12387:50:16"
>>>>>>> Stashed changes
                }
              ]
            },
            "name": "store_literal_in_memory_bd03a8d87c70fb34480c591cf12a6a899128bca11952a84818f1acd30d41f66a",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
<<<<<<< Updated upstream
                "src": "13033:6:20",
                "type": ""
              }
            ],
            "src": "12935:234:20"
=======
                "src": "12300:6:16",
                "type": ""
              }
            ],
            "src": "12202:242:16"
>>>>>>> Stashed changes
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< Updated upstream
              "src": "13321:220:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13331:74:20",
=======
              "src": "12596:220:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12606:74:16",
>>>>>>> Stashed changes
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                        "src": "13397:3:20"
=======
                        "src": "12672:3:16"
>>>>>>> Stashed changes
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< Updated upstream
                        "src": "13402:2:20",
=======
                        "src": "12677:2:16",
>>>>>>> Stashed changes
                        "type": "",
                        "value": "55"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "13338:58:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13338:67:20"
=======
                      "src": "12613:58:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12613:67:16"
>>>>>>> Stashed changes
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "13331:3:20"
=======
                      "src": "12606:3:16"
>>>>>>> Stashed changes
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                        "src": "13503:3:20"
=======
                        "src": "12778:3:16"
>>>>>>> Stashed changes
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_bd03a8d87c70fb34480c591cf12a6a899128bca11952a84818f1acd30d41f66a",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "13414:88:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13414:93:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13414:93:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13516:19:20",
=======
                      "src": "12689:88:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12689:93:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12689:93:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12791:19:16",
>>>>>>> Stashed changes
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                        "src": "13527:3:20"
=======
                        "src": "12802:3:16"
>>>>>>> Stashed changes
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< Updated upstream
                        "src": "13532:2:20",
=======
                        "src": "12807:2:16",
>>>>>>> Stashed changes
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "13523:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13523:12:20"
=======
                      "src": "12798:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12798:12:16"
>>>>>>> Stashed changes
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "13516:3:20"
=======
                      "src": "12791:3:16"
>>>>>>> Stashed changes
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_bd03a8d87c70fb34480c591cf12a6a899128bca11952a84818f1acd30d41f66a_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
<<<<<<< Updated upstream
                "src": "13309:3:20",
=======
                "src": "12584:3:16",
>>>>>>> Stashed changes
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
<<<<<<< Updated upstream
                "src": "13317:3:20",
                "type": ""
              }
            ],
            "src": "13175:366:20"
=======
                "src": "12592:3:16",
                "type": ""
              }
            ],
            "src": "12450:366:16"
>>>>>>> Stashed changes
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< Updated upstream
              "src": "13718:248:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13728:26:20",
=======
              "src": "12993:248:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13003:26:16",
>>>>>>> Stashed changes
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                        "src": "13740:9:20"
=======
                        "src": "13015:9:16"
>>>>>>> Stashed changes
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< Updated upstream
                        "src": "13751:2:20",
=======
                        "src": "13026:2:16",
>>>>>>> Stashed changes
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "13736:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13736:18:20"
=======
                      "src": "13011:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13011:18:16"
>>>>>>> Stashed changes
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "13728:4:20"
=======
                      "src": "13003:4:16"
>>>>>>> Stashed changes
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                            "src": "13775:9:20"
=======
                            "src": "13050:9:16"
>>>>>>> Stashed changes
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< Updated upstream
                            "src": "13786:1:20",
=======
                            "src": "13061:1:16",
>>>>>>> Stashed changes
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                          "src": "13771:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13771:17:20"
=======
                          "src": "13046:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13046:17:16"
>>>>>>> Stashed changes
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                            "src": "13794:4:20"
=======
                            "src": "13069:4:16"
>>>>>>> Stashed changes
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                            "src": "13800:9:20"
=======
                            "src": "13075:9:16"
>>>>>>> Stashed changes
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                          "src": "13790:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13790:20:20"
=======
                          "src": "13065:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13065:20:16"
>>>>>>> Stashed changes
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "13764:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13764:47:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13764:47:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13820:139:20",
=======
                      "src": "13039:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13039:47:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13039:47:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13095:139:16",
>>>>>>> Stashed changes
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                        "src": "13954:4:20"
=======
                        "src": "13229:4:16"
>>>>>>> Stashed changes
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_bd03a8d87c70fb34480c591cf12a6a899128bca11952a84818f1acd30d41f66a_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "13828:124:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13828:131:20"
=======
                      "src": "13103:124:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13103:131:16"
>>>>>>> Stashed changes
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "13820:4:20"
=======
                      "src": "13095:4:16"
>>>>>>> Stashed changes
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_bd03a8d87c70fb34480c591cf12a6a899128bca11952a84818f1acd30d41f66a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
<<<<<<< Updated upstream
                "src": "13698:9:20",
=======
                "src": "12973:9:16",
>>>>>>> Stashed changes
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
<<<<<<< Updated upstream
                "src": "13713:4:20",
                "type": ""
              }
            ],
            "src": "13547:419:20"
=======
                "src": "12988:4:16",
                "type": ""
              }
            ],
            "src": "12822:419:16"
>>>>>>> Stashed changes
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< Updated upstream
              "src": "14098:206:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14108:26:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14120:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14131:2:20",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14116:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14116:18:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14108:4:20"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "14188:6:20"
                      },
                      {
=======
              "src": "13353:128:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
>>>>>>> Stashed changes
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                            "src": "14201:9:20"
=======
                            "src": "13375:6:16"
>>>>>>> Stashed changes
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< Updated upstream
                            "src": "14212:1:20",
=======
                            "src": "13383:1:16",
>>>>>>> Stashed changes
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                          "src": "14197:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14197:17:20"
=======
                          "src": "13371:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13371:14:16"
                      },
                      {
                        "hexValue": "506c6561736520646566696e6520612073656c6c696e67207072696365206869",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13387:34:16",
                        "type": "",
                        "value": "Please define a selling price hi"
>>>>>>> Stashed changes
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "14144:43:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14144:71:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14144:71:20"
=======
                      "src": "13364:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13364:58:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13364:58:16"
>>>>>>> Stashed changes
                },
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< Updated upstream
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "14269:6:20"
                      },
                      {
=======
>>>>>>> Stashed changes
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                            "src": "14282:9:20"
=======
                            "src": "13443:6:16"
>>>>>>> Stashed changes
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< Updated upstream
                            "src": "14293:2:20",
=======
                            "src": "13451:2:16",
>>>>>>> Stashed changes
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                          "src": "14278:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14278:18:20"
=======
                          "src": "13439:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13439:15:16"
                      },
                      {
                        "hexValue": "67686572207468616e207a65726f2e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13456:17:16",
                        "type": "",
                        "value": "gher than zero."
>>>>>>> Stashed changes
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "14225:43:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14225:72:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14225:72:20"
=======
                      "src": "13432:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13432:42:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13432:42:16"
>>>>>>> Stashed changes
                }
              ]
            },
            "name": "store_literal_in_memory_b9ebebcb369b061f0ded2abc03dd5c1efcd60e09dffde1f0eed07a42693c8f81",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
<<<<<<< Updated upstream
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14062:9:20",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "14074:6:20",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "14082:6:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14093:4:20",
                "type": ""
              }
            ],
            "src": "13972:332:20"
=======
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "13345:6:16",
                "type": ""
              }
            ],
            "src": "13247:234:16"
>>>>>>> Stashed changes
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< Updated upstream
              "src": "14405:326:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14415:75:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "14482:6:20"
                          }
                        ],
                        "functionName": {
                          "name": "array_allocation_size_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "14440:41:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14440:49:20"
                      }
                    ],
                    "functionName": {
                      "name": "allocate_memory",
                      "nodeType": "YulIdentifier",
                      "src": "14424:15:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14424:66:20"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "14415:5:20"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "14506:5:20"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "14513:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14499:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14499:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14499:21:20"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "14529:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "14544:5:20"
=======
              "src": "13633:220:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13643:74:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13709:3:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13714:2:16",
                        "type": "",
                        "value": "47"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13650:58:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13650:67:16"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "13643:3:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13815:3:16"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_b9ebebcb369b061f0ded2abc03dd5c1efcd60e09dffde1f0eed07a42693c8f81",
                      "nodeType": "YulIdentifier",
                      "src": "13726:88:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13726:93:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13726:93:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13828:19:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13839:3:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13844:2:16",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13835:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13835:12:16"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "13828:3:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_b9ebebcb369b061f0ded2abc03dd5c1efcd60e09dffde1f0eed07a42693c8f81_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "13621:3:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "13629:3:16",
                "type": ""
              }
            ],
            "src": "13487:366:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14030:248:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14040:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14052:9:16"
>>>>>>> Stashed changes
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< Updated upstream
                        "src": "14551:4:20",
                        "type": "",
                        "value": "0x20"
=======
                        "src": "14063:2:16",
                        "type": "",
                        "value": "32"
>>>>>>> Stashed changes
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "14540:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14540:16:20"
=======
                      "src": "14048:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14048:18:16"
>>>>>>> Stashed changes
                  },
                  "variables": [
                    {
<<<<<<< Updated upstream
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "14533:3:20",
                      "type": ""
=======
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14040:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14087:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14098:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14083:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14083:17:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "14106:4:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14112:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "14102:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14102:20:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14076:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14076:47:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14076:47:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14132:139:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "14266:4:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_b9ebebcb369b061f0ded2abc03dd5c1efcd60e09dffde1f0eed07a42693c8f81_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14140:124:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14140:131:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14132:4:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b9ebebcb369b061f0ded2abc03dd5c1efcd60e09dffde1f0eed07a42693c8f81__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14010:9:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14025:4:16",
                "type": ""
              }
            ],
            "src": "13859:419:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14410:206:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14420:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14432:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14443:2:16",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14428:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14428:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14420:4:16"
>>>>>>> Stashed changes
                    }
                  ]
                },
                {
<<<<<<< Updated upstream
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14594:83:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
                            "nodeType": "YulIdentifier",
                            "src": "14596:77:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14596:79:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14596:79:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "14575:3:20"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "14580:6:20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14571:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14571:16:20"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "14589:3:20"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "14568:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14568:25:20"
                  },
                  "nodeType": "YulIf",
                  "src": "14565:112:20"
=======
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "14500:6:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14513:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14524:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14509:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14509:17:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14456:43:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14456:71:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14456:71:16"
>>>>>>> Stashed changes
                },
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< Updated upstream
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "14708:3:20"
                      },
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "14713:3:20"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "14718:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "14686:21:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14686:39:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14686:39:20"
                }
              ]
            },
            "name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
=======
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "14581:6:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14594:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14605:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14590:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14590:18:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14537:43:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14537:72:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14537:72:16"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
>>>>>>> Stashed changes
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
<<<<<<< Updated upstream
                "src": "14378:3:20",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "14383:6:20",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "14391:3:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "14399:5:20",
                "type": ""
              }
            ],
            "src": "14310:421:20"
=======
                "src": "14374:9:16",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "14386:6:16",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "14394:6:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14405:4:16",
                "type": ""
              }
            ],
            "src": "14284:332:16"
>>>>>>> Stashed changes
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< Updated upstream
              "src": "14824:282:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14873:83:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
                            "nodeType": "YulIdentifier",
                            "src": "14875:77:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14875:79:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14875:79:20"
                      }
                    ]
                  },
                  "condition": {
=======
              "src": "14748:206:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14758:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14770:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14781:2:16",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14766:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14766:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14758:4:16"
                    }
                  ]
                },
                {
                  "expression": {
>>>>>>> Stashed changes
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "14838:6:16"
                      },
                      {
                        "arguments": [
                          {
<<<<<<< Updated upstream
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "14852:6:20"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "14860:4:20",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "14848:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14848:17:20"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "14867:3:20"
=======
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14851:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14862:1:16",
                            "type": "",
                            "value": "0"
>>>>>>> Stashed changes
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                          "src": "14844:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14844:27:20"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "14837:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14837:35:20"
                  },
                  "nodeType": "YulIf",
                  "src": "14834:122:20"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "14965:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "14985:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "14979:5:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14979:13:20"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "14969:6:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15001:99:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "15073:6:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15081:4:20",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15069:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15069:17:20"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "15088:6:20"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "15096:3:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "15010:58:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15010:90:20"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "15001:5:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_t_string_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "14802:6:20",
=======
                          "src": "14847:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14847:17:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14794:43:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14794:71:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14794:71:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "14919:6:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14932:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14943:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14928:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14928:18:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14875:43:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14875:72:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14875:72:16"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14712:9:16",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "14724:6:16",
>>>>>>> Stashed changes
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
<<<<<<< Updated upstream
                "src": "14810:3:20",
=======
                "src": "14732:6:16",
>>>>>>> Stashed changes
                "type": ""
              }
            ],
            "returnVariables": [
              {
<<<<<<< Updated upstream
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "14818:5:20",
                "type": ""
              }
            ],
            "src": "14751:355:20"
=======
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14743:4:16",
                "type": ""
              }
            ],
            "src": "14622:332:16"
>>>>>>> Stashed changes
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< Updated upstream
              "src": "15199:437:20",
=======
              "src": "15000:76:16",
>>>>>>> Stashed changes
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
<<<<<<< Updated upstream
                    "src": "15245:83:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "15247:77:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15247:79:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15247:79:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "15220:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15229:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "15216:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15216:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15241:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "15212:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15212:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "15209:119:20"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "15338:291:20",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "15353:38:20",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "15377:9:20"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15388:1:20",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "15373:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15373:17:20"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "15367:5:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15367:24:20"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "15357:6:20",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "15438:83:20",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                                "nodeType": "YulIdentifier",
                                "src": "15440:77:20"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "15440:79:20"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "15440:79:20"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "15410:6:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15418:18:20",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "15407:2:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15407:30:20"
                      },
                      "nodeType": "YulIf",
                      "src": "15404:117:20"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "15535:84:20",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "15591:9:20"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "15602:6:20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "15587:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15587:22:20"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "15611:7:20"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_memory_ptr_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "15545:41:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15545:74:20"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "15535:6:20"
=======
                    "src": "15054:16:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15063:1:16",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15066:1:16",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "15056:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15056:12:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15056:12:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "15023:5:16"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "15045:5:16"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "15030:14:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15030:21:16"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "15020:2:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15020:32:16"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "15013:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15013:40:16"
                  },
                  "nodeType": "YulIf",
                  "src": "15010:60:16"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14993:5:16",
                "type": ""
              }
            ],
            "src": "14960:116:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15142:77:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15152:22:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "15167:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "15161:5:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15161:13:16"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "15152:5:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "15207:5:16"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "15183:23:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15183:30:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15183:30:16"
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "15120:6:16",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "15128:3:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "15136:5:16",
                "type": ""
              }
            ],
            "src": "15082:137:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15299:271:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "15345:83:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "15347:77:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15347:79:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15347:79:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "15320:7:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15329:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "15316:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15316:23:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15341:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "15312:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15312:32:16"
                  },
                  "nodeType": "YulIf",
                  "src": "15309:119:16"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "15438:125:16",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "15453:15:16",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15467:1:16",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "15457:6:16",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "15482:71:16",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "15525:9:16"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "15536:6:16"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "15521:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15521:22:16"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "15545:7:16"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "15492:28:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15492:61:16"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "15482:6:16"
>>>>>>> Stashed changes
                        }
                      ]
                    }
                  ]
                }
              ]
            },
<<<<<<< Updated upstream
            "name": "abi_decode_tuple_t_string_memory_ptr_fromMemory",
=======
            "name": "abi_decode_tuple_t_bool_fromMemory",
>>>>>>> Stashed changes
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
<<<<<<< Updated upstream
                "src": "15169:9:20",
=======
                "src": "15269:9:16",
>>>>>>> Stashed changes
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
<<<<<<< Updated upstream
                "src": "15180:7:20",
=======
                "src": "15280:7:16",
>>>>>>> Stashed changes
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
<<<<<<< Updated upstream
                "src": "15192:6:20",
                "type": ""
              }
            ],
            "src": "15112:524:20"
=======
                "src": "15292:6:16",
                "type": ""
              }
            ],
            "src": "15225:345:16"
>>>>>>> Stashed changes
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< Updated upstream
              "src": "15748:130:20",
=======
              "src": "15682:115:16",
>>>>>>> Stashed changes
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                            "src": "15770:6:20"
=======
                            "src": "15704:6:16"
>>>>>>> Stashed changes
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< Updated upstream
                            "src": "15778:1:20",
=======
                            "src": "15712:1:16",
>>>>>>> Stashed changes
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                          "src": "15766:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15766:14:20"
                      },
                      {
                        "hexValue": "54686520757365722061646472657373206e6565647320746f20626520646966",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15782:34:20",
                        "type": "",
                        "value": "The user address needs to be dif"
=======
                          "src": "15700:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15700:14:16"
                      },
                      {
                        "hexValue": "54686973204e465420646964206e6f7420737461727420616e2061756374696f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15716:34:16",
                        "type": "",
                        "value": "This NFT did not start an auctio"
>>>>>>> Stashed changes
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "15759:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15759:58:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15759:58:20"
=======
                      "src": "15693:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15693:58:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15693:58:16"
>>>>>>> Stashed changes
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                            "src": "15838:6:20"
=======
                            "src": "15772:6:16"
>>>>>>> Stashed changes
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< Updated upstream
                            "src": "15846:2:20",
=======
                            "src": "15780:2:16",
>>>>>>> Stashed changes
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                          "src": "15834:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15834:15:20"
                      },
                      {
                        "hexValue": "666572656e742066726f6d207a65726f2e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15851:19:20",
                        "type": "",
                        "value": "ferent from zero."
=======
                          "src": "15768:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15768:15:16"
                      },
                      {
                        "hexValue": "6e2e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15785:4:16",
                        "type": "",
                        "value": "n."
>>>>>>> Stashed changes
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "15827:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15827:44:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15827:44:20"
                }
              ]
            },
            "name": "store_literal_in_memory_2ec7d52e022d4a512c31415dd9580c398033bd13d5d9ee290019f128926e073f",
=======
                      "src": "15761:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15761:29:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15761:29:16"
                }
              ]
            },
            "name": "store_literal_in_memory_501011de456270e6d688e8443437231c2568dc785d874a77f30894a009ba645f",
>>>>>>> Stashed changes
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
<<<<<<< Updated upstream
                "src": "15740:6:20",
                "type": ""
              }
            ],
            "src": "15642:236:20"
=======
                "src": "15674:6:16",
                "type": ""
              }
            ],
            "src": "15576:221:16"
>>>>>>> Stashed changes
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< Updated upstream
              "src": "16030:220:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16040:74:20",
=======
              "src": "15949:220:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15959:74:16",
>>>>>>> Stashed changes
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                        "src": "16106:3:20"
=======
                        "src": "16025:3:16"
>>>>>>> Stashed changes
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< Updated upstream
                        "src": "16111:2:20",
                        "type": "",
                        "value": "49"
=======
                        "src": "16030:2:16",
                        "type": "",
                        "value": "34"
>>>>>>> Stashed changes
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "16047:58:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16047:67:20"
=======
                      "src": "15966:58:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15966:67:16"
>>>>>>> Stashed changes
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "16040:3:20"
=======
                      "src": "15959:3:16"
>>>>>>> Stashed changes
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                        "src": "16212:3:20"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_2ec7d52e022d4a512c31415dd9580c398033bd13d5d9ee290019f128926e073f",
                      "nodeType": "YulIdentifier",
                      "src": "16123:88:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16123:93:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16123:93:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16225:19:20",
=======
                        "src": "16131:3:16"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_501011de456270e6d688e8443437231c2568dc785d874a77f30894a009ba645f",
                      "nodeType": "YulIdentifier",
                      "src": "16042:88:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16042:93:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16042:93:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16144:19:16",
>>>>>>> Stashed changes
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                        "src": "16236:3:20"
=======
                        "src": "16155:3:16"
>>>>>>> Stashed changes
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< Updated upstream
                        "src": "16241:2:20",
=======
                        "src": "16160:2:16",
>>>>>>> Stashed changes
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "16232:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16232:12:20"
=======
                      "src": "16151:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16151:12:16"
>>>>>>> Stashed changes
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "16225:3:20"
=======
                      "src": "16144:3:16"
>>>>>>> Stashed changes
                    }
                  ]
                }
              ]
            },
<<<<<<< Updated upstream
            "name": "abi_encode_t_stringliteral_2ec7d52e022d4a512c31415dd9580c398033bd13d5d9ee290019f128926e073f_to_t_string_memory_ptr_fromStack",
=======
            "name": "abi_encode_t_stringliteral_501011de456270e6d688e8443437231c2568dc785d874a77f30894a009ba645f_to_t_string_memory_ptr_fromStack",
>>>>>>> Stashed changes
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
<<<<<<< Updated upstream
                "src": "16018:3:20",
=======
                "src": "15937:3:16",
>>>>>>> Stashed changes
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
<<<<<<< Updated upstream
                "src": "16026:3:20",
                "type": ""
              }
            ],
            "src": "15884:366:20"
=======
                "src": "15945:3:16",
                "type": ""
              }
            ],
            "src": "15803:366:16"
>>>>>>> Stashed changes
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< Updated upstream
              "src": "16427:248:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16437:26:20",
=======
              "src": "16346:248:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16356:26:16",
>>>>>>> Stashed changes
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                        "src": "16449:9:20"
=======
                        "src": "16368:9:16"
>>>>>>> Stashed changes
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< Updated upstream
                        "src": "16460:2:20",
=======
                        "src": "16379:2:16",
>>>>>>> Stashed changes
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "16445:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16445:18:20"
=======
                      "src": "16364:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16364:18:16"
>>>>>>> Stashed changes
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "16437:4:20"
=======
                      "src": "16356:4:16"
>>>>>>> Stashed changes
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                            "src": "16484:9:20"
=======
                            "src": "16403:9:16"
>>>>>>> Stashed changes
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< Updated upstream
                            "src": "16495:1:20",
=======
                            "src": "16414:1:16",
>>>>>>> Stashed changes
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                          "src": "16480:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16480:17:20"
=======
                          "src": "16399:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16399:17:16"
>>>>>>> Stashed changes
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                            "src": "16503:4:20"
=======
                            "src": "16422:4:16"
>>>>>>> Stashed changes
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                            "src": "16509:9:20"
=======
                            "src": "16428:9:16"
>>>>>>> Stashed changes
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                          "src": "16499:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16499:20:20"
=======
                          "src": "16418:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16418:20:16"
>>>>>>> Stashed changes
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "16473:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16473:47:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16473:47:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16529:139:20",
=======
                      "src": "16392:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16392:47:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16392:47:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16448:139:16",
>>>>>>> Stashed changes
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                        "src": "16663:4:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_2ec7d52e022d4a512c31415dd9580c398033bd13d5d9ee290019f128926e073f_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "16537:124:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16537:131:20"
=======
                        "src": "16582:4:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_501011de456270e6d688e8443437231c2568dc785d874a77f30894a009ba645f_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "16456:124:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16456:131:16"
>>>>>>> Stashed changes
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "16529:4:20"
=======
                      "src": "16448:4:16"
>>>>>>> Stashed changes
                    }
                  ]
                }
              ]
            },
<<<<<<< Updated upstream
            "name": "abi_encode_tuple_t_stringliteral_2ec7d52e022d4a512c31415dd9580c398033bd13d5d9ee290019f128926e073f__to_t_string_memory_ptr__fromStack_reversed",
=======
            "name": "abi_encode_tuple_t_stringliteral_501011de456270e6d688e8443437231c2568dc785d874a77f30894a009ba645f__to_t_string_memory_ptr__fromStack_reversed",
>>>>>>> Stashed changes
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
<<<<<<< Updated upstream
                "src": "16407:9:20",
=======
                "src": "16326:9:16",
>>>>>>> Stashed changes
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
<<<<<<< Updated upstream
                "src": "16422:4:20",
                "type": ""
              }
            ],
            "src": "16256:419:20"
=======
                "src": "16341:4:16",
                "type": ""
              }
            ],
            "src": "16175:419:16"
>>>>>>> Stashed changes
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< Updated upstream
              "src": "16746:53:20",
=======
              "src": "16706:114:16",
>>>>>>> Stashed changes
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< Updated upstream
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "16763:3:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "16786:5:20"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "16768:17:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16768:24:20"
=======
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "16728:6:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16736:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16724:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16724:14:16"
                      },
                      {
                        "hexValue": "5468652061756374696f6e20686173206e6f742066696e697368656420796574",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16740:34:16",
                        "type": "",
                        "value": "The auction has not finished yet"
>>>>>>> Stashed changes
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "16756:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16756:37:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16756:37:20"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "16734:5:20",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "16741:3:20",
                "type": ""
              }
            ],
            "src": "16681:118:20"
=======
                      "src": "16717:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16717:58:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16717:58:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "16796:6:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16804:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16792:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16792:15:16"
                      },
                      {
                        "hexValue": "2e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16809:3:16",
                        "type": "",
                        "value": "."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16785:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16785:28:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16785:28:16"
                }
              ]
            },
            "name": "store_literal_in_memory_c28146fd998b3c26c3dbbf224b649b757f3a777e9384ac0ea067659d0f358f25",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "16698:6:16",
                "type": ""
              }
            ],
            "src": "16600:220:16"
>>>>>>> Stashed changes
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< Updated upstream
              "src": "16858:32:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16868:16:20",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "16879:5:20"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "16868:7:20"
=======
              "src": "16972:220:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16982:74:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "17048:3:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17053:2:16",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "16989:58:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16989:67:16"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "16982:3:16"
>>>>>>> Stashed changes
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_rational_0_by_1",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "16840:5:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "16850:7:20",
                "type": ""
              }
            ],
            "src": "16805:85:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16964:90:20",
              "statements": [
                {
<<<<<<< Updated upstream
                  "nodeType": "YulAssignment",
                  "src": "16974:74:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "17040:5:20"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_rational_0_by_1",
                              "nodeType": "YulIdentifier",
                              "src": "17014:25:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17014:32:20"
                          }
                        ],
                        "functionName": {
                          "name": "identity",
                          "nodeType": "YulIdentifier",
                          "src": "17005:8:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17005:42:20"
=======
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "17154:3:16"
>>>>>>> Stashed changes
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_c28146fd998b3c26c3dbbf224b649b757f3a777e9384ac0ea067659d0f358f25",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "16987:17:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16987:61:20"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "16974:9:20"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_rational_0_by_1_to_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "16944:5:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "16954:9:20",
                "type": ""
              }
            ],
            "src": "16896:158:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17133:74:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "17150:3:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "17194:5:20"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_rational_0_by_1_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "17155:38:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17155:45:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17143:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17143:58:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17143:58:20"
                }
              ]
            },
            "name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "17121:5:20",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "17128:3:20",
                "type": ""
              }
            ],
            "src": "17060:147:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17255:48:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17265:32:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "17290:5:20"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "17283:6:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17283:13:20"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "17276:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17276:21:20"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "17265:7:20"
=======
                      "src": "17065:88:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17065:93:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17065:93:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17167:19:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "17178:3:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17183:2:16",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17174:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17174:12:16"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "17167:3:16"
>>>>>>> Stashed changes
                    }
                  ]
                }
              ]
            },
<<<<<<< Updated upstream
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "17237:5:20",
=======
            "name": "abi_encode_t_stringliteral_c28146fd998b3c26c3dbbf224b649b757f3a777e9384ac0ea067659d0f358f25_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "16960:3:16",
>>>>>>> Stashed changes
                "type": ""
              }
            ],
            "returnVariables": [
              {
<<<<<<< Updated upstream
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "17247:7:20",
                "type": ""
              }
            ],
            "src": "17213:90:20"
=======
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "16968:3:16",
                "type": ""
              }
            ],
            "src": "16826:366:16"
>>>>>>> Stashed changes
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< Updated upstream
              "src": "17368:50:20",
=======
              "src": "17369:248:16",
>>>>>>> Stashed changes
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17379:26:16",
                  "value": {
                    "arguments": [
                      {
<<<<<<< Updated upstream
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "17385:3:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "17405:5:20"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "17390:14:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17390:21:20"
=======
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17391:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17402:2:16",
                        "type": "",
                        "value": "32"
>>>>>>> Stashed changes
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "17378:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17378:34:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17378:34:20"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "17356:5:20",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "17363:3:20",
                "type": ""
              }
            ],
            "src": "17309:109:20"
=======
                      "src": "17387:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17387:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17379:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17426:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17437:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17422:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17422:17:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "17445:4:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17451:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "17441:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17441:20:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17415:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17415:47:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17415:47:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17471:139:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "17605:4:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_c28146fd998b3c26c3dbbf224b649b757f3a777e9384ac0ea067659d0f358f25_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "17479:124:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17479:131:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17471:4:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c28146fd998b3c26c3dbbf224b649b757f3a777e9384ac0ea067659d0f358f25__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17349:9:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17364:4:16",
                "type": ""
              }
            ],
            "src": "17198:419:16"
>>>>>>> Stashed changes
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< Updated upstream
              "src": "17850:1149:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17860:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17872:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17883:3:20",
                        "type": "",
                        "value": "320"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17868:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17868:19:20"
=======
              "src": "17686:80:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17696:22:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "17711:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "17705:5:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17705:13:16"
>>>>>>> Stashed changes
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "17860:4:20"
=======
                      "src": "17696:5:16"
>>>>>>> Stashed changes
                    }
                  ]
                },
                {
                  "expression": {
<<<<<<< Updated upstream
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "17941:6:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17954:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17965:1:20",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17950:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17950:17:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "17897:43:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17897:71:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17897:71:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "18022:6:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18035:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18046:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18031:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18031:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "17978:43:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17978:72:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17978:72:20"
                },
=======
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "17754:5:16"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "17727:26:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17727:33:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17727:33:16"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "17664:6:16",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "17672:3:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "17680:5:16",
                "type": ""
              }
            ],
            "src": "17623:143:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17849:274:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "17895:83:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "17897:77:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "17897:79:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "17897:79:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "17870:7:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17879:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "17866:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17866:23:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17891:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "17862:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17862:32:16"
                  },
                  "nodeType": "YulIf",
                  "src": "17859:119:16"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "17988:128:16",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "18003:15:16",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18017:1:16",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "18007:6:16",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "18032:74:16",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "18078:9:16"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "18089:6:16"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "18074:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18074:22:16"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "18098:7:16"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "18042:31:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18042:64:16"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "18032:6:16"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17819:9:16",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "17830:7:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "17842:6:16",
                "type": ""
              }
            ],
            "src": "17772:351:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18235:127:16",
              "statements": [
>>>>>>> Stashed changes
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
<<<<<<< Updated upstream
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18071:9:20"
=======
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "18257:6:16"
>>>>>>> Stashed changes
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< Updated upstream
                            "src": "18082:2:20",
                            "type": "",
                            "value": "64"
=======
                            "src": "18265:1:16",
                            "type": "",
                            "value": "0"
>>>>>>> Stashed changes
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                          "src": "18067:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18067:18:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "18091:4:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18097:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "18087:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18087:20:20"
=======
                          "src": "18253:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18253:14:16"
                      },
                      {
                        "hexValue": "4572726f723a2074686520686967686573742062696464657220697320746865",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18269:34:16",
                        "type": "",
                        "value": "Error: the highest bidder is the"
>>>>>>> Stashed changes
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "18060:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18060:48:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18060:48:20"
=======
                      "src": "18246:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18246:58:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18246:58:16"
>>>>>>> Stashed changes
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "18325:6:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18333:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18321:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18321:15:16"
                      },
                      {
                        "hexValue": "207a65726f20616464726573732e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18338:16:16",
                        "type": "",
                        "value": " zero address."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18314:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18314:41:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18314:41:16"
                }
              ]
            },
            "name": "store_literal_in_memory_a39f1af373a3b18a733a1f8206b930382ab93f9170098f2793be2b48a56be00e",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "18227:6:16",
                "type": ""
              }
            ],
            "src": "18129:233:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18514:220:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
<<<<<<< Updated upstream
                  "src": "18117:86:20",
=======
                  "src": "18524:74:16",
>>>>>>> Stashed changes
                  "value": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                        "src": "18189:6:20"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "18198:4:20"
=======
                        "src": "18590:3:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18595:2:16",
                        "type": "",
                        "value": "46"
>>>>>>> Stashed changes
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "18125:63:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18125:78:20"
=======
                      "src": "18531:58:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18531:67:16"
>>>>>>> Stashed changes
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "18117:4:20"
=======
                      "src": "18524:3:16"
>>>>>>> Stashed changes
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< Updated upstream
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18224:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18235:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18220:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18220:18:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "18244:4:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18250:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "18240:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18240:20:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18213:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18213:48:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18213:48:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18270:86:20",
=======
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "18696:3:16"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_a39f1af373a3b18a733a1f8206b930382ab93f9170098f2793be2b48a56be00e",
                      "nodeType": "YulIdentifier",
                      "src": "18607:88:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18607:93:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18607:93:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18709:19:16",
>>>>>>> Stashed changes
                  "value": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                        "src": "18342:6:20"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "18351:4:20"
=======
                        "src": "18720:3:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18725:2:16",
                        "type": "",
                        "value": "64"
>>>>>>> Stashed changes
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "18278:63:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18278:78:20"
=======
                      "src": "18716:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18716:12:16"
>>>>>>> Stashed changes
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "18270:4:20"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18377:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18388:3:20",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18373:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18373:19:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "18398:4:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18404:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "18394:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18394:20:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18366:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18366:49:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18366:49:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18424:86:20",
=======
                      "src": "18709:3:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_a39f1af373a3b18a733a1f8206b930382ab93f9170098f2793be2b48a56be00e_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "18502:3:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "18510:3:16",
                "type": ""
              }
            ],
            "src": "18368:366:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18911:248:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "18921:26:16",
>>>>>>> Stashed changes
                  "value": {
                    "arguments": [
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                        "src": "18496:6:20"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "18505:4:20"
=======
                        "src": "18933:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18944:2:16",
                        "type": "",
                        "value": "32"
>>>>>>> Stashed changes
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "18432:63:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18432:78:20"
=======
                      "src": "18929:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18929:18:16"
>>>>>>> Stashed changes
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "18424:4:20"
=======
                      "src": "18921:4:16"
>>>>>>> Stashed changes
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                            "src": "18531:9:20"
=======
                            "src": "18968:9:16"
>>>>>>> Stashed changes
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< Updated upstream
                            "src": "18542:3:20",
=======
                            "src": "18979:1:16",
>>>>>>> Stashed changes
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                          "src": "18527:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18527:19:20"
=======
                          "src": "18964:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18964:17:16"
>>>>>>> Stashed changes
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                            "src": "18552:4:20"
=======
                            "src": "18987:4:16"
>>>>>>> Stashed changes
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                            "src": "18558:9:20"
=======
                            "src": "18993:9:16"
>>>>>>> Stashed changes
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                          "src": "18548:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18548:20:20"
=======
                          "src": "18983:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18983:20:16"
>>>>>>> Stashed changes
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "18520:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18520:49:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18520:49:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18578:86:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "value5",
                        "nodeType": "YulIdentifier",
                        "src": "18650:6:20"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "18659:4:20"
=======
                      "src": "18957:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18957:47:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18957:47:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19013:139:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "19147:4:16"
>>>>>>> Stashed changes
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_a39f1af373a3b18a733a1f8206b930382ab93f9170098f2793be2b48a56be00e_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "18586:63:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18586:78:20"
=======
                      "src": "19021:124:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19021:131:16"
>>>>>>> Stashed changes
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "18578:4:20"
=======
                      "src": "19013:4:16"
>>>>>>> Stashed changes
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a39f1af373a3b18a733a1f8206b930382ab93f9170098f2793be2b48a56be00e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "18891:9:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "18906:4:16",
                "type": ""
              }
            ],
            "src": "18740:419:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19278:34:16",
              "statements": [
                {
<<<<<<< Updated upstream
                  "expression": {
                    "arguments": [
                      {
                        "name": "value6",
                        "nodeType": "YulIdentifier",
                        "src": "18718:6:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18731:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18742:3:20",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18727:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18727:19:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "18674:43:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18674:73:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18674:73:20"
=======
                  "nodeType": "YulAssignment",
                  "src": "19288:18:16",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "19303:3:16"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "19288:11:16"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "19250:3:16",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "19255:6:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "19266:11:16",
                "type": ""
              }
            ],
            "src": "19165:147:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19424:8:16",
              "statements": []
            },
            "name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "19416:6:16",
                "type": ""
              }
            ],
            "src": "19318:114:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19601:235:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "19611:90:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "19694:3:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19699:1:16",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "19618:75:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19618:83:16"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "19611:3:16"
                    }
                  ]
>>>>>>> Stashed changes
                },
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< Updated upstream
                        "name": "value7",
                        "nodeType": "YulIdentifier",
                        "src": "18809:6:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18822:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18833:3:20",
                            "type": "",
                            "value": "224"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18818:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18818:19:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "18757:51:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18757:81:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18757:81:20"
=======
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "19799:3:16"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                      "nodeType": "YulIdentifier",
                      "src": "19710:88:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19710:93:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19710:93:16"
>>>>>>> Stashed changes
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19812:18:16",
                  "value": {
                    "arguments": [
                      {
<<<<<<< Updated upstream
                        "name": "value8",
                        "nodeType": "YulIdentifier",
                        "src": "18886:6:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18899:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18910:3:20",
                            "type": "",
                            "value": "256"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18895:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18895:19:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "18848:37:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18848:67:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18848:67:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value9",
                        "nodeType": "YulIdentifier",
                        "src": "18963:6:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18976:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18987:3:20",
                            "type": "",
                            "value": "288"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18972:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18972:19:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "18925:37:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18925:67:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18925:67:20"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_address_t_rational_0_by_1_t_bool_t_bool__to_t_address_t_address_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_address_t_uint256_t_bool_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17750:9:20",
                "type": ""
              },
              {
                "name": "value9",
                "nodeType": "YulTypedName",
                "src": "17762:6:20",
                "type": ""
              },
              {
                "name": "value8",
                "nodeType": "YulTypedName",
                "src": "17770:6:20",
                "type": ""
              },
              {
                "name": "value7",
                "nodeType": "YulTypedName",
                "src": "17778:6:20",
                "type": ""
              },
              {
                "name": "value6",
                "nodeType": "YulTypedName",
                "src": "17786:6:20",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "17794:6:20",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "17802:6:20",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "17810:6:20",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "17818:6:20",
=======
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "19823:3:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19828:1:16",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "19819:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19819:11:16"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "19812:3:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "19589:3:16",
>>>>>>> Stashed changes
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
<<<<<<< Updated upstream
                "src": "17826:6:20",
=======
                "src": "19597:3:16",
>>>>>>> Stashed changes
                "type": ""
              }
            ],
            "src": "19438:398:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20030:191:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "20041:154:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "20191:3:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "20048:141:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20048:147:16"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "20041:3:16"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20205:10:16",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "20212:3:16"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "20205:3:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
<<<<<<< Updated upstream
                "src": "17834:6:20",
=======
                "src": "20017:3:16",
>>>>>>> Stashed changes
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
<<<<<<< Updated upstream
                "src": "17845:4:20",
                "type": ""
              }
            ],
            "src": "17424:1575:20"
=======
                "src": "20026:3:16",
                "type": ""
              }
            ],
            "src": "19842:379:16"
>>>>>>> Stashed changes
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< Updated upstream
              "src": "19111:69:20",
=======
              "src": "20333:117:16",
>>>>>>> Stashed changes
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                            "src": "19133:6:20"
=======
                            "src": "20355:6:16"
>>>>>>> Stashed changes
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< Updated upstream
                            "src": "19141:1:20",
=======
                            "src": "20363:1:16",
>>>>>>> Stashed changes
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                          "src": "19129:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19129:14:20"
                      },
                      {
                        "hexValue": "54686973204e4654206973206e6f7420666f722073616c652e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "19145:27:20",
                        "type": "",
                        "value": "This NFT is not for sale."
=======
                          "src": "20351:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20351:14:16"
                      },
                      {
                        "hexValue": "4661696c656420746f2073656e642045544820746f20746865204e4654206f77",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "20367:34:16",
                        "type": "",
                        "value": "Failed to send ETH to the NFT ow"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20344:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20344:58:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20344:58:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "20423:6:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20431:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20419:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20419:15:16"
                      },
                      {
                        "hexValue": "6e65722e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "20436:6:16",
                        "type": "",
                        "value": "ner."
>>>>>>> Stashed changes
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "19122:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19122:51:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19122:51:20"
                }
              ]
            },
            "name": "store_literal_in_memory_795e888268ddf9337f106a3868637d7c62055ce14f5dda1abe76d3564d875fc2",
=======
                      "src": "20412:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20412:31:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20412:31:16"
                }
              ]
            },
            "name": "store_literal_in_memory_c3acfb094a156b84661b3c3c57a84f0a875490c81d212e3c337f85800112c49c",
>>>>>>> Stashed changes
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
<<<<<<< Updated upstream
                "src": "19103:6:20",
                "type": ""
              }
            ],
            "src": "19005:175:20"
=======
                "src": "20325:6:16",
                "type": ""
              }
            ],
            "src": "20227:223:16"
>>>>>>> Stashed changes
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< Updated upstream
              "src": "19332:220:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "19342:74:20",
=======
              "src": "20602:220:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "20612:74:16",
>>>>>>> Stashed changes
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                        "src": "19408:3:20"
=======
                        "src": "20678:3:16"
>>>>>>> Stashed changes
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< Updated upstream
                        "src": "19413:2:20",
                        "type": "",
                        "value": "25"
=======
                        "src": "20683:2:16",
                        "type": "",
                        "value": "36"
>>>>>>> Stashed changes
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "19349:58:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19349:67:20"
=======
                      "src": "20619:58:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20619:67:16"
>>>>>>> Stashed changes
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "19342:3:20"
=======
                      "src": "20612:3:16"
>>>>>>> Stashed changes
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                        "src": "19514:3:20"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_795e888268ddf9337f106a3868637d7c62055ce14f5dda1abe76d3564d875fc2",
                      "nodeType": "YulIdentifier",
                      "src": "19425:88:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19425:93:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19425:93:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19527:19:20",
=======
                        "src": "20784:3:16"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_c3acfb094a156b84661b3c3c57a84f0a875490c81d212e3c337f85800112c49c",
                      "nodeType": "YulIdentifier",
                      "src": "20695:88:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20695:93:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20695:93:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20797:19:16",
>>>>>>> Stashed changes
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                        "src": "19538:3:20"
=======
                        "src": "20808:3:16"
>>>>>>> Stashed changes
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< Updated upstream
                        "src": "19543:2:20",
=======
                        "src": "20813:2:16",
>>>>>>> Stashed changes
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "19534:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19534:12:20"
=======
                      "src": "20804:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20804:12:16"
>>>>>>> Stashed changes
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "19527:3:20"
=======
                      "src": "20797:3:16"
>>>>>>> Stashed changes
                    }
                  ]
                }
              ]
            },
<<<<<<< Updated upstream
            "name": "abi_encode_t_stringliteral_795e888268ddf9337f106a3868637d7c62055ce14f5dda1abe76d3564d875fc2_to_t_string_memory_ptr_fromStack",
=======
            "name": "abi_encode_t_stringliteral_c3acfb094a156b84661b3c3c57a84f0a875490c81d212e3c337f85800112c49c_to_t_string_memory_ptr_fromStack",
>>>>>>> Stashed changes
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
<<<<<<< Updated upstream
                "src": "19320:3:20",
=======
                "src": "20590:3:16",
>>>>>>> Stashed changes
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
<<<<<<< Updated upstream
                "src": "19328:3:20",
                "type": ""
              }
            ],
            "src": "19186:366:20"
=======
                "src": "20598:3:16",
                "type": ""
              }
            ],
            "src": "20456:366:16"
>>>>>>> Stashed changes
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< Updated upstream
              "src": "19729:248:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "19739:26:20",
=======
              "src": "20999:248:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "21009:26:16",
>>>>>>> Stashed changes
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                        "src": "19751:9:20"
=======
                        "src": "21021:9:16"
>>>>>>> Stashed changes
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< Updated upstream
                        "src": "19762:2:20",
=======
                        "src": "21032:2:16",
>>>>>>> Stashed changes
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "19747:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19747:18:20"
=======
                      "src": "21017:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21017:18:16"
>>>>>>> Stashed changes
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "19739:4:20"
=======
                      "src": "21009:4:16"
>>>>>>> Stashed changes
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                            "src": "19786:9:20"
=======
                            "src": "21056:9:16"
>>>>>>> Stashed changes
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< Updated upstream
                            "src": "19797:1:20",
=======
                            "src": "21067:1:16",
>>>>>>> Stashed changes
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                          "src": "19782:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19782:17:20"
=======
                          "src": "21052:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21052:17:16"
>>>>>>> Stashed changes
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                            "src": "19805:4:20"
=======
                            "src": "21075:4:16"
>>>>>>> Stashed changes
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                            "src": "19811:9:20"
=======
                            "src": "21081:9:16"
>>>>>>> Stashed changes
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                          "src": "19801:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19801:20:20"
=======
                          "src": "21071:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21071:20:16"
>>>>>>> Stashed changes
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "19775:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19775:47:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19775:47:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19831:139:20",
=======
                      "src": "21045:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21045:47:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21045:47:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21101:139:16",
>>>>>>> Stashed changes
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                        "src": "19965:4:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_795e888268ddf9337f106a3868637d7c62055ce14f5dda1abe76d3564d875fc2_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "19839:124:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19839:131:20"
=======
                        "src": "21235:4:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_c3acfb094a156b84661b3c3c57a84f0a875490c81d212e3c337f85800112c49c_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "21109:124:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21109:131:16"
>>>>>>> Stashed changes
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "19831:4:20"
=======
                      "src": "21101:4:16"
>>>>>>> Stashed changes
                    }
                  ]
                }
              ]
            },
<<<<<<< Updated upstream
            "name": "abi_encode_tuple_t_stringliteral_795e888268ddf9337f106a3868637d7c62055ce14f5dda1abe76d3564d875fc2__to_t_string_memory_ptr__fromStack_reversed",
=======
            "name": "abi_encode_tuple_t_stringliteral_c3acfb094a156b84661b3c3c57a84f0a875490c81d212e3c337f85800112c49c__to_t_string_memory_ptr__fromStack_reversed",
>>>>>>> Stashed changes
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
<<<<<<< Updated upstream
                "src": "19709:9:20",
=======
                "src": "20979:9:16",
>>>>>>> Stashed changes
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
<<<<<<< Updated upstream
                "src": "19724:4:20",
                "type": ""
              }
            ],
            "src": "19558:419:20"
=======
                "src": "20994:4:16",
                "type": ""
              }
            ],
            "src": "20828:419:16"
>>>>>>> Stashed changes
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< Updated upstream
              "src": "20109:206:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "20119:26:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20131:9:20"
=======
              "src": "21399:218:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "21409:73:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "21475:3:16"
>>>>>>> Stashed changes
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< Updated upstream
                        "src": "20142:2:20",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "20127:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20127:18:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "20119:4:20"
=======
                        "src": "21480:1:16",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "21416:58:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21416:66:16"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "21409:3:16"
>>>>>>> Stashed changes
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                        "src": "20199:6:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20212:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20223:1:20",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20208:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20208:17:20"
=======
                        "src": "21580:3:16"
>>>>>>> Stashed changes
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "20155:43:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20155:71:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20155:71:20"
                },
                {
                  "expression": {
=======
                      "src": "21491:88:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21491:93:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21491:93:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21593:18:16",
                  "value": {
>>>>>>> Stashed changes
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                        "src": "20280:6:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20293:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20304:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20289:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20289:18:20"
=======
                        "src": "21604:3:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21609:1:16",
                        "type": "",
                        "value": "0"
>>>>>>> Stashed changes
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "20236:43:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20236:72:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20236:72:20"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
=======
                      "src": "21600:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21600:11:16"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "21593:3:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_string_memory_ptr_fromStack",
>>>>>>> Stashed changes
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
<<<<<<< Updated upstream
                "src": "20073:9:20",
=======
                "src": "21387:3:16",
>>>>>>> Stashed changes
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
<<<<<<< Updated upstream
                "src": "20085:6:20",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "20093:6:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "20104:4:20",
                "type": ""
              }
            ],
            "src": "19983:332:20"
=======
                "src": "21395:3:16",
                "type": ""
              }
            ],
            "src": "21253:364:16"
>>>>>>> Stashed changes
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< Updated upstream
              "src": "20427:73:20",
              "statements": [
                {
=======
              "src": "21794:248:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "21804:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21816:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21827:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "21812:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21812:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "21804:4:16"
                    }
                  ]
                },
                {
>>>>>>> Stashed changes
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                            "src": "20449:6:20"
=======
                            "src": "21851:9:16"
>>>>>>> Stashed changes
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< Updated upstream
                            "src": "20457:1:20",
=======
                            "src": "21862:1:16",
>>>>>>> Stashed changes
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                          "src": "20445:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20445:14:20"
                      },
                      {
                        "hexValue": "43594f4e20746f6b656e20616c6c6f77616e636520746f6f206c6f772e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "20461:31:20",
                        "type": "",
                        "value": "CYON token allowance too low."
=======
                          "src": "21847:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21847:17:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "21870:4:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21876:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "21866:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21866:20:16"
>>>>>>> Stashed changes
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "20438:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20438:55:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20438:55:20"
                }
              ]
            },
            "name": "store_literal_in_memory_ad8e9a422fe1279413cfad79198ac5655e066c8f7548850b9f2131c6ae0aa8bd",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "20419:6:20",
                "type": ""
              }
            ],
            "src": "20321:179:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20652:220:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "20662:74:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "20728:3:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20733:2:20",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "20669:58:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20669:67:20"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "20662:3:20"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "20834:3:20"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_ad8e9a422fe1279413cfad79198ac5655e066c8f7548850b9f2131c6ae0aa8bd",
                      "nodeType": "YulIdentifier",
                      "src": "20745:88:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20745:93:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20745:93:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20847:19:20",
=======
                      "src": "21840:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21840:47:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21840:47:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21896:139:16",
>>>>>>> Stashed changes
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                        "src": "20858:3:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20863:2:20",
                        "type": "",
                        "value": "32"
=======
                        "src": "22030:4:16"
>>>>>>> Stashed changes
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "20854:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20854:12:20"
=======
                      "src": "21904:124:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21904:131:16"
>>>>>>> Stashed changes
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "20847:3:20"
=======
                      "src": "21896:4:16"
>>>>>>> Stashed changes
                    }
                  ]
                }
              ]
            },
<<<<<<< Updated upstream
            "name": "abi_encode_t_stringliteral_ad8e9a422fe1279413cfad79198ac5655e066c8f7548850b9f2131c6ae0aa8bd_to_t_string_memory_ptr_fromStack",
=======
            "name": "abi_encode_tuple_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_string_memory_ptr__fromStack_reversed",
>>>>>>> Stashed changes
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
<<<<<<< Updated upstream
                "src": "20640:3:20",
=======
                "src": "21774:9:16",
>>>>>>> Stashed changes
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
<<<<<<< Updated upstream
                "src": "20648:3:20",
                "type": ""
              }
            ],
            "src": "20506:366:20"
=======
                "src": "21789:4:16",
                "type": ""
              }
            ],
            "src": "21623:419:16"
>>>>>>> Stashed changes
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< Updated upstream
              "src": "21049:248:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "21059:26:20",
=======
              "src": "22202:288:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "22212:26:16",
>>>>>>> Stashed changes
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                        "src": "21071:9:20"
=======
                        "src": "22224:9:16"
>>>>>>> Stashed changes
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< Updated upstream
                        "src": "21082:2:20",
=======
                        "src": "22235:2:16",
>>>>>>> Stashed changes
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "21067:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21067:18:20"
=======
                      "src": "22220:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22220:18:16"
>>>>>>> Stashed changes
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "21059:4:20"
=======
                      "src": "22212:4:16"
>>>>>>> Stashed changes
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "22292:6:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                            "src": "21106:9:20"
=======
                            "src": "22305:9:16"
>>>>>>> Stashed changes
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< Updated upstream
                            "src": "21117:1:20",
=======
                            "src": "22316:1:16",
>>>>>>> Stashed changes
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                          "src": "21102:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21102:17:20"
=======
                          "src": "22301:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22301:17:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "22248:43:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22248:71:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22248:71:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "22373:6:16"
>>>>>>> Stashed changes
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                            "src": "21125:4:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21131:9:20"
=======
                            "src": "22386:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22397:2:16",
                            "type": "",
                            "value": "32"
>>>>>>> Stashed changes
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                          "src": "21121:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21121:20:20"
=======
                          "src": "22382:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22382:18:16"
>>>>>>> Stashed changes
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "21095:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21095:47:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21095:47:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21151:139:20",
                  "value": {
=======
                      "src": "22329:43:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22329:72:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22329:72:16"
                },
                {
                  "expression": {
>>>>>>> Stashed changes
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                        "src": "21285:4:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_ad8e9a422fe1279413cfad79198ac5655e066c8f7548850b9f2131c6ae0aa8bd_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "21159:124:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21159:131:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "21151:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ad8e9a422fe1279413cfad79198ac5655e066c8f7548850b9f2131c6ae0aa8bd__to_t_string_memory_ptr__fromStack_reversed",
=======
                        "src": "22455:6:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22468:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22479:2:16",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22464:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22464:18:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "22411:43:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22411:72:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22411:72:16"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
>>>>>>> Stashed changes
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
<<<<<<< Updated upstream
                "src": "21029:9:20",
=======
                "src": "22158:9:16",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "22170:6:16",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "22178:6:16",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "22186:6:16",
>>>>>>> Stashed changes
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
<<<<<<< Updated upstream
                "src": "21044:4:20",
                "type": ""
              }
            ],
            "src": "20878:419:20"
=======
                "src": "22197:4:16",
                "type": ""
              }
            ],
            "src": "22048:442:16"
>>>>>>> Stashed changes
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< Updated upstream
              "src": "21429:206:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "21439:26:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21451:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21462:2:20",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "21447:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21447:18:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "21439:4:20"
                    }
                  ]
                },
                {
                  "expression": {
=======
              "src": "22549:32:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "22559:16:16",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "22570:5:16"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "22559:7:16"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_rational_0_by_1",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "22531:5:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "22541:7:16",
                "type": ""
              }
            ],
            "src": "22496:85:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22655:90:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "22665:74:16",
                  "value": {
>>>>>>> Stashed changes
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "21519:6:20"
                      },
                      {
                        "arguments": [
                          {
<<<<<<< Updated upstream
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21532:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21543:1:20",
                            "type": "",
                            "value": "0"
=======
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "22731:5:16"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_rational_0_by_1",
                              "nodeType": "YulIdentifier",
                              "src": "22705:25:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "22705:32:16"
>>>>>>> Stashed changes
                          }
                        ],
                        "functionName": {
                          "name": "identity",
                          "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                          "src": "21528:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21528:17:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "21475:43:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21475:71:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21475:71:20"
                },
=======
                          "src": "22696:8:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22696:42:16"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "22678:17:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22678:61:16"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "22665:9:16"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_rational_0_by_1_to_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "22635:5:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "22645:9:16",
                "type": ""
              }
            ],
            "src": "22587:158:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22824:74:16",
              "statements": [
>>>>>>> Stashed changes
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< Updated upstream
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "21600:6:20"
=======
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "22841:3:16"
>>>>>>> Stashed changes
                      },
                      {
                        "arguments": [
                          {
<<<<<<< Updated upstream
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21613:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21624:2:20",
                            "type": "",
                            "value": "32"
=======
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "22885:5:16"
>>>>>>> Stashed changes
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_rational_0_by_1_to_t_uint256",
                          "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                          "src": "21609:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21609:18:20"
=======
                          "src": "22846:38:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22846:45:16"
>>>>>>> Stashed changes
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "21556:43:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21556:72:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21556:72:20"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "21393:9:20",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "21405:6:20",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "21413:6:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "21424:4:20",
                "type": ""
              }
            ],
            "src": "21303:332:20"
=======
                      "src": "22834:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22834:58:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22834:58:16"
                }
              ]
            },
            "name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "22812:5:16",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "22819:3:16",
                "type": ""
              }
            ],
            "src": "22751:147:16"
>>>>>>> Stashed changes
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< Updated upstream
              "src": "21681:76:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "21735:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "21744:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "21747:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "21737:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "21737:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "21737:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "21704:5:20"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "21726:5:20"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "21711:14:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21711:21:20"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "21701:2:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21701:32:20"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "21694:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21694:40:20"
                  },
                  "nodeType": "YulIf",
                  "src": "21691:60:20"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "21674:5:20",
                "type": ""
              }
            ],
            "src": "21641:116:20"
=======
              "src": "23038:214:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "23048:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "23060:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23071:2:16",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "23056:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23056:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "23048:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "23128:6:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23141:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23152:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23137:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23137:17:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "23084:43:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23084:71:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23084:71:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "23217:6:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23230:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23241:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23226:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23226:18:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "23165:51:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23165:80:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23165:80:16"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_rational_0_by_1__to_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "23002:9:16",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "23014:6:16",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "23022:6:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "23033:4:16",
                "type": ""
              }
            ],
            "src": "22904:348:16"
>>>>>>> Stashed changes
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< Updated upstream
              "src": "21823:77:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "21833:22:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "21848:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "21842:5:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21842:13:20"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "21833:5:20"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "21888:5:20"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "21864:23:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21864:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21864:30:20"
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "21801:6:20",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "21809:3:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "21817:5:20",
                "type": ""
              }
            ],
            "src": "21763:137:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21980:271:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "22026:83:20",
=======
              "src": "23353:326:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "23363:75:16",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "23430:6:16"
                          }
                        ],
                        "functionName": {
                          "name": "array_allocation_size_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "23388:41:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23388:49:16"
                      }
                    ],
                    "functionName": {
                      "name": "allocate_memory",
                      "nodeType": "YulIdentifier",
                      "src": "23372:15:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23372:66:16"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "23363:5:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "23454:5:16"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "23461:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23447:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23447:21:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23447:21:16"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "23477:27:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "23492:5:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23499:4:16",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "23488:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23488:16:16"
                  },
                  "variables": [
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "23481:3:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "23542:83:16",
>>>>>>> Stashed changes
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
<<<<<<< Updated upstream
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "22028:77:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "22028:79:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "22028:79:20"
=======
                            "name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
                            "nodeType": "YulIdentifier",
                            "src": "23544:77:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "23544:79:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "23544:79:16"
>>>>>>> Stashed changes
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
<<<<<<< Updated upstream
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "22001:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22010:9:20"
=======
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "23523:3:16"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "23528:6:16"
>>>>>>> Stashed changes
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                          "src": "21997:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21997:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22022:2:20",
                        "type": "",
                        "value": "32"
=======
                          "src": "23519:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23519:16:16"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "23537:3:16"
>>>>>>> Stashed changes
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "21993:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21993:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "21990:119:20"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "22119:125:20",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "22134:15:20",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22148:1:20",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "22138:6:20",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "22163:71:20",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "22206:9:20"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "22217:6:20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "22202:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "22202:22:20"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "22226:7:20"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "22173:28:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22173:61:20"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "22163:6:20"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "21950:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "21961:7:20",
=======
                      "src": "23516:2:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23516:25:16"
                  },
                  "nodeType": "YulIf",
                  "src": "23513:112:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "23656:3:16"
                      },
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "23661:3:16"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "23666:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "23634:21:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23634:39:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23634:39:16"
                }
              ]
            },
            "name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "23326:3:16",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "23331:6:16",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "23339:3:16",
>>>>>>> Stashed changes
                "type": ""
              }
            ],
            "returnVariables": [
              {
<<<<<<< Updated upstream
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "21973:6:20",
                "type": ""
              }
            ],
            "src": "21906:345:20"
=======
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "23347:5:16",
                "type": ""
              }
            ],
            "src": "23258:421:16"
>>>>>>> Stashed changes
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< Updated upstream
              "src": "22363:118:20",
=======
              "src": "23772:282:16",
>>>>>>> Stashed changes
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "23821:83:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
                            "nodeType": "YulIdentifier",
                            "src": "23823:77:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "23823:79:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "23823:79:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
<<<<<<< Updated upstream
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "22385:6:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22393:1:20",
                            "type": "",
                            "value": "0"
=======
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "23800:6:16"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "23808:4:16",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "23796:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "23796:17:16"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "23815:3:16"
>>>>>>> Stashed changes
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                          "src": "22381:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22381:14:20"
                      },
                      {
                        "hexValue": "4661696c656420746f2073656e642043594f4e20746f20746865204e4654206f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "22397:34:20",
                        "type": "",
                        "value": "Failed to send CYON to the NFT o"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22374:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22374:58:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22374:58:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "22453:6:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22461:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22449:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22449:15:20"
                      },
                      {
                        "hexValue": "776e65722e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "22466:7:20",
                        "type": "",
                        "value": "wner."
=======
                          "src": "23792:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23792:27:16"
>>>>>>> Stashed changes
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "22442:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22442:32:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22442:32:20"
                }
              ]
            },
            "name": "store_literal_in_memory_604f2a465e5da2d3944668dd2853b95589c33b45bfa6f32de952c6982edd2c10",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "22355:6:20",
                "type": ""
              }
            ],
            "src": "22257:224:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22633:220:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "22643:74:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "22709:3:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22714:2:20",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "22650:58:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22650:67:20"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "22643:3:20"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "22815:3:20"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_604f2a465e5da2d3944668dd2853b95589c33b45bfa6f32de952c6982edd2c10",
                      "nodeType": "YulIdentifier",
                      "src": "22726:88:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22726:93:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22726:93:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "22828:19:20",
=======
                      "src": "23785:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23785:35:16"
                  },
                  "nodeType": "YulIf",
                  "src": "23782:122:16"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "23913:27:16",
>>>>>>> Stashed changes
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                        "src": "22839:3:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22844:2:20",
                        "type": "",
                        "value": "64"
=======
                        "src": "23933:6:16"
>>>>>>> Stashed changes
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "22835:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22835:12:20"
=======
                      "src": "23927:5:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23927:13:16"
>>>>>>> Stashed changes
                  },
                  "variables": [
                    {
<<<<<<< Updated upstream
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "22828:3:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_604f2a465e5da2d3944668dd2853b95589c33b45bfa6f32de952c6982edd2c10_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "22621:3:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "22629:3:20",
                "type": ""
              }
            ],
            "src": "22487:366:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "23030:248:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "23040:26:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "23052:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23063:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "23048:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23048:18:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "23040:4:20"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
=======
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "23917:6:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "23949:99:16",
                  "value": {
                    "arguments": [
                      {
>>>>>>> Stashed changes
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                            "src": "23087:9:20"
=======
                            "src": "24021:6:16"
>>>>>>> Stashed changes
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< Updated upstream
                            "src": "23098:1:20",
=======
                            "src": "24029:4:16",
>>>>>>> Stashed changes
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                          "src": "23083:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23083:17:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "23106:4:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23112:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "23102:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23102:20:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23076:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23076:47:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23076:47:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "23132:139:20",
                  "value": {
                    "arguments": [
=======
                          "src": "24017:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24017:17:16"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "24036:6:16"
                      },
>>>>>>> Stashed changes
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                        "src": "23266:4:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_604f2a465e5da2d3944668dd2853b95589c33b45bfa6f32de952c6982edd2c10_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "23140:124:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23140:131:20"
=======
                        "src": "24044:3:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "23958:58:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23958:90:16"
>>>>>>> Stashed changes
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "23132:4:20"
=======
                      "src": "23949:5:16"
>>>>>>> Stashed changes
                    }
                  ]
                }
              ]
            },
<<<<<<< Updated upstream
            "name": "abi_encode_tuple_t_stringliteral_604f2a465e5da2d3944668dd2853b95589c33b45bfa6f32de952c6982edd2c10__to_t_string_memory_ptr__fromStack_reversed",
=======
            "name": "abi_decode_t_string_memory_ptr_fromMemory",
>>>>>>> Stashed changes
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "23750:6:16",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
<<<<<<< Updated upstream
                "src": "23010:9:20",
=======
                "src": "23758:3:16",
>>>>>>> Stashed changes
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
<<<<<<< Updated upstream
                "src": "23025:4:20",
                "type": ""
              }
            ],
            "src": "22859:419:20"
=======
                "src": "23766:5:16",
                "type": ""
              }
            ],
            "src": "23699:355:16"
>>>>>>> Stashed changes
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< Updated upstream
              "src": "23390:8:20",
              "statements": []
            },
            "name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "23382:6:20",
                "type": ""
              }
            ],
            "src": "23284:114:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "23550:218:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "23560:73:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "23626:3:20"
=======
              "src": "24147:437:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "24193:83:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "24195:77:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "24195:79:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "24195:79:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "24168:7:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24177:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "24164:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24164:23:16"
>>>>>>> Stashed changes
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< Updated upstream
                        "src": "23631:1:20",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "23567:58:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23567:66:20"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "23560:3:20"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "23731:3:20"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                      "nodeType": "YulIdentifier",
                      "src": "23642:88:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23642:93:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23642:93:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "23744:18:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "23755:3:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23760:1:20",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "23751:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23751:11:20"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "23744:3:20"
=======
                        "src": "24189:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "24160:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24160:32:16"
                  },
                  "nodeType": "YulIf",
                  "src": "24157:119:16"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "24286:291:16",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "24301:38:16",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "24325:9:16"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "24336:1:16",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "24321:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "24321:17:16"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "24315:5:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24315:24:16"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "24305:6:16",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "24386:83:16",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                                "nodeType": "YulIdentifier",
                                "src": "24388:77:16"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "24388:79:16"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "24388:79:16"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "24358:6:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24366:18:16",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "24355:2:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24355:30:16"
                      },
                      "nodeType": "YulIf",
                      "src": "24352:117:16"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "24483:84:16",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "24539:9:16"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "24550:6:16"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "24535:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "24535:22:16"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "24559:7:16"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_memory_ptr_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "24493:41:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24493:74:16"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "24483:6:16"
                        }
                      ]
>>>>>>> Stashed changes
                    }
                  ]
                }
              ]
            },
<<<<<<< Updated upstream
            "name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_string_memory_ptr_fromStack",
=======
            "name": "abi_decode_tuple_t_string_memory_ptr_fromMemory",
>>>>>>> Stashed changes
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "24117:9:16",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
<<<<<<< Updated upstream
                "src": "23538:3:20",
=======
                "src": "24128:7:16",
>>>>>>> Stashed changes
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
<<<<<<< Updated upstream
                "src": "23546:3:20",
                "type": ""
              }
            ],
            "src": "23404:364:20"
=======
                "src": "24140:6:16",
                "type": ""
              }
            ],
            "src": "24060:524:16"
>>>>>>> Stashed changes
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< Updated upstream
              "src": "23945:248:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "23955:26:20",
=======
              "src": "24848:608:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "24858:27:16",
>>>>>>> Stashed changes
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                        "src": "23967:9:20"
=======
                        "src": "24870:9:16"
>>>>>>> Stashed changes
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< Updated upstream
                        "src": "23978:2:20",
=======
                        "src": "24881:3:16",
>>>>>>> Stashed changes
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "23963:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23963:18:20"
=======
                      "src": "24866:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24866:19:16"
>>>>>>> Stashed changes
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "23955:4:20"
=======
                      "src": "24858:4:16"
>>>>>>> Stashed changes
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                            "src": "24002:9:20"
=======
                            "src": "24906:9:16"
>>>>>>> Stashed changes
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< Updated upstream
                            "src": "24013:1:20",
=======
                            "src": "24917:1:16",
>>>>>>> Stashed changes
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                          "src": "23998:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23998:17:20"
=======
                          "src": "24902:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24902:17:16"
>>>>>>> Stashed changes
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                            "src": "24021:4:20"
=======
                            "src": "24925:4:16"
>>>>>>> Stashed changes
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                            "src": "24027:9:20"
=======
                            "src": "24931:9:16"
>>>>>>> Stashed changes
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                          "src": "24017:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24017:20:20"
=======
                          "src": "24921:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24921:20:16"
>>>>>>> Stashed changes
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "23991:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23991:47:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23991:47:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "24047:139:20",
=======
                      "src": "24895:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24895:47:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24895:47:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "24951:86:16",
>>>>>>> Stashed changes
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "25023:6:16"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                        "src": "24181:4:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "24055:124:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24055:131:20"
=======
                        "src": "25032:4:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "24959:63:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24959:78:16"
>>>>>>> Stashed changes
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "24047:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "23925:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "23940:4:20",
                "type": ""
              }
            ],
            "src": "23774:419:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "24353:288:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "24363:26:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "24375:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24386:2:20",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "24371:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24371:18:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "24363:4:20"
                    }
                  ]
=======
                      "src": "24951:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "25091:6:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "25104:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25115:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25100:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25100:18:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "25047:43:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25047:72:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25047:72:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "25173:6:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "25186:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25197:2:16",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25182:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25182:18:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "25129:43:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25129:72:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25129:72:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "25255:6:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "25268:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25279:2:16",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25264:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25264:18:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "25211:43:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25211:72:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25211:72:16"
>>>>>>> Stashed changes
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                        "src": "24443:6:20"
=======
                        "src": "25337:6:16"
>>>>>>> Stashed changes
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                            "src": "24456:9:20"
=======
                            "src": "25350:9:16"
>>>>>>> Stashed changes
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< Updated upstream
                            "src": "24467:1:20",
=======
                            "src": "25361:3:16",
>>>>>>> Stashed changes
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                          "src": "24452:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24452:17:20"
=======
                          "src": "25346:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25346:19:16"
>>>>>>> Stashed changes
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "24399:43:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24399:71:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24399:71:20"
=======
                      "src": "25293:43:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25293:73:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25293:73:16"
>>>>>>> Stashed changes
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value5",
                        "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                        "src": "24524:6:20"
=======
                        "src": "25420:6:16"
>>>>>>> Stashed changes
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                            "src": "24537:9:20"
=======
                            "src": "25433:9:16"
>>>>>>> Stashed changes
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< Updated upstream
                            "src": "24548:2:20",
=======
                            "src": "25444:3:16",
>>>>>>> Stashed changes
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                          "src": "24533:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24533:18:20"
=======
                          "src": "25429:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25429:19:16"
>>>>>>> Stashed changes
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "24480:43:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24480:72:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24480:72:20"
                },
=======
                      "src": "25376:43:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25376:73:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25376:73:16"
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr_t_address_t_uint256_t_address_t_address_t_uint256__to_t_string_memory_ptr_t_address_t_uint256_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "24780:9:16",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "24792:6:16",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "24800:6:16",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "24808:6:16",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "24816:6:16",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "24824:6:16",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "24832:6:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "24843:4:16",
                "type": ""
              }
            ],
            "src": "24590:866:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "25568:143:16",
              "statements": [
>>>>>>> Stashed changes
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "24606:6:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                            "src": "24619:9:20"
=======
                            "src": "25590:6:16"
>>>>>>> Stashed changes
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< Updated upstream
                            "src": "24630:2:20",
=======
                            "src": "25598:1:16",
>>>>>>> Stashed changes
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                          "src": "24615:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24615:18:20"
=======
                          "src": "25586:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25586:14:16"
                      },
                      {
                        "hexValue": "5468657265206973206e6f7468696e6720746f20726566756e6420746f207468",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "25602:34:16",
                        "type": "",
                        "value": "There is nothing to refund to th"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25579:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25579:58:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25579:58:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "25658:6:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25666:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25654:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25654:15:16"
                      },
                      {
                        "hexValue": "65206d6573736167652073656e64657220666f722074686973204e46542e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "25671:32:16",
                        "type": "",
                        "value": "e message sender for this NFT."
>>>>>>> Stashed changes
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "24562:43:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24562:72:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24562:72:20"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "24309:9:20",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "24321:6:20",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "24329:6:20",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "24337:6:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "24348:4:20",
                "type": ""
              }
            ],
            "src": "24199:442:20"
=======
                      "src": "25647:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25647:57:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25647:57:16"
                }
              ]
            },
            "name": "store_literal_in_memory_94d8d73aa0c1acd69400f57ad2aabae77b042082027641a43c5fb8bb82a45167",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "25560:6:16",
                "type": ""
              }
            ],
            "src": "25462:249:16"
>>>>>>> Stashed changes
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< Updated upstream
              "src": "24781:214:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "24791:26:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "24803:9:20"
=======
              "src": "25863:220:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "25873:74:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "25939:3:16"
>>>>>>> Stashed changes
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< Updated upstream
                        "src": "24814:2:20",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "24799:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24799:18:20"
=======
                        "src": "25944:2:16",
                        "type": "",
                        "value": "62"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "25880:58:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25880:67:16"
>>>>>>> Stashed changes
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "24791:4:20"
=======
                      "src": "25873:3:16"
>>>>>>> Stashed changes
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< Updated upstream
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "24871:6:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24884:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24895:1:20",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24880:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24880:17:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "24827:43:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24827:71:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24827:71:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "24960:6:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24973:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24984:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24969:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24969:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "24908:51:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24908:80:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24908:80:20"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_rational_0_by_1__to_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "24745:9:20",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "24757:6:20",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "24765:6:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "24776:4:20",
                "type": ""
              }
            ],
            "src": "24647:348:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "25259:608:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "25269:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "25281:9:20"
=======
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "26045:3:16"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_94d8d73aa0c1acd69400f57ad2aabae77b042082027641a43c5fb8bb82a45167",
                      "nodeType": "YulIdentifier",
                      "src": "25956:88:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25956:93:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25956:93:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "26058:19:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "26069:3:16"
>>>>>>> Stashed changes
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< Updated upstream
                        "src": "25292:3:20",
                        "type": "",
                        "value": "192"
=======
                        "src": "26074:2:16",
                        "type": "",
                        "value": "64"
>>>>>>> Stashed changes
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "25277:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25277:19:20"
=======
                      "src": "26065:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26065:12:16"
>>>>>>> Stashed changes
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "25269:4:20"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "25317:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25328:1:20",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25313:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25313:17:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "25336:4:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "25342:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "25332:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25332:20:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25306:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25306:47:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25306:47:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "25362:86:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "25434:6:20"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "25443:4:20"
=======
                      "src": "26058:3:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_94d8d73aa0c1acd69400f57ad2aabae77b042082027641a43c5fb8bb82a45167_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "25851:3:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "25859:3:16",
                "type": ""
              }
            ],
            "src": "25717:366:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "26260:248:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "26270:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "26282:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "26293:2:16",
                        "type": "",
                        "value": "32"
>>>>>>> Stashed changes
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "25370:63:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25370:78:20"
=======
                      "src": "26278:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26278:18:16"
>>>>>>> Stashed changes
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "25362:4:20"
=======
                      "src": "26270:4:16"
>>>>>>> Stashed changes
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "25502:6:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                            "src": "25515:9:20"
=======
                            "src": "26317:9:16"
>>>>>>> Stashed changes
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< Updated upstream
                            "src": "25526:2:20",
                            "type": "",
                            "value": "32"
=======
                            "src": "26328:1:16",
                            "type": "",
                            "value": "0"
>>>>>>> Stashed changes
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                          "src": "25511:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25511:18:20"
=======
                          "src": "26313:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26313:17:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "26336:4:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "26342:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "26332:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26332:20:16"
>>>>>>> Stashed changes
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                      "src": "25458:43:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25458:72:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25458:72:20"
                },
=======
                      "src": "26306:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26306:47:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26306:47:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "26362:139:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "26496:4:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_94d8d73aa0c1acd69400f57ad2aabae77b042082027641a43c5fb8bb82a45167_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "26370:124:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26370:131:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "26362:4:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_94d8d73aa0c1acd69400f57ad2aabae77b042082027641a43c5fb8bb82a45167__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "26240:9:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "26255:4:16",
                "type": ""
              }
            ],
            "src": "26089:419:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "26620:117:16",
              "statements": [
>>>>>>> Stashed changes
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< Updated upstream
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "25584:6:20"
                      },
                      {
=======
>>>>>>> Stashed changes
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                            "src": "25597:9:20"
=======
                            "src": "26642:6:16"
>>>>>>> Stashed changes
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< Updated upstream
                            "src": "25608:2:20",
                            "type": "",
                            "value": "64"
=======
                            "src": "26650:1:16",
                            "type": "",
                            "value": "0"
>>>>>>> Stashed changes
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                          "src": "25593:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25593:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "25540:43:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25540:72:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25540:72:20"
=======
                          "src": "26638:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26638:14:16"
                      },
                      {
                        "hexValue": "4661696c656420746f2073656e642045544820746f2074686520726571756573",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "26654:34:16",
                        "type": "",
                        "value": "Failed to send ETH to the reques"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26631:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26631:58:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26631:58:16"
>>>>>>> Stashed changes
                },
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< Updated upstream
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "25666:6:20"
                      },
                      {
=======
>>>>>>> Stashed changes
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                            "src": "25679:9:20"
=======
                            "src": "26710:6:16"
>>>>>>> Stashed changes
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< Updated upstream
                            "src": "25690:2:20",
                            "type": "",
                            "value": "96"
=======
                            "src": "26718:2:16",
                            "type": "",
                            "value": "32"
>>>>>>> Stashed changes
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                          "src": "25675:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25675:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "25622:43:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25622:72:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25622:72:20"
                },
=======
                          "src": "26706:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26706:15:16"
                      },
                      {
                        "hexValue": "7465722e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "26723:6:16",
                        "type": "",
                        "value": "ter."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26699:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26699:31:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26699:31:16"
                }
              ]
            },
            "name": "store_literal_in_memory_845c21fd6e7fee0a800c229bb8fd48445693aff5ca0ae521158b96ea1ce8bafc",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "26612:6:16",
                "type": ""
              }
            ],
            "src": "26514:223:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "26889:220:16",
              "statements": [
>>>>>>> Stashed changes
                {
                  "nodeType": "YulAssignment",
                  "src": "26899:74:16",
                  "value": {
                    "arguments": [
                      {
<<<<<<< Updated upstream
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "25748:6:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "25761:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25772:3:20",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25757:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25757:19:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "25704:43:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25704:73:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25704:73:20"
=======
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "26965:3:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "26970:2:16",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "26906:58:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26906:67:16"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "26899:3:16"
                    }
                  ]
>>>>>>> Stashed changes
                },
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< Updated upstream
                        "name": "value5",
                        "nodeType": "YulIdentifier",
                        "src": "25831:6:20"
                      },
                      {
=======
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "27071:3:16"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_845c21fd6e7fee0a800c229bb8fd48445693aff5ca0ae521158b96ea1ce8bafc",
                      "nodeType": "YulIdentifier",
                      "src": "26982:88:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26982:93:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26982:93:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "27084:19:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "27095:3:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "27100:2:16",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "27091:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27091:12:16"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "27084:3:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_845c21fd6e7fee0a800c229bb8fd48445693aff5ca0ae521158b96ea1ce8bafc_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "26877:3:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "26885:3:16",
                "type": ""
              }
            ],
            "src": "26743:366:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "27286:248:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "27296:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "27308:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "27319:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "27304:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27304:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "27296:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
>>>>>>> Stashed changes
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                            "src": "25844:9:20"
=======
                            "src": "27343:9:16"
>>>>>>> Stashed changes
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< Updated upstream
                            "src": "25855:3:20",
                            "type": "",
                            "value": "160"
=======
                            "src": "27354:1:16",
                            "type": "",
                            "value": "0"
>>>>>>> Stashed changes
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
<<<<<<< Updated upstream
                          "src": "25840:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25840:19:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "25787:43:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25787:73:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25787:73:20"
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr_t_address_t_uint256_t_address_t_address_t_uint256__to_t_string_memory_ptr_t_address_t_uint256_t_address_t_address_t_uint256__fromStack_reversed",
=======
                          "src": "27339:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27339:17:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "27362:4:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "27368:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "27358:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27358:20:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "27332:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27332:47:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27332:47:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "27388:139:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "27522:4:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_845c21fd6e7fee0a800c229bb8fd48445693aff5ca0ae521158b96ea1ce8bafc_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "27396:124:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27396:131:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "27388:4:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_845c21fd6e7fee0a800c229bb8fd48445693aff5ca0ae521158b96ea1ce8bafc__to_t_string_memory_ptr__fromStack_reversed",
>>>>>>> Stashed changes
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
<<<<<<< Updated upstream
                "src": "25191:9:20",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "25203:6:20",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "25211:6:20",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "25219:6:20",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "25227:6:20",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "25235:6:20",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "25243:6:20",
=======
                "src": "27266:9:16",
>>>>>>> Stashed changes
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
<<<<<<< Updated upstream
                "src": "25254:4:20",
                "type": ""
              }
            ],
            "src": "25001:866:20"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$4032_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$4032_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$4032_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$4032__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$4032_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 160))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value5 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_75d51b7f4f784217631f4d90c02e688b32ba4b4faadf2799078ab0609aeff458(memPtr) {\n\n        mstore(add(memPtr, 0), \"The collection address needs to \")\n\n        mstore(add(memPtr, 32), \"be different from zero.\")\n\n    }\n\n    function abi_encode_t_stringliteral_75d51b7f4f784217631f4d90c02e688b32ba4b4faadf2799078ab0609aeff458_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 55)\n        store_literal_in_memory_75d51b7f4f784217631f4d90c02e688b32ba4b4faadf2799078ab0609aeff458(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_75d51b7f4f784217631f4d90c02e688b32ba4b4faadf2799078ab0609aeff458__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_75d51b7f4f784217631f4d90c02e688b32ba4b4faadf2799078ab0609aeff458_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_3560abc763ffb7960cf5b3b423463cddda9049a7ba8f6add1f51e3df44d662ec(memPtr) {\n\n        mstore(add(memPtr, 0), \"This token ID does not exist.\")\n\n    }\n\n    function abi_encode_t_stringliteral_3560abc763ffb7960cf5b3b423463cddda9049a7ba8f6add1f51e3df44d662ec_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3560abc763ffb7960cf5b3b423463cddda9049a7ba8f6add1f51e3df44d662ec(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3560abc763ffb7960cf5b3b423463cddda9049a7ba8f6add1f51e3df44d662ec__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3560abc763ffb7960cf5b3b423463cddda9049a7ba8f6add1f51e3df44d662ec_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_bd03a8d87c70fb34480c591cf12a6a899128bca11952a84818f1acd30d41f66a(memPtr) {\n\n        mstore(add(memPtr, 0), \"This NFT does not belong to the \")\n\n        mstore(add(memPtr, 32), \"current message sender.\")\n\n    }\n\n    function abi_encode_t_stringliteral_bd03a8d87c70fb34480c591cf12a6a899128bca11952a84818f1acd30d41f66a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 55)\n        store_literal_in_memory_bd03a8d87c70fb34480c591cf12a6a899128bca11952a84818f1acd30d41f66a(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_bd03a8d87c70fb34480c591cf12a6a899128bca11952a84818f1acd30d41f66a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bd03a8d87c70fb34480c591cf12a6a899128bca11952a84818f1acd30d41f66a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b9ebebcb369b061f0ded2abc03dd5c1efcd60e09dffde1f0eed07a42693c8f81(memPtr) {\n\n        mstore(add(memPtr, 0), \"Please define a selling price hi\")\n\n        mstore(add(memPtr, 32), \"gher than zero.\")\n\n    }\n\n    function abi_encode_t_stringliteral_b9ebebcb369b061f0ded2abc03dd5c1efcd60e09dffde1f0eed07a42693c8f81_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_b9ebebcb369b061f0ded2abc03dd5c1efcd60e09dffde1f0eed07a42693c8f81(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b9ebebcb369b061f0ded2abc03dd5c1efcd60e09dffde1f0eed07a42693c8f81__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b9ebebcb369b061f0ded2abc03dd5c1efcd60e09dffde1f0eed07a42693c8f81_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_2ec7d52e022d4a512c31415dd9580c398033bd13d5d9ee290019f128926e073f(memPtr) {\n\n        mstore(add(memPtr, 0), \"The user address needs to be dif\")\n\n        mstore(add(memPtr, 32), \"ferent from zero.\")\n\n    }\n\n    function abi_encode_t_stringliteral_2ec7d52e022d4a512c31415dd9580c398033bd13d5d9ee290019f128926e073f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 49)\n        store_literal_in_memory_2ec7d52e022d4a512c31415dd9580c398033bd13d5d9ee290019f128926e073f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2ec7d52e022d4a512c31415dd9580c398033bd13d5d9ee290019f128926e073f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2ec7d52e022d4a512c31415dd9580c398033bd13d5d9ee290019f128926e073f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function cleanup_t_rational_0_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_0_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_rational_0_by_1(value)))\n    }\n\n    function abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_0_by_1_to_t_uint256(value))\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_address_t_rational_0_by_1_t_bool_t_bool__to_t_address_t_address_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_address_t_uint256_t_bool_t_bool__fromStack_reversed(headStart , value9, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 320)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value3,  tail)\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value4,  tail)\n\n        mstore(add(headStart, 160), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value5,  tail)\n\n        abi_encode_t_address_to_t_address_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value7,  add(headStart, 224))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value8,  add(headStart, 256))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value9,  add(headStart, 288))\n\n    }\n\n    function store_literal_in_memory_795e888268ddf9337f106a3868637d7c62055ce14f5dda1abe76d3564d875fc2(memPtr) {\n\n        mstore(add(memPtr, 0), \"This NFT is not for sale.\")\n\n    }\n\n    function abi_encode_t_stringliteral_795e888268ddf9337f106a3868637d7c62055ce14f5dda1abe76d3564d875fc2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_795e888268ddf9337f106a3868637d7c62055ce14f5dda1abe76d3564d875fc2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_795e888268ddf9337f106a3868637d7c62055ce14f5dda1abe76d3564d875fc2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_795e888268ddf9337f106a3868637d7c62055ce14f5dda1abe76d3564d875fc2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_ad8e9a422fe1279413cfad79198ac5655e066c8f7548850b9f2131c6ae0aa8bd(memPtr) {\n\n        mstore(add(memPtr, 0), \"CYON token allowance too low.\")\n\n    }\n\n    function abi_encode_t_stringliteral_ad8e9a422fe1279413cfad79198ac5655e066c8f7548850b9f2131c6ae0aa8bd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_ad8e9a422fe1279413cfad79198ac5655e066c8f7548850b9f2131c6ae0aa8bd(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ad8e9a422fe1279413cfad79198ac5655e066c8f7548850b9f2131c6ae0aa8bd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ad8e9a422fe1279413cfad79198ac5655e066c8f7548850b9f2131c6ae0aa8bd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_604f2a465e5da2d3944668dd2853b95589c33b45bfa6f32de952c6982edd2c10(memPtr) {\n\n        mstore(add(memPtr, 0), \"Failed to send CYON to the NFT o\")\n\n        mstore(add(memPtr, 32), \"wner.\")\n\n    }\n\n    function abi_encode_t_stringliteral_604f2a465e5da2d3944668dd2853b95589c33b45bfa6f32de952c6982edd2c10_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_604f2a465e5da2d3944668dd2853b95589c33b45bfa6f32de952c6982edd2c10(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_604f2a465e5da2d3944668dd2853b95589c33b45bfa6f32de952c6982edd2c10__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_604f2a465e5da2d3944668dd2853b95589c33b45bfa6f32de952c6982edd2c10_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_rational_0_by_1__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_address_t_uint256_t_address_t_address_t_uint256__to_t_string_memory_ptr_t_address_t_uint256_t_address_t_address_t_uint256__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n    }\n\n}\n",
      "id": 20,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "420:6957:16:-:0;;;1940:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2003:12;1984:9;;:32;;;;;;;;;;;;;;;;;;1940:83;420:6957;;88:117:20;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;420:6957:16:-;;;;;;;",
  "deployedSourceMap": "420:6957:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3778:843;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7024:351;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;720:23;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2893:554;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4965:1461;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3778:843;3918:1;3888:32;;:18;:32;;;3880:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;4076:18;4061:49;;;:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4049:8;:63;;4048:83;;;;;4129:1;4118:8;:12;4048:83;4040:125;;;;;;;;;;;;:::i;:::-;;;;;;;;;4277:10;4221:66;;4236:18;4221:42;;;4264:8;4221:52;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:66;;;4213:133;;;;;;;;;;;;:::i;:::-;;;;;;;;;4417:1;4408:6;:10;4400:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;4569:18;4554:43;;;4598:8;4607:6;4554:60;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3778:843;;;:::o;7024:351::-;7109:13;7170:18;7155:49;;;:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7143:8;:63;;7142:83;;;;;7223:1;7212:8;:12;7142:83;7134:125;;;;;;;;;;;;:::i;:::-;;;;;;;;;7329:18;7314:43;;;7358:8;7314:53;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7307:61;;7024:351;;;;:::o;720:23::-;;;;;;;;;;;;:::o;2893:554::-;3125:1;3095:32;;:18;:32;;;3087:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;3231:1;3208:25;;:11;:25;;;3200:86;;;;;;;;;;;;:::i;:::-;;;;;;;;;3318:18;3303:42;;;3346:11;3358:10;3369:9;3379:5;3385:12;3398:4;3411:9;;;;;;;;;;3422:1;3424:5;3430;3303:133;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2893:554;;;;;;:::o;4965:1461::-;5119:1;5089:32;;:18;:32;;;5081:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;5241:13;5272:18;5257:43;;;5301:8;5257:53;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5241:69;;5336:1;5328:5;:9;5320:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;5526:5;5476:9;;;;;;;;;;:19;;;5496:10;5516:4;5476:46;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:55;;5468:97;;;;;;;;;;;;:::i;:::-;;;;;;;;;5659:20;5697:18;5682:42;;;5725:8;5682:52;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5659:75;;5744:9;5756;;;;;;;;;;;:18;;;5775:12;5789:5;5756:39;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5744:51;;5813:4;5805:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;5987:4;5919:73;;5934:18;5919:46;;;5966:8;5919:56;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:73;;;5911:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;6105:18;6090:51;;;6142:12;6156:10;6168:8;6090:87;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6250:18;6235:43;;;6279:8;6288:1;6235:55;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6306:113;6329:18;6314:39;;;:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6357:18;6377:8;6387:12;6401:10;6413:5;6306:113;;;;;;;;;;;:::i;:::-;;;;;;;;5044:1382;;;4965:1461;;:::o;7:75:20:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:619::-;1274:6;1282;1290;1339:2;1327:9;1318:7;1314:23;1310:32;1307:119;;;1345:79;;:::i;:::-;1307:119;1465:1;1490:53;1535:7;1526:6;1515:9;1511:22;1490:53;:::i;:::-;1480:63;;1436:117;1592:2;1618:53;1663:7;1654:6;1643:9;1639:22;1618:53;:::i;:::-;1608:63;;1563:118;1720:2;1746:53;1791:7;1782:6;1771:9;1767:22;1746:53;:::i;:::-;1736:63;;1691:118;1197:619;;;;;:::o;1822:474::-;1890:6;1898;1947:2;1935:9;1926:7;1922:23;1918:32;1915:119;;;1953:79;;:::i;:::-;1915:119;2073:1;2098:53;2143:7;2134:6;2123:9;2119:22;2098:53;:::i;:::-;2088:63;;2044:117;2200:2;2226:53;2271:7;2262:6;2251:9;2247:22;2226:53;:::i;:::-;2216:63;;2171:118;1822:474;;;;;:::o;2302:99::-;2354:6;2388:5;2382:12;2372:22;;2302:99;;;:::o;2407:169::-;2491:11;2525:6;2520:3;2513:19;2565:4;2560:3;2556:14;2541:29;;2407:169;;;;:::o;2582:307::-;2650:1;2660:113;2674:6;2671:1;2668:13;2660:113;;;2759:1;2754:3;2750:11;2744:18;2740:1;2735:3;2731:11;2724:39;2696:2;2693:1;2689:10;2684:15;;2660:113;;;2791:6;2788:1;2785:13;2782:101;;;2871:1;2862:6;2857:3;2853:16;2846:27;2782:101;2631:258;2582:307;;;:::o;2895:102::-;2936:6;2987:2;2983:7;2978:2;2971:5;2967:14;2963:28;2953:38;;2895:102;;;:::o;3003:364::-;3091:3;3119:39;3152:5;3119:39;:::i;:::-;3174:71;3238:6;3233:3;3174:71;:::i;:::-;3167:78;;3254:52;3299:6;3294:3;3287:4;3280:5;3276:16;3254:52;:::i;:::-;3331:29;3353:6;3331:29;:::i;:::-;3326:3;3322:39;3315:46;;3095:272;3003:364;;;;:::o;3373:313::-;3486:4;3524:2;3513:9;3509:18;3501:26;;3573:9;3567:4;3563:20;3559:1;3548:9;3544:17;3537:47;3601:78;3674:4;3665:6;3601:78;:::i;:::-;3593:86;;3373:313;;;;:::o;3692:60::-;3720:3;3741:5;3734:12;;3692:60;;;:::o;3758:142::-;3808:9;3841:53;3859:34;3868:24;3886:5;3868:24;:::i;:::-;3859:34;:::i;:::-;3841:53;:::i;:::-;3828:66;;3758:142;;;:::o;3906:126::-;3956:9;3989:37;4020:5;3989:37;:::i;:::-;3976:50;;3906:126;;;:::o;4038:141::-;4103:9;4136:37;4167:5;4136:37;:::i;:::-;4123:50;;4038:141;;;:::o;4185:161::-;4287:52;4333:5;4287:52;:::i;:::-;4282:3;4275:65;4185:161;;:::o;4352:252::-;4460:4;4498:2;4487:9;4483:18;4475:26;;4511:86;4594:1;4583:9;4579:17;4570:6;4511:86;:::i;:::-;4352:252;;;;:::o;4610:117::-;4719:1;4716;4709:12;4733:117;4842:1;4839;4832:12;4856:180;4904:77;4901:1;4894:88;5001:4;4998:1;4991:15;5025:4;5022:1;5015:15;5042:281;5125:27;5147:4;5125:27;:::i;:::-;5117:6;5113:40;5255:6;5243:10;5240:22;5219:18;5207:10;5204:34;5201:62;5198:88;;;5266:18;;:::i;:::-;5198:88;5306:10;5302:2;5295:22;5085:238;5042:281;;:::o;5329:129::-;5363:6;5390:20;;:::i;:::-;5380:30;;5419:33;5447:4;5439:6;5419:33;:::i;:::-;5329:129;;;:::o;5464:308::-;5526:4;5616:18;5608:6;5605:30;5602:56;;;5638:18;;:::i;:::-;5602:56;5676:29;5698:6;5676:29;:::i;:::-;5668:37;;5760:4;5754;5750:15;5742:23;;5464:308;;;:::o;5778:154::-;5862:6;5857:3;5852;5839:30;5924:1;5915:6;5910:3;5906:16;5899:27;5778:154;;;:::o;5938:412::-;6016:5;6041:66;6057:49;6099:6;6057:49;:::i;:::-;6041:66;:::i;:::-;6032:75;;6130:6;6123:5;6116:21;6168:4;6161:5;6157:16;6206:3;6197:6;6192:3;6188:16;6185:25;6182:112;;;6213:79;;:::i;:::-;6182:112;6303:41;6337:6;6332:3;6327;6303:41;:::i;:::-;6022:328;5938:412;;;;;:::o;6370:340::-;6426:5;6475:3;6468:4;6460:6;6456:17;6452:27;6442:122;;6483:79;;:::i;:::-;6442:122;6600:6;6587:20;6625:79;6700:3;6692:6;6685:4;6677:6;6673:17;6625:79;:::i;:::-;6616:88;;6432:278;6370:340;;;;:::o;6716:1777::-;6860:6;6868;6876;6884;6892;6900;6949:3;6937:9;6928:7;6924:23;6920:33;6917:120;;;6956:79;;:::i;:::-;6917:120;7076:1;7101:53;7146:7;7137:6;7126:9;7122:22;7101:53;:::i;:::-;7091:63;;7047:117;7203:2;7229:53;7274:7;7265:6;7254:9;7250:22;7229:53;:::i;:::-;7219:63;;7174:118;7359:2;7348:9;7344:18;7331:32;7390:18;7382:6;7379:30;7376:117;;;7412:79;;:::i;:::-;7376:117;7517:63;7572:7;7563:6;7552:9;7548:22;7517:63;:::i;:::-;7507:73;;7302:288;7657:2;7646:9;7642:18;7629:32;7688:18;7680:6;7677:30;7674:117;;;7710:79;;:::i;:::-;7674:117;7815:63;7870:7;7861:6;7850:9;7846:22;7815:63;:::i;:::-;7805:73;;7600:288;7955:3;7944:9;7940:19;7927:33;7987:18;7979:6;7976:30;7973:117;;;8009:79;;:::i;:::-;7973:117;8114:63;8169:7;8160:6;8149:9;8145:22;8114:63;:::i;:::-;8104:73;;7898:289;8254:3;8243:9;8239:19;8226:33;8286:18;8278:6;8275:30;8272:117;;;8308:79;;:::i;:::-;8272:117;8413:63;8468:7;8459:6;8448:9;8444:22;8413:63;:::i;:::-;8403:73;;8197:289;6716:1777;;;;;;;;:::o;8499:242::-;8639:34;8635:1;8627:6;8623:14;8616:58;8708:25;8703:2;8695:6;8691:15;8684:50;8499:242;:::o;8747:366::-;8889:3;8910:67;8974:2;8969:3;8910:67;:::i;:::-;8903:74;;8986:93;9075:3;8986:93;:::i;:::-;9104:2;9099:3;9095:12;9088:19;;8747:366;;;:::o;9119:419::-;9285:4;9323:2;9312:9;9308:18;9300:26;;9372:9;9366:4;9362:20;9358:1;9347:9;9343:17;9336:47;9400:131;9526:4;9400:131;:::i;:::-;9392:139;;9119:419;;;:::o;9544:143::-;9601:5;9632:6;9626:13;9617:22;;9648:33;9675:5;9648:33;:::i;:::-;9544:143;;;;:::o;9693:351::-;9763:6;9812:2;9800:9;9791:7;9787:23;9783:32;9780:119;;;9818:79;;:::i;:::-;9780:119;9938:1;9963:64;10019:7;10010:6;9999:9;9995:22;9963:64;:::i;:::-;9953:74;;9909:128;9693:351;;;;:::o;10050:179::-;10190:31;10186:1;10178:6;10174:14;10167:55;10050:179;:::o;10235:366::-;10377:3;10398:67;10462:2;10457:3;10398:67;:::i;:::-;10391:74;;10474:93;10563:3;10474:93;:::i;:::-;10592:2;10587:3;10583:12;10576:19;;10235:366;;;:::o;10607:419::-;10773:4;10811:2;10800:9;10796:18;10788:26;;10860:9;10854:4;10850:20;10846:1;10835:9;10831:17;10824:47;10888:131;11014:4;10888:131;:::i;:::-;10880:139;;10607:419;;;:::o;11032:118::-;11119:24;11137:5;11119:24;:::i;:::-;11114:3;11107:37;11032:118;;:::o;11156:222::-;11249:4;11287:2;11276:9;11272:18;11264:26;;11300:71;11368:1;11357:9;11353:17;11344:6;11300:71;:::i;:::-;11156:222;;;;:::o;11384:143::-;11441:5;11472:6;11466:13;11457:22;;11488:33;11515:5;11488:33;:::i;:::-;11384:143;;;;:::o;11533:351::-;11603:6;11652:2;11640:9;11631:7;11627:23;11623:32;11620:119;;;11658:79;;:::i;:::-;11620:119;11778:1;11803:64;11859:7;11850:6;11839:9;11835:22;11803:64;:::i;:::-;11793:74;;11749:128;11533:351;;;;:::o;11890:242::-;12030:34;12026:1;12018:6;12014:14;12007:58;12099:25;12094:2;12086:6;12082:15;12075:50;11890:242;:::o;12138:366::-;12280:3;12301:67;12365:2;12360:3;12301:67;:::i;:::-;12294:74;;12377:93;12466:3;12377:93;:::i;:::-;12495:2;12490:3;12486:12;12479:19;;12138:366;;;:::o;12510:419::-;12676:4;12714:2;12703:9;12699:18;12691:26;;12763:9;12757:4;12753:20;12749:1;12738:9;12734:17;12727:47;12791:131;12917:4;12791:131;:::i;:::-;12783:139;;12510:419;;;:::o;12935:234::-;13075:34;13071:1;13063:6;13059:14;13052:58;13144:17;13139:2;13131:6;13127:15;13120:42;12935:234;:::o;13175:366::-;13317:3;13338:67;13402:2;13397:3;13338:67;:::i;:::-;13331:74;;13414:93;13503:3;13414:93;:::i;:::-;13532:2;13527:3;13523:12;13516:19;;13175:366;;;:::o;13547:419::-;13713:4;13751:2;13740:9;13736:18;13728:26;;13800:9;13794:4;13790:20;13786:1;13775:9;13771:17;13764:47;13828:131;13954:4;13828:131;:::i;:::-;13820:139;;13547:419;;;:::o;13972:332::-;14093:4;14131:2;14120:9;14116:18;14108:26;;14144:71;14212:1;14201:9;14197:17;14188:6;14144:71;:::i;:::-;14225:72;14293:2;14282:9;14278:18;14269:6;14225:72;:::i;:::-;13972:332;;;;;:::o;14310:421::-;14399:5;14424:66;14440:49;14482:6;14440:49;:::i;:::-;14424:66;:::i;:::-;14415:75;;14513:6;14506:5;14499:21;14551:4;14544:5;14540:16;14589:3;14580:6;14575:3;14571:16;14568:25;14565:112;;;14596:79;;:::i;:::-;14565:112;14686:39;14718:6;14713:3;14708;14686:39;:::i;:::-;14405:326;14310:421;;;;;:::o;14751:355::-;14818:5;14867:3;14860:4;14852:6;14848:17;14844:27;14834:122;;14875:79;;:::i;:::-;14834:122;14985:6;14979:13;15010:90;15096:3;15088:6;15081:4;15073:6;15069:17;15010:90;:::i;:::-;15001:99;;14824:282;14751:355;;;;:::o;15112:524::-;15192:6;15241:2;15229:9;15220:7;15216:23;15212:32;15209:119;;;15247:79;;:::i;:::-;15209:119;15388:1;15377:9;15373:17;15367:24;15418:18;15410:6;15407:30;15404:117;;;15440:79;;:::i;:::-;15404:117;15545:74;15611:7;15602:6;15591:9;15587:22;15545:74;:::i;:::-;15535:84;;15338:291;15112:524;;;;:::o;15642:236::-;15782:34;15778:1;15770:6;15766:14;15759:58;15851:19;15846:2;15838:6;15834:15;15827:44;15642:236;:::o;15884:366::-;16026:3;16047:67;16111:2;16106:3;16047:67;:::i;:::-;16040:74;;16123:93;16212:3;16123:93;:::i;:::-;16241:2;16236:3;16232:12;16225:19;;15884:366;;;:::o;16256:419::-;16422:4;16460:2;16449:9;16445:18;16437:26;;16509:9;16503:4;16499:20;16495:1;16484:9;16480:17;16473:47;16537:131;16663:4;16537:131;:::i;:::-;16529:139;;16256:419;;;:::o;16681:118::-;16768:24;16786:5;16768:24;:::i;:::-;16763:3;16756:37;16681:118;;:::o;16805:85::-;16850:7;16879:5;16868:16;;16805:85;;;:::o;16896:158::-;16954:9;16987:61;17005:42;17014:32;17040:5;17014:32;:::i;:::-;17005:42;:::i;:::-;16987:61;:::i;:::-;16974:74;;16896:158;;;:::o;17060:147::-;17155:45;17194:5;17155:45;:::i;:::-;17150:3;17143:58;17060:147;;:::o;17213:90::-;17247:7;17290:5;17283:13;17276:21;17265:32;;17213:90;;;:::o;17309:109::-;17390:21;17405:5;17390:21;:::i;:::-;17385:3;17378:34;17309:109;;:::o;17424:1575::-;17845:4;17883:3;17872:9;17868:19;17860:27;;17897:71;17965:1;17954:9;17950:17;17941:6;17897:71;:::i;:::-;17978:72;18046:2;18035:9;18031:18;18022:6;17978:72;:::i;:::-;18097:9;18091:4;18087:20;18082:2;18071:9;18067:18;18060:48;18125:78;18198:4;18189:6;18125:78;:::i;:::-;18117:86;;18250:9;18244:4;18240:20;18235:2;18224:9;18220:18;18213:48;18278:78;18351:4;18342:6;18278:78;:::i;:::-;18270:86;;18404:9;18398:4;18394:20;18388:3;18377:9;18373:19;18366:49;18432:78;18505:4;18496:6;18432:78;:::i;:::-;18424:86;;18558:9;18552:4;18548:20;18542:3;18531:9;18527:19;18520:49;18586:78;18659:4;18650:6;18586:78;:::i;:::-;18578:86;;18674:73;18742:3;18731:9;18727:19;18718:6;18674:73;:::i;:::-;18757:81;18833:3;18822:9;18818:19;18809:6;18757:81;:::i;:::-;18848:67;18910:3;18899:9;18895:19;18886:6;18848:67;:::i;:::-;18925;18987:3;18976:9;18972:19;18963:6;18925:67;:::i;:::-;17424:1575;;;;;;;;;;;;;:::o;19005:175::-;19145:27;19141:1;19133:6;19129:14;19122:51;19005:175;:::o;19186:366::-;19328:3;19349:67;19413:2;19408:3;19349:67;:::i;:::-;19342:74;;19425:93;19514:3;19425:93;:::i;:::-;19543:2;19538:3;19534:12;19527:19;;19186:366;;;:::o;19558:419::-;19724:4;19762:2;19751:9;19747:18;19739:26;;19811:9;19805:4;19801:20;19797:1;19786:9;19782:17;19775:47;19839:131;19965:4;19839:131;:::i;:::-;19831:139;;19558:419;;;:::o;19983:332::-;20104:4;20142:2;20131:9;20127:18;20119:26;;20155:71;20223:1;20212:9;20208:17;20199:6;20155:71;:::i;:::-;20236:72;20304:2;20293:9;20289:18;20280:6;20236:72;:::i;:::-;19983:332;;;;;:::o;20321:179::-;20461:31;20457:1;20449:6;20445:14;20438:55;20321:179;:::o;20506:366::-;20648:3;20669:67;20733:2;20728:3;20669:67;:::i;:::-;20662:74;;20745:93;20834:3;20745:93;:::i;:::-;20863:2;20858:3;20854:12;20847:19;;20506:366;;;:::o;20878:419::-;21044:4;21082:2;21071:9;21067:18;21059:26;;21131:9;21125:4;21121:20;21117:1;21106:9;21102:17;21095:47;21159:131;21285:4;21159:131;:::i;:::-;21151:139;;20878:419;;;:::o;21303:332::-;21424:4;21462:2;21451:9;21447:18;21439:26;;21475:71;21543:1;21532:9;21528:17;21519:6;21475:71;:::i;:::-;21556:72;21624:2;21613:9;21609:18;21600:6;21556:72;:::i;:::-;21303:332;;;;;:::o;21641:116::-;21711:21;21726:5;21711:21;:::i;:::-;21704:5;21701:32;21691:60;;21747:1;21744;21737:12;21691:60;21641:116;:::o;21763:137::-;21817:5;21848:6;21842:13;21833:22;;21864:30;21888:5;21864:30;:::i;:::-;21763:137;;;;:::o;21906:345::-;21973:6;22022:2;22010:9;22001:7;21997:23;21993:32;21990:119;;;22028:79;;:::i;:::-;21990:119;22148:1;22173:61;22226:7;22217:6;22206:9;22202:22;22173:61;:::i;:::-;22163:71;;22119:125;21906:345;;;;:::o;22257:224::-;22397:34;22393:1;22385:6;22381:14;22374:58;22466:7;22461:2;22453:6;22449:15;22442:32;22257:224;:::o;22487:366::-;22629:3;22650:67;22714:2;22709:3;22650:67;:::i;:::-;22643:74;;22726:93;22815:3;22726:93;:::i;:::-;22844:2;22839:3;22835:12;22828:19;;22487:366;;;:::o;22859:419::-;23025:4;23063:2;23052:9;23048:18;23040:26;;23112:9;23106:4;23102:20;23098:1;23087:9;23083:17;23076:47;23140:131;23266:4;23140:131;:::i;:::-;23132:139;;22859:419;;;:::o;23284:114::-;;:::o;23404:364::-;23546:3;23567:66;23631:1;23626:3;23567:66;:::i;:::-;23560:73;;23642:93;23731:3;23642:93;:::i;:::-;23760:1;23755:3;23751:11;23744:18;;23404:364;;;:::o;23774:419::-;23940:4;23978:2;23967:9;23963:18;23955:26;;24027:9;24021:4;24017:20;24013:1;24002:9;23998:17;23991:47;24055:131;24181:4;24055:131;:::i;:::-;24047:139;;23774:419;;;:::o;24199:442::-;24348:4;24386:2;24375:9;24371:18;24363:26;;24399:71;24467:1;24456:9;24452:17;24443:6;24399:71;:::i;:::-;24480:72;24548:2;24537:9;24533:18;24524:6;24480:72;:::i;:::-;24562;24630:2;24619:9;24615:18;24606:6;24562:72;:::i;:::-;24199:442;;;;;;:::o;24647:348::-;24776:4;24814:2;24803:9;24799:18;24791:26;;24827:71;24895:1;24884:9;24880:17;24871:6;24827:71;:::i;:::-;24908:80;24984:2;24973:9;24969:18;24960:6;24908:80;:::i;:::-;24647:348;;;;;:::o;25001:866::-;25254:4;25292:3;25281:9;25277:19;25269:27;;25342:9;25336:4;25332:20;25328:1;25317:9;25313:17;25306:47;25370:78;25443:4;25434:6;25370:78;:::i;:::-;25362:86;;25458:72;25526:2;25515:9;25511:18;25502:6;25458:72;:::i;:::-;25540;25608:2;25597:9;25593:18;25584:6;25540:72;:::i;:::-;25622;25690:2;25679:9;25675:18;25666:6;25622:72;:::i;:::-;25704:73;25772:3;25761:9;25757:19;25748:6;25704:73;:::i;:::-;25787;25855:3;25844:9;25840:19;25831:6;25787:73;:::i;:::-;25001:866;;;;;;;;;:::o",
  "source": "// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.8.13;\n\nimport \"./Auction.sol\";\nimport \"./NFTCollectionFactory.sol\";\nimport \"../node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\n/// @title Master contract to manage the decentralized NFT market place \n/// @author Sebastien Gazeau, Sébastien Dupertuis et Alexis Mendoza\n/// @notice This smart contract is the link between the Dapp and the subcontracts\ncontract Master {\n    \n    //------------------------------------------------------------------------------------\n    // ----------------------------------Variables----------------------------------------\n    //------------------------------------------------------------------------------------\n    IERC20 public tokenCYON;\n\n    //------------------------------------------------------------------------------------\n    // ------------------------------------Events-----------------------------------------\n    //------------------------------------------------------------------------------------\n    /// @notice event for NFT sales\n    /// @param _collectionName Name of the NFT collection\n    /// @param _collectionAddress Address of the collection\n    /// @param _tokenID The ID of this given NFT\n    /// @param _oldOwner Previous owner of the sold NFT\n    /// @param _newOwner New owner of the bought NFT\n    /// @param _price The sale price of the given NFT\n    event NFTSold(string _collectionName, address _collectionAddress, uint256 _tokenID, address _oldOwner, address _newOwner, uint256 _price);\n\n    //------------------------------------------------------------------------------------\n    // ----------------------------------Constructor--------------------------------------\n    //------------------------------------------------------------------------------------\n    /// @notice The constructor the Master smart contract\n    /// @param _addressCYON The ERC20 address of the platform token (CYON) \n    constructor(address _addressCYON) {\n        tokenCYON = IERC20(_addressCYON);\n    }\n\n    //------------------------------------------------------------------------------------\n    // -----------------------------------Functions---------------------------------------\n    //------------------------------------------------------------------------------------\n    /// @notice This function allows to create NFTs inside a collection and mint it directly\n    /// @dev Call this function when the user wants to create a new NFT and mint it to the given address\n    /// @param _collectionAddress The address of the collection in which the NFT will be created/minted\n    /// @param _firstOwner The destination address to which the NFT is minted\n    /// @param _tokenURI The metadata through a link URI\n    /// @param _name Name of the new NFT\n    /// @param _description Description of the new NFT\n    /// @param _tag Tag of the new NFT allowing filtering\n    function createNFT(address _collectionAddress, address _firstOwner, string memory _tokenURI, string memory _name, \n        string memory _description, string memory _tag) external {\n            require(_collectionAddress != address(0),\"The collection address needs to be different from zero.\");\n            require(_firstOwner != address(0),\"The user address needs to be different from zero.\");  \n\n            NFTCollections(_collectionAddress).MintNFT(_firstOwner,msg.sender,_tokenURI,_name,_description,_tag,address(tokenCYON),0,false,false);\n        }\n\n\n    /// @notice This function allows to set the price of the given NFT\n    /// @dev Call this function when a sale is initiated\n    /// @param _collectionAddress The address of the collection of the NFT to set the price\n    /// @param _tokenID The token ID of the NFT to set the price\n    /// @param _price The price to set\n    function setNewPrice(address _collectionAddress, uint256 _tokenID, uint256 _price) external {\n        require(_collectionAddress != address(0),\"The collection address needs to be different from zero.\");    // Make sure the address is different from zero\n        require((_tokenID <= NFTCollections(_collectionAddress).getTotalSupply()) && (_tokenID > 0), \"This token ID does not exist.\");      // Make sure the token ID exists\n        require(NFTCollections(_collectionAddress).ownerOf(_tokenID) == msg.sender,\"This NFT does not belong to the current message sender.\");  // Make sure the sale comes from the owner\n        require(_price > 0,\"Please define a selling price higher than zero.\");                                  // Make sure the price is more than zero\n\n        NFTCollections(_collectionAddress).setPrice(_tokenID,_price);\n    }\n\n    /// @notice This function allows to transfer the money to the NFT owner and the NFT to the buyer.\n    /// @dev Call this function when a buyer click on the BUY button\n    /// @param _collectionAddress The address of the collection of the NFT to be sold/transfered\n    /// @param _tokenID The token ID of the NFT to be sold/transfered\n    function buyNFT(address _collectionAddress, uint256 _tokenID) external payable {\n        // Global requires\n        require(_collectionAddress != address(0),\"The collection address needs to be different from zero.\");    // Make sure the address is different from zero\n        uint256 price = NFTCollections(_collectionAddress).getPrice(_tokenID);\n        require(price > 0,\"This NFT is not for sale.\");     // Make sure the NFT is for sale\n    \n        // Send the CYON to the current NFT owner\n        require(tokenCYON.allowance(msg.sender, address(this)) >= price, \"CYON token allowance too low.\");      // Make sure the Master contract has the allowance to manage the CYON transfer\n        address currentOwner = NFTCollections(_collectionAddress).ownerOf(_tokenID);\n        bool sent = tokenCYON.transfer(currentOwner, price);\n        require(sent, \"Failed to send CYON to the NFT owner.\");\n\n        // Send the NFT to the new owner\n        require(NFTCollections(_collectionAddress).getApproved(_tokenID) == address(this),\"\");       // Make sure the Master contract has the allowance to manage the NFT transfer\n        NFTCollections(_collectionAddress).safeTransferFrom(currentOwner, msg.sender, _tokenID);\n\n        // Reset the price to 0 after the sale\n        NFTCollections(_collectionAddress).setPrice(_tokenID,0);\n\n        emit NFTSold(NFTCollections(_collectionAddress).name(), _collectionAddress, _tokenID, currentOwner, msg.sender, price);\n    }\n\n\n    //------------------------------------------------------------------------------------\n    // ------------------------------------Getters----------------------------------------\n    //------------------------------------------------------------------------------------\n    /// @notice This function returns the URI data of the given NFT\n    /// @dev Call this function to get the metadata of the NFT\n    /// @param _collectionAddress The address of the collection of the NFT to get the URI\n    /// @param _tokenID The token ID of the NFT to get the URI\n    /// @return _URI The URI data\n    function getURI(address _collectionAddress, uint256 _tokenID) external view returns (string memory) {\n        require((_tokenID <= NFTCollections(_collectionAddress).getTotalSupply()) && (_tokenID > 0), \"This token ID does not exist.\");      // Make sure the token ID exists\n        return(NFTCollections(_collectionAddress).tokenURI(_tokenID));\n    }\n}\n",
  "sourcePath": "/home/alexis/Projects/project-nft-cyon/contracts/Master.sol",
  "ast": {
    "absolutePath": "project:/contracts/Master.sol",
    "exportedSymbols": {
      "Address": [
        2138
      ],
      "Auction": [
        3138
      ],
      "Context": [
        2160
      ],
      "Counters": [
        2234
      ],
      "ERC165": [
        2461
      ],
      "ERC721": [
        1554
      ],
      "ERC721URIStorage": [
        1816
      ],
      "IERC165": [
        2473
      ],
      "IERC20": [
        4032
      ],
      "IERC721": [
        1670
      ],
      "IERC721Metadata": [
        1843
      ],
      "IERC721Receiver": [
        1688
      ],
      "Master": [
        3668
      ],
      "NFTCollectionFactory": [
        3727
      ],
      "NFTCollections": [
        3954
      ],
      "Strings": [
        2437
      ]
    },
    "id": 3669,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3354,
        "literals": [
          "solidity",
          "0.8",
          ".13"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:23:16"
      },
      {
        "absolutePath": "project:/contracts/Auction.sol",
        "file": "./Auction.sol",
        "id": 3355,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3669,
        "sourceUnit": 3139,
        "src": "61:23:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/NFTCollectionFactory.sol",
        "file": "./NFTCollectionFactory.sol",
        "id": 3356,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3669,
        "sourceUnit": 3728,
        "src": "85:36:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "../node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 3357,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3669,
        "sourceUnit": 4033,
        "src": "122:72:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Master",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 3358,
          "nodeType": "StructuredDocumentation",
          "src": "196:224:16",
          "text": "@title Master contract to manage the decentralized NFT market place \n @author Sebastien Gazeau, Sébastien Dupertuis et Alexis Mendoza\n @notice This smart contract is the link between the Dapp and the subcontracts"
        },
        "fullyImplemented": true,
        "id": 3668,
        "linearizedBaseContracts": [
          3668
        ],
        "name": "Master",
        "nameLocation": "429:6:16",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "50194895",
            "id": 3361,
            "mutability": "mutable",
            "name": "tokenCYON",
            "nameLocation": "734:9:16",
            "nodeType": "VariableDeclaration",
            "scope": 3668,
            "src": "720:23:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$4032",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 3360,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3359,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4032,
                "src": "720:6:16"
              },
              "referencedDeclaration": 4032,
              "src": "720:6:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$4032",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 3362,
              "nodeType": "StructuredDocumentation",
              "src": "1023:361:16",
              "text": "@notice event for NFT sales\n @param _collectionName Name of the NFT collection\n @param _collectionAddress Address of the collection\n @param _tokenID The ID of this given NFT\n @param _oldOwner Previous owner of the sold NFT\n @param _newOwner New owner of the bought NFT\n @param _price The sale price of the given NFT"
            },
            "eventSelector": "8146a1050e7850dd9a48240ef51ee45f907a45710d3c5136077e83e633c3ebe1",
            "id": 3376,
            "name": "NFTSold",
            "nameLocation": "1395:7:16",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3375,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3364,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_collectionName",
                  "nameLocation": "1410:15:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3376,
                  "src": "1403:22:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3363,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1403:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3366,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_collectionAddress",
                  "nameLocation": "1435:18:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3376,
                  "src": "1427:26:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3365,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1427:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
=======
                "src": "27281:4:16",
                "type": ""
              }
            ],
            "src": "27115:419:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "27646:135:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "27668:6:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "27676:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "27664:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27664:14:16"
                      },
                      {
                        "hexValue": "5468652076616c6964697479206f66207468652061756374696f6e2068617320",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "27680:34:16",
                        "type": "",
                        "value": "The validity of the auction has "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "27657:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27657:58:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27657:58:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "27736:6:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "27744:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "27732:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27732:15:16"
                      },
                      {
                        "hexValue": "6e6f74206265656e2076657269666965642c20796574",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "27749:24:16",
                        "type": "",
                        "value": "not been verified, yet"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "27725:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27725:49:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27725:49:16"
                }
              ]
            },
            "name": "store_literal_in_memory_54702dde2fcba02dc2fb39a69338ef316373b8f0d93345ef98921592a6d1400d",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "27638:6:16",
                "type": ""
              }
            ],
            "src": "27540:241:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "27933:220:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "27943:74:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "28009:3:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "28014:2:16",
                        "type": "",
                        "value": "54"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "27950:58:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27950:67:16"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "27943:3:16"
>>>>>>> Stashed changes
                    }
                  },
                  "visibility": "internal"
                },
                {
<<<<<<< Updated upstream
                  "constant": false,
                  "id": 3368,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_tokenID",
                  "nameLocation": "1463:8:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3376,
                  "src": "1455:16:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3367,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1455:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3370,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_oldOwner",
                  "nameLocation": "1481:9:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3376,
                  "src": "1473:17:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3369,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1473:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
=======
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "28115:3:16"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_54702dde2fcba02dc2fb39a69338ef316373b8f0d93345ef98921592a6d1400d",
                      "nodeType": "YulIdentifier",
                      "src": "28026:88:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28026:93:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28026:93:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "28128:19:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "28139:3:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "28144:2:16",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "28135:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28135:12:16"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "28128:3:16"
>>>>>>> Stashed changes
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3372,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_newOwner",
                  "nameLocation": "1500:9:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3376,
                  "src": "1492:17:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3371,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1492:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3374,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_price",
                  "nameLocation": "1519:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3376,
                  "src": "1511:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3373,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1511:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1402:124:16"
            },
<<<<<<< Updated upstream
            "src": "1389:138:16"
          },
          {
            "body": {
              "id": 3388,
              "nodeType": "Block",
              "src": "1974:49:16",
              "statements": [
                {
                  "expression": {
                    "id": 3386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3382,
                      "name": "tokenCYON",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3361,
                      "src": "1984:9:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$4032",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3384,
                          "name": "_addressCYON",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3379,
                          "src": "2003:12:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3383,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4032,
                        "src": "1996:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$4032_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 3385,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1996:20:16",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$4032",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1984:32:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$4032",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 3387,
                  "nodeType": "ExpressionStatement",
                  "src": "1984:32:16"
                }
              ]
            },
            "documentation": {
              "id": 3377,
              "nodeType": "StructuredDocumentation",
              "src": "1806:129:16",
              "text": "@notice The constructor the Master smart contract\n @param _addressCYON The ERC20 address of the platform token (CYON) "
            },
            "id": 3389,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3380,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3379,
                  "mutability": "mutable",
                  "name": "_addressCYON",
                  "nameLocation": "1960:12:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3389,
                  "src": "1952:20:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3378,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1952:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
=======
            "name": "abi_encode_t_stringliteral_54702dde2fcba02dc2fb39a69338ef316373b8f0d93345ef98921592a6d1400d_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "27921:3:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "27929:3:16",
                "type": ""
              }
            ],
            "src": "27787:366:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "28330:248:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "28340:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "28352:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "28363:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "28348:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28348:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "28340:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "28387:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "28398:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "28383:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28383:17:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "28406:4:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "28412:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "28402:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28402:20:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "28376:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28376:47:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28376:47:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "28432:139:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "28566:4:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_54702dde2fcba02dc2fb39a69338ef316373b8f0d93345ef98921592a6d1400d_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "28440:124:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28440:131:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "28432:4:16"
>>>>>>> Stashed changes
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1951:22:16"
            },
<<<<<<< Updated upstream
            "returnParameters": {
              "id": 3381,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1974:0:16"
            },
            "scope": 3668,
            "src": "1940:83:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3445,
              "nodeType": "Block",
              "src": "3073:374:16",
=======
            "name": "abi_encode_tuple_t_stringliteral_54702dde2fcba02dc2fb39a69338ef316373b8f0d93345ef98921592a6d1400d__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "28310:9:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "28325:4:16",
                "type": ""
              }
            ],
            "src": "28159:419:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "28690:125:16",
>>>>>>> Stashed changes
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< Updated upstream
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3411,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3406,
                          "name": "_collectionAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3392,
                          "src": "3095:18:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3409,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3125:1:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3408,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3117:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3407,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3117:7:16",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3410,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3117:10:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3095:32:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520636f6c6c656374696f6e2061646472657373206e6565647320746f20626520646966666572656e742066726f6d207a65726f2e",
                        "id": 3412,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3128:57:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_75d51b7f4f784217631f4d90c02e688b32ba4b4faadf2799078ab0609aeff458",
                          "typeString": "literal_string \"The collection address needs to be different from zero.\""
                        },
                        "value": "The collection address needs to be different from zero."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_75d51b7f4f784217631f4d90c02e688b32ba4b4faadf2799078ab0609aeff458",
                          "typeString": "literal_string \"The collection address needs to be different from zero.\""
                        }
                      ],
                      "id": 3405,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3087:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3087:99:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3414,
                  "nodeType": "ExpressionStatement",
                  "src": "3087:99:16"
=======
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "28712:6:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "28720:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "28708:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28708:14:16"
                      },
                      {
                        "hexValue": "416e2061756374696f6e2068617320616c726561647920737461727465642066",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "28724:34:16",
                        "type": "",
                        "value": "An auction has already started f"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "28701:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28701:58:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28701:58:16"
>>>>>>> Stashed changes
                },
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< Updated upstream
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3416,
                          "name": "_firstOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3394,
                          "src": "3208:11:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3419,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3231:1:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3418,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3223:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3417,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3223:7:16",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3420,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3223:10:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3208:25:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520757365722061646472657373206e6565647320746f20626520646966666572656e742066726f6d207a65726f2e",
                        "id": 3422,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3234:51:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2ec7d52e022d4a512c31415dd9580c398033bd13d5d9ee290019f128926e073f",
                          "typeString": "literal_string \"The user address needs to be different from zero.\""
                        },
                        "value": "The user address needs to be different from zero."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2ec7d52e022d4a512c31415dd9580c398033bd13d5d9ee290019f128926e073f",
                          "typeString": "literal_string \"The user address needs to be different from zero.\""
                        }
                      ],
                      "id": 3415,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3200:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3200:86:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3424,
                  "nodeType": "ExpressionStatement",
                  "src": "3200:86:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3429,
                        "name": "_firstOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3394,
                        "src": "3346:11:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 3430,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3358:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3431,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3358:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3432,
                        "name": "_tokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3396,
                        "src": "3369:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 3433,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3398,
                        "src": "3379:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 3434,
                        "name": "_description",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3400,
                        "src": "3385:12:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 3435,
                        "name": "_tag",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3402,
                        "src": "3398:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 3438,
                            "name": "tokenCYON",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3361,
                            "src": "3411:9:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$4032",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$4032",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 3437,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3403:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3436,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3403:7:16",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3403:18:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 3440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3422:1:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 3441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3424:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 3442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3430:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 3426,
                            "name": "_collectionAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3392,
                            "src": "3318:18:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3425,
                          "name": "NFTCollections",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3954,
                          "src": "3303:14:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_NFTCollections_$3954_$",
                            "typeString": "type(contract NFTCollections)"
                          }
                        },
                        "id": 3427,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3303:34:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFTCollections_$3954",
                          "typeString": "contract NFTCollections"
                        }
                      },
                      "id": 3428,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "MintNFT",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3879,
                      "src": "3303:42:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_uint256_$_t_bool_$_t_bool_$returns$_t_uint256_$",
                        "typeString": "function (address,address,string memory,string memory,string memory,string memory,address,uint256,bool,bool) external returns (uint256)"
                      }
                    },
                    "id": 3443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3303:133:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3444,
                  "nodeType": "ExpressionStatement",
                  "src": "3303:133:16"
                }
              ]
            },
            "documentation": {
              "id": 3390,
              "nodeType": "StructuredDocumentation",
              "src": "2302:586:16",
              "text": "@notice This function allows to create NFTs inside a collection and mint it directly\n @dev Call this function when the user wants to create a new NFT and mint it to the given address\n @param _collectionAddress The address of the collection in which the NFT will be created/minted\n @param _firstOwner The destination address to which the NFT is minted\n @param _tokenURI The metadata through a link URI\n @param _name Name of the new NFT\n @param _description Description of the new NFT\n @param _tag Tag of the new NFT allowing filtering"
            },
            "functionSelector": "811ca7cf",
            "id": 3446,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createNFT",
            "nameLocation": "2902:9:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3403,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3392,
                  "mutability": "mutable",
                  "name": "_collectionAddress",
                  "nameLocation": "2920:18:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3446,
                  "src": "2912:26:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3391,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2912:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3394,
                  "mutability": "mutable",
                  "name": "_firstOwner",
                  "nameLocation": "2948:11:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3446,
                  "src": "2940:19:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3393,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2940:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
=======
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "28780:6:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "28788:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "28776:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28776:15:16"
                      },
                      {
                        "hexValue": "6f722074686973204e46542e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "28793:14:16",
                        "type": "",
                        "value": "or this NFT."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "28769:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28769:39:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28769:39:16"
                }
              ]
            },
            "name": "store_literal_in_memory_8a94a0eb38503ba28009a528bd20a18e293fd97737506e6e2e140a4a1602d00a",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "28682:6:16",
                "type": ""
              }
            ],
            "src": "28584:231:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "28967:220:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "28977:74:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "29043:3:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "29048:2:16",
                        "type": "",
                        "value": "44"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "28984:58:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28984:67:16"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "28977:3:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "29149:3:16"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_8a94a0eb38503ba28009a528bd20a18e293fd97737506e6e2e140a4a1602d00a",
                      "nodeType": "YulIdentifier",
                      "src": "29060:88:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29060:93:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "29060:93:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "29162:19:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "29173:3:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "29178:2:16",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "29169:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29169:12:16"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "29162:3:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_8a94a0eb38503ba28009a528bd20a18e293fd97737506e6e2e140a4a1602d00a_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "28955:3:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "28963:3:16",
                "type": ""
              }
            ],
            "src": "28821:366:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "29364:248:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "29374:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "29386:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "29397:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "29382:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29382:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "29374:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "29421:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "29432:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "29417:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29417:17:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "29440:4:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "29446:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "29436:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29436:20:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "29410:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29410:47:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "29410:47:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "29466:139:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "29600:4:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_8a94a0eb38503ba28009a528bd20a18e293fd97737506e6e2e140a4a1602d00a_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "29474:124:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29474:131:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "29466:4:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8a94a0eb38503ba28009a528bd20a18e293fd97737506e6e2e140a4a1602d00a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "29344:9:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "29359:4:16",
                "type": ""
              }
            ],
            "src": "29193:419:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "29724:123:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "29746:6:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "29754:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "29742:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29742:14:16"
                      },
                      {
                        "hexValue": "506c6561736520646566696e6520616e2061756374696f6e2068696768657220",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "29758:34:16",
                        "type": "",
                        "value": "Please define an auction higher "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "29735:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29735:58:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "29735:58:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "29814:6:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "29822:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "29810:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29810:15:16"
                      },
                      {
                        "hexValue": "7468616e207a65726f2e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "29827:12:16",
                        "type": "",
                        "value": "than zero."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "29803:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29803:37:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "29803:37:16"
                }
              ]
            },
            "name": "store_literal_in_memory_2be4c66a0a8402e5a8c2b19644e62a846859ad218ddc26fe72aabdd7e5a25614",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "29716:6:16",
                "type": ""
              }
            ],
            "src": "29618:229:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "29999:220:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "30009:74:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "30075:3:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "30080:2:16",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "30016:58:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30016:67:16"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "30009:3:16"
>>>>>>> Stashed changes
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3396,
                  "mutability": "mutable",
                  "name": "_tokenURI",
                  "nameLocation": "2975:9:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3446,
                  "src": "2961:23:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3395,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2961:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3398,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "3000:5:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3446,
                  "src": "2986:19:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3397,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2986:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3400,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "3030:12:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3446,
                  "src": "3016:26:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3399,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3016:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3402,
                  "mutability": "mutable",
                  "name": "_tag",
                  "nameLocation": "3058:4:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3446,
                  "src": "3044:18:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3401,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3044:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2911:152:16"
            },
            "returnParameters": {
              "id": 3404,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3073:0:16"
            },
            "scope": 3668,
            "src": "2893:554:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3511,
              "nodeType": "Block",
              "src": "3870:751:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< Updated upstream
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3457,
                          "name": "_collectionAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3449,
                          "src": "3888:18:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3460,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3918:1:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3459,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3910:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3458,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3910:7:16",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3461,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3910:10:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3888:32:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520636f6c6c656374696f6e2061646472657373206e6565647320746f20626520646966666572656e742066726f6d207a65726f2e",
                        "id": 3463,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3921:57:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_75d51b7f4f784217631f4d90c02e688b32ba4b4faadf2799078ab0609aeff458",
                          "typeString": "literal_string \"The collection address needs to be different from zero.\""
                        },
                        "value": "The collection address needs to be different from zero."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_75d51b7f4f784217631f4d90c02e688b32ba4b4faadf2799078ab0609aeff458",
                          "typeString": "literal_string \"The collection address needs to be different from zero.\""
                        }
                      ],
                      "id": 3456,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3880:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3880:99:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3465,
                  "nodeType": "ExpressionStatement",
                  "src": "3880:99:16"
=======
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "30181:3:16"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_2be4c66a0a8402e5a8c2b19644e62a846859ad218ddc26fe72aabdd7e5a25614",
                      "nodeType": "YulIdentifier",
                      "src": "30092:88:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30092:93:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "30092:93:16"
>>>>>>> Stashed changes
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "30194:19:16",
                  "value": {
                    "arguments": [
                      {
<<<<<<< Updated upstream
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 3479,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3473,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3467,
                                "name": "_tokenID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3451,
                                "src": "4049:8:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 3469,
                                        "name": "_collectionAddress",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3449,
                                        "src": "4076:18:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 3468,
                                      "name": "NFTCollections",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3954,
                                      "src": "4061:14:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_NFTCollections_$3954_$",
                                        "typeString": "type(contract NFTCollections)"
                                      }
                                    },
                                    "id": 3470,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4061:34:16",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_NFTCollections_$3954",
                                      "typeString": "contract NFTCollections"
                                    }
                                  },
                                  "id": 3471,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "getTotalSupply",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3953,
                                  "src": "4061:49:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                    "typeString": "function () view external returns (uint256)"
                                  }
                                },
                                "id": 3472,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4061:51:16",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4049:63:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 3474,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "4048:65:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3477,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3475,
                                "name": "_tokenID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3451,
                                "src": "4118:8:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 3476,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4129:1:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "4118:12:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 3478,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "4117:14:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4048:83:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468697320746f6b656e20494420646f6573206e6f742065786973742e",
                        "id": 3480,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4133:31:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3560abc763ffb7960cf5b3b423463cddda9049a7ba8f6add1f51e3df44d662ec",
                          "typeString": "literal_string \"This token ID does not exist.\""
                        },
                        "value": "This token ID does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3560abc763ffb7960cf5b3b423463cddda9049a7ba8f6add1f51e3df44d662ec",
                          "typeString": "literal_string \"This token ID does not exist.\""
                        }
                      ],
                      "id": 3466,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4040:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4040:125:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3482,
                  "nodeType": "ExpressionStatement",
                  "src": "4040:125:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3492,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 3488,
                              "name": "_tokenID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3451,
                              "src": "4264:8:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 3485,
                                  "name": "_collectionAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3449,
                                  "src": "4236:18:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 3484,
                                "name": "NFTCollections",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3954,
                                "src": "4221:14:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_NFTCollections_$3954_$",
                                  "typeString": "type(contract NFTCollections)"
                                }
                              },
                              "id": 3486,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4221:34:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_NFTCollections_$3954",
                                "typeString": "contract NFTCollections"
                              }
                            },
                            "id": 3487,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 834,
                            "src": "4221:42:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 3489,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4221:52:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 3490,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4277:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3491,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4277:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4221:66:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686973204e465420646f6573206e6f742062656c6f6e6720746f207468652063757272656e74206d6573736167652073656e6465722e",
                        "id": 3493,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4288:57:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bd03a8d87c70fb34480c591cf12a6a899128bca11952a84818f1acd30d41f66a",
                          "typeString": "literal_string \"This NFT does not belong to the current message sender.\""
                        },
                        "value": "This NFT does not belong to the current message sender."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bd03a8d87c70fb34480c591cf12a6a899128bca11952a84818f1acd30d41f66a",
                          "typeString": "literal_string \"This NFT does not belong to the current message sender.\""
                        }
                      ],
                      "id": 3483,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4213:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4213:133:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3495,
                  "nodeType": "ExpressionStatement",
                  "src": "4213:133:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3499,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3497,
                          "name": "_price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3453,
                          "src": "4408:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 3498,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4417:1:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4408:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506c6561736520646566696e6520612073656c6c696e6720707269636520686967686572207468616e207a65726f2e",
                        "id": 3500,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4419:49:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b9ebebcb369b061f0ded2abc03dd5c1efcd60e09dffde1f0eed07a42693c8f81",
                          "typeString": "literal_string \"Please define a selling price higher than zero.\""
                        },
                        "value": "Please define a selling price higher than zero."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b9ebebcb369b061f0ded2abc03dd5c1efcd60e09dffde1f0eed07a42693c8f81",
                          "typeString": "literal_string \"Please define a selling price higher than zero.\""
                        }
                      ],
                      "id": 3496,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4400:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4400:69:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3502,
                  "nodeType": "ExpressionStatement",
                  "src": "4400:69:16"
=======
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "30205:3:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "30210:2:16",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "30201:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30201:12:16"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "30194:3:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_2be4c66a0a8402e5a8c2b19644e62a846859ad218ddc26fe72aabdd7e5a25614_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "29987:3:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "29995:3:16",
                "type": ""
              }
            ],
            "src": "29853:366:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "30396:248:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "30406:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "30418:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "30429:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "30414:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30414:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "30406:4:16"
                    }
                  ]
>>>>>>> Stashed changes
                },
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< Updated upstream
                        "id": 3507,
                        "name": "_tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3451,
                        "src": "4598:8:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3508,
                        "name": "_price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3453,
                        "src": "4607:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 3504,
                            "name": "_collectionAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3449,
                            "src": "4569:18:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3503,
                          "name": "NFTCollections",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3954,
                          "src": "4554:14:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_NFTCollections_$3954_$",
                            "typeString": "type(contract NFTCollections)"
                          }
                        },
                        "id": 3505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4554:34:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFTCollections_$3954",
                          "typeString": "contract NFTCollections"
                        }
                      },
                      "id": 3506,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setPrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3909,
                      "src": "4554:43:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) external"
                      }
                    },
                    "id": 3509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4554:60:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3510,
                  "nodeType": "ExpressionStatement",
                  "src": "4554:60:16"
                }
              ]
            },
            "documentation": {
              "id": 3447,
              "nodeType": "StructuredDocumentation",
              "src": "3454:319:16",
              "text": "@notice This function allows to set the price of the given NFT\n @dev Call this function when a sale is initiated\n @param _collectionAddress The address of the collection of the NFT to set the price\n @param _tokenID The token ID of the NFT to set the price\n @param _price The price to set"
            },
            "functionSelector": "28d4ae0f",
            "id": 3512,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setNewPrice",
            "nameLocation": "3787:11:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3454,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3449,
                  "mutability": "mutable",
                  "name": "_collectionAddress",
                  "nameLocation": "3807:18:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3512,
                  "src": "3799:26:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3448,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3799:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3451,
                  "mutability": "mutable",
                  "name": "_tokenID",
                  "nameLocation": "3835:8:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3512,
                  "src": "3827:16:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3450,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3827:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3453,
                  "mutability": "mutable",
                  "name": "_price",
                  "nameLocation": "3853:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3512,
                  "src": "3845:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3452,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3845:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3798:62:16"
            },
            "returnParameters": {
              "id": 3455,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3870:0:16"
            },
            "scope": 3668,
            "src": "3778:843:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3630,
              "nodeType": "Block",
              "src": "5044:1382:16",
              "statements": [
                {
=======
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "30453:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "30464:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "30449:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "30449:17:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "30472:4:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "30478:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "30468:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "30468:20:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "30442:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30442:47:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "30442:47:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "30498:139:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "30632:4:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_2be4c66a0a8402e5a8c2b19644e62a846859ad218ddc26fe72aabdd7e5a25614_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "30506:124:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30506:131:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "30498:4:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_2be4c66a0a8402e5a8c2b19644e62a846859ad218ddc26fe72aabdd7e5a25614__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "30376:9:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "30391:4:16",
                "type": ""
              }
            ],
            "src": "30225:419:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "30678:152:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "30695:1:16",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "30698:77:16",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "30688:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30688:88:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "30688:88:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "30792:1:16",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "30795:4:16",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "30785:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30785:15:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "30785:15:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "30816:1:16",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "30819:4:16",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "30809:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30809:15:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "30809:15:16"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "30650:180:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "30880:261:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "30890:25:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "30913:1:16"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "30895:17:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30895:20:16"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "30890:1:16"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "30924:25:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "30947:1:16"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "30929:17:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30929:20:16"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "30924:1:16"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "31087:22:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "31089:16:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "31089:18:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "31089:18:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "31008:1:16"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "31015:66:16",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "31083:1:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "31011:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "31011:74:16"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "31005:2:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "31005:81:16"
                  },
                  "nodeType": "YulIf",
                  "src": "31002:107:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "31119:16:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "31130:1:16"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "31133:1:16"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "31126:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "31126:9:16"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "31119:3:16"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "30867:1:16",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "30870:1:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "30876:3:16",
                "type": ""
              }
            ],
            "src": "30836:305:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "31301:288:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "31311:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "31323:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "31334:2:16",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "31319:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "31319:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "31311:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "31391:6:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "31404:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "31415:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "31400:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "31400:17:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "31347:43:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "31347:71:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "31347:71:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "31472:6:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "31485:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "31496:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "31481:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "31481:18:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "31428:43:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "31428:72:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "31428:72:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "31554:6:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "31567:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "31578:2:16",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "31563:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "31563:18:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "31510:43:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "31510:72:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "31510:72:16"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "31257:9:16",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "31269:6:16",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "31277:6:16",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "31285:6:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "31296:4:16",
                "type": ""
              }
            ],
            "src": "31147:442:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "31701:74:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "31723:6:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "31731:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "31719:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "31719:14:16"
                      },
                      {
                        "hexValue": "5468652061756374696f6e2068617320616c726561647920656e6465642e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "31735:32:16",
                        "type": "",
                        "value": "The auction has already ended."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "31712:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "31712:56:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "31712:56:16"
                }
              ]
            },
            "name": "store_literal_in_memory_e9f3da8375fea24efd9d8a688570028774acf8a4008e7c4b38411b770c6da437",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "31693:6:16",
                "type": ""
              }
            ],
            "src": "31595:180:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "31927:220:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "31937:74:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "32003:3:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "32008:2:16",
                        "type": "",
                        "value": "30"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "31944:58:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "31944:67:16"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "31937:3:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "32109:3:16"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_e9f3da8375fea24efd9d8a688570028774acf8a4008e7c4b38411b770c6da437",
                      "nodeType": "YulIdentifier",
                      "src": "32020:88:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "32020:93:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "32020:93:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "32122:19:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "32133:3:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "32138:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "32129:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "32129:12:16"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "32122:3:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_e9f3da8375fea24efd9d8a688570028774acf8a4008e7c4b38411b770c6da437_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "31915:3:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "31923:3:16",
                "type": ""
              }
            ],
            "src": "31781:366:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "32324:248:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "32334:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "32346:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "32357:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "32342:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "32342:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "32334:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "32381:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "32392:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "32377:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "32377:17:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "32400:4:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "32406:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "32396:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "32396:20:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "32370:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "32370:47:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "32370:47:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "32426:139:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "32560:4:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_e9f3da8375fea24efd9d8a688570028774acf8a4008e7c4b38411b770c6da437_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "32434:124:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "32434:131:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "32426:4:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e9f3da8375fea24efd9d8a688570028774acf8a4008e7c4b38411b770c6da437__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "32304:9:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "32319:4:16",
                "type": ""
              }
            ],
            "src": "32153:419:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "32684:130:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "32706:6:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "32714:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "32702:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "32702:14:16"
                      },
                      {
                        "hexValue": "546869732061756374696f6e20616368696576656420746865206d6178696d75",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "32718:34:16",
                        "type": "",
                        "value": "This auction achieved the maximu"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "32695:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "32695:58:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "32695:58:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "32774:6:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "32782:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "32770:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "32770:15:16"
                      },
                      {
                        "hexValue": "6d20616d6f756e74206f6620626964732e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "32787:19:16",
                        "type": "",
                        "value": "m amount of bids."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "32763:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "32763:44:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "32763:44:16"
                }
              ]
            },
            "name": "store_literal_in_memory_b3e36e01c3527a0f0d8dcab377fe62a2cea2566c15108f41580a93a25242ff2f",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "32676:6:16",
                "type": ""
              }
            ],
            "src": "32578:236:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "32966:220:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "32976:74:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "33042:3:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "33047:2:16",
                        "type": "",
                        "value": "49"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "32983:58:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "32983:67:16"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "32976:3:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "33148:3:16"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_b3e36e01c3527a0f0d8dcab377fe62a2cea2566c15108f41580a93a25242ff2f",
                      "nodeType": "YulIdentifier",
                      "src": "33059:88:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "33059:93:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "33059:93:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "33161:19:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "33172:3:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "33177:2:16",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "33168:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "33168:12:16"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "33161:3:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_b3e36e01c3527a0f0d8dcab377fe62a2cea2566c15108f41580a93a25242ff2f_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "32954:3:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "32962:3:16",
                "type": ""
              }
            ],
            "src": "32820:366:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "33363:248:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "33373:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "33385:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "33396:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "33381:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "33381:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "33373:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "33420:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "33431:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "33416:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "33416:17:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "33439:4:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "33445:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "33435:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "33435:20:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "33409:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "33409:47:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "33409:47:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "33465:139:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "33599:4:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_b3e36e01c3527a0f0d8dcab377fe62a2cea2566c15108f41580a93a25242ff2f_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "33473:124:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "33473:131:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "33465:4:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b3e36e01c3527a0f0d8dcab377fe62a2cea2566c15108f41580a93a25242ff2f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "33343:9:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "33358:4:16",
                "type": ""
              }
            ],
            "src": "33192:419:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "33723:63:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "33745:6:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "33753:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "33741:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "33741:14:16"
                      },
                      {
                        "hexValue": "5468652062696420697320746f6f206c6f772e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "33757:21:16",
                        "type": "",
                        "value": "The bid is too low."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "33734:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "33734:45:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "33734:45:16"
                }
              ]
            },
            "name": "store_literal_in_memory_b568870c2a39b7e1009fb5b9aee119bd742bf27a280f6130a3761fd8cf6c7d28",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "33715:6:16",
                "type": ""
              }
            ],
            "src": "33617:169:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "33938:220:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "33948:74:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "34014:3:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "34019:2:16",
                        "type": "",
                        "value": "19"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "33955:58:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "33955:67:16"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "33948:3:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "34120:3:16"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_b568870c2a39b7e1009fb5b9aee119bd742bf27a280f6130a3761fd8cf6c7d28",
                      "nodeType": "YulIdentifier",
                      "src": "34031:88:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "34031:93:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "34031:93:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "34133:19:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "34144:3:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "34149:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "34140:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "34140:12:16"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "34133:3:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_b568870c2a39b7e1009fb5b9aee119bd742bf27a280f6130a3761fd8cf6c7d28_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "33926:3:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "33934:3:16",
                "type": ""
              }
            ],
            "src": "33792:366:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "34335:248:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "34345:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "34357:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "34368:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "34353:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "34353:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "34345:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "34392:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "34403:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "34388:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "34388:17:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "34411:4:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "34417:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "34407:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "34407:20:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "34381:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "34381:47:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "34381:47:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "34437:139:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "34571:4:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_b568870c2a39b7e1009fb5b9aee119bd742bf27a280f6130a3761fd8cf6c7d28_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "34445:124:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "34445:131:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "34437:4:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b568870c2a39b7e1009fb5b9aee119bd742bf27a280f6130a3761fd8cf6c7d28__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "34315:9:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "34330:4:16",
                "type": ""
              }
            ],
            "src": "34164:419:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "34771:371:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "34781:27:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "34793:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "34804:3:16",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "34789:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "34789:19:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "34781:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "34862:6:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "34875:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "34886:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "34871:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "34871:17:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "34818:43:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "34818:71:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "34818:71:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "34943:6:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "34956:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "34967:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "34952:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "34952:18:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "34899:43:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "34899:72:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "34899:72:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "35025:6:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "35038:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "35049:2:16",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "35034:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "35034:18:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "34981:43:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "34981:72:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "34981:72:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "35107:6:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "35120:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "35131:2:16",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "35116:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "35116:18:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "35063:43:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "35063:72:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "35063:72:16"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256_t_address_t_uint256__to_t_address_t_uint256_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "34719:9:16",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "34731:6:16",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "34739:6:16",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "34747:6:16",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "34755:6:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "34766:4:16",
                "type": ""
              }
            ],
            "src": "34589:553:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "35254:130:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "35276:6:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "35284:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "35272:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "35272:14:16"
                      },
                      {
                        "hexValue": "54686520757365722061646472657373206e6565647320746f20626520646966",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "35288:34:16",
                        "type": "",
                        "value": "The user address needs to be dif"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "35265:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "35265:58:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "35265:58:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "35344:6:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "35352:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "35340:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "35340:15:16"
                      },
                      {
                        "hexValue": "666572656e742066726f6d207a65726f2e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "35357:19:16",
                        "type": "",
                        "value": "ferent from zero."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "35333:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "35333:44:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "35333:44:16"
                }
              ]
            },
            "name": "store_literal_in_memory_2ec7d52e022d4a512c31415dd9580c398033bd13d5d9ee290019f128926e073f",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "35246:6:16",
                "type": ""
              }
            ],
            "src": "35148:236:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "35536:220:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "35546:74:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "35612:3:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "35617:2:16",
                        "type": "",
                        "value": "49"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "35553:58:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "35553:67:16"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "35546:3:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "35718:3:16"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_2ec7d52e022d4a512c31415dd9580c398033bd13d5d9ee290019f128926e073f",
                      "nodeType": "YulIdentifier",
                      "src": "35629:88:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "35629:93:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "35629:93:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "35731:19:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "35742:3:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "35747:2:16",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "35738:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "35738:12:16"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "35731:3:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_2ec7d52e022d4a512c31415dd9580c398033bd13d5d9ee290019f128926e073f_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "35524:3:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "35532:3:16",
                "type": ""
              }
            ],
            "src": "35390:366:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "35933:248:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "35943:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "35955:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "35966:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "35951:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "35951:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "35943:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "35990:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "36001:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "35986:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "35986:17:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "36009:4:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "36015:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "36005:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "36005:20:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "35979:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "35979:47:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "35979:47:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "36035:139:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "36169:4:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_2ec7d52e022d4a512c31415dd9580c398033bd13d5d9ee290019f128926e073f_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "36043:124:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "36043:131:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "36035:4:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_2ec7d52e022d4a512c31415dd9580c398033bd13d5d9ee290019f128926e073f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "35913:9:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "35928:4:16",
                "type": ""
              }
            ],
            "src": "35762:419:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "36613:1149:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "36623:27:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "36635:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "36646:3:16",
                        "type": "",
                        "value": "320"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "36631:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "36631:19:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "36623:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "36704:6:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "36717:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "36728:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "36713:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "36713:17:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "36660:43:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "36660:71:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "36660:71:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "36785:6:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "36798:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "36809:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "36794:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "36794:18:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "36741:43:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "36741:72:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "36741:72:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "36834:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "36845:2:16",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "36830:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "36830:18:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "36854:4:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "36860:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "36850:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "36850:20:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "36823:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "36823:48:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "36823:48:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "36880:86:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "36952:6:16"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "36961:4:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "36888:63:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "36888:78:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "36880:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "36987:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "36998:2:16",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "36983:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "36983:18:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "37007:4:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "37013:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "37003:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "37003:20:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "36976:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "36976:48:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "36976:48:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "37033:86:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "37105:6:16"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "37114:4:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "37041:63:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "37041:78:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "37033:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "37140:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "37151:3:16",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "37136:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "37136:19:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "37161:4:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "37167:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "37157:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "37157:20:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "37129:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "37129:49:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "37129:49:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "37187:86:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "37259:6:16"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "37268:4:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "37195:63:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "37195:78:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "37187:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "37294:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "37305:3:16",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "37290:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "37290:19:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "37315:4:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "37321:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "37311:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "37311:20:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "37283:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "37283:49:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "37283:49:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "37341:86:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "value5",
                        "nodeType": "YulIdentifier",
                        "src": "37413:6:16"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "37422:4:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "37349:63:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "37349:78:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "37341:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value6",
                        "nodeType": "YulIdentifier",
                        "src": "37481:6:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "37494:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "37505:3:16",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "37490:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "37490:19:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "37437:43:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "37437:73:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "37437:73:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value7",
                        "nodeType": "YulIdentifier",
                        "src": "37572:6:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "37585:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "37596:3:16",
                            "type": "",
                            "value": "224"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "37581:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "37581:19:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "37520:51:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "37520:81:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "37520:81:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value8",
                        "nodeType": "YulIdentifier",
                        "src": "37649:6:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "37662:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "37673:3:16",
                            "type": "",
                            "value": "256"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "37658:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "37658:19:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "37611:37:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "37611:67:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "37611:67:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value9",
                        "nodeType": "YulIdentifier",
                        "src": "37726:6:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "37739:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "37750:3:16",
                            "type": "",
                            "value": "288"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "37735:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "37735:19:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "37688:37:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "37688:67:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "37688:67:16"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_address_t_rational_0_by_1_t_bool_t_bool__to_t_address_t_address_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_address_t_uint256_t_bool_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "36513:9:16",
                "type": ""
              },
              {
                "name": "value9",
                "nodeType": "YulTypedName",
                "src": "36525:6:16",
                "type": ""
              },
              {
                "name": "value8",
                "nodeType": "YulTypedName",
                "src": "36533:6:16",
                "type": ""
              },
              {
                "name": "value7",
                "nodeType": "YulTypedName",
                "src": "36541:6:16",
                "type": ""
              },
              {
                "name": "value6",
                "nodeType": "YulTypedName",
                "src": "36549:6:16",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "36557:6:16",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "36565:6:16",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "36573:6:16",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "36581:6:16",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "36589:6:16",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "36597:6:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "36608:4:16",
                "type": ""
              }
            ],
            "src": "36187:1575:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "37874:69:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "37896:6:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "37904:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "37892:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "37892:14:16"
                      },
                      {
                        "hexValue": "54686973204e4654206973206e6f7420666f722073616c652e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "37908:27:16",
                        "type": "",
                        "value": "This NFT is not for sale."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "37885:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "37885:51:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "37885:51:16"
                }
              ]
            },
            "name": "store_literal_in_memory_795e888268ddf9337f106a3868637d7c62055ce14f5dda1abe76d3564d875fc2",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "37866:6:16",
                "type": ""
              }
            ],
            "src": "37768:175:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "38095:220:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "38105:74:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "38171:3:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "38176:2:16",
                        "type": "",
                        "value": "25"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "38112:58:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "38112:67:16"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "38105:3:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "38277:3:16"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_795e888268ddf9337f106a3868637d7c62055ce14f5dda1abe76d3564d875fc2",
                      "nodeType": "YulIdentifier",
                      "src": "38188:88:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "38188:93:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "38188:93:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "38290:19:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "38301:3:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "38306:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "38297:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "38297:12:16"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "38290:3:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_795e888268ddf9337f106a3868637d7c62055ce14f5dda1abe76d3564d875fc2_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "38083:3:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "38091:3:16",
                "type": ""
              }
            ],
            "src": "37949:366:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "38492:248:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "38502:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "38514:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "38525:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "38510:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "38510:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "38502:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "38549:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "38560:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "38545:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "38545:17:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "38568:4:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "38574:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "38564:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "38564:20:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "38538:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "38538:47:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "38538:47:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "38594:139:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "38728:4:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_795e888268ddf9337f106a3868637d7c62055ce14f5dda1abe76d3564d875fc2_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "38602:124:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "38602:131:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "38594:4:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_795e888268ddf9337f106a3868637d7c62055ce14f5dda1abe76d3564d875fc2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "38472:9:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "38487:4:16",
                "type": ""
              }
            ],
            "src": "38321:419:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "38872:206:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "38882:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "38894:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "38905:2:16",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "38890:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "38890:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "38882:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "38962:6:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "38975:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "38986:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "38971:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "38971:17:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "38918:43:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "38918:71:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "38918:71:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "39043:6:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "39056:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "39067:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "39052:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "39052:18:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "38999:43:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "38999:72:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "38999:72:16"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "38836:9:16",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "38848:6:16",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "38856:6:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "38867:4:16",
                "type": ""
              }
            ],
            "src": "38746:332:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "39190:73:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "39212:6:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "39220:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "39208:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "39208:14:16"
                      },
                      {
                        "hexValue": "43594f4e20746f6b656e20616c6c6f77616e636520746f6f206c6f772e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "39224:31:16",
                        "type": "",
                        "value": "CYON token allowance too low."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "39201:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "39201:55:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "39201:55:16"
                }
              ]
            },
            "name": "store_literal_in_memory_ad8e9a422fe1279413cfad79198ac5655e066c8f7548850b9f2131c6ae0aa8bd",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "39182:6:16",
                "type": ""
              }
            ],
            "src": "39084:179:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "39415:220:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "39425:74:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "39491:3:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "39496:2:16",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "39432:58:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "39432:67:16"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "39425:3:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "39597:3:16"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_ad8e9a422fe1279413cfad79198ac5655e066c8f7548850b9f2131c6ae0aa8bd",
                      "nodeType": "YulIdentifier",
                      "src": "39508:88:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "39508:93:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "39508:93:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "39610:19:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "39621:3:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "39626:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "39617:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "39617:12:16"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "39610:3:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_ad8e9a422fe1279413cfad79198ac5655e066c8f7548850b9f2131c6ae0aa8bd_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "39403:3:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "39411:3:16",
                "type": ""
              }
            ],
            "src": "39269:366:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "39812:248:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "39822:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "39834:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "39845:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "39830:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "39830:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "39822:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "39869:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "39880:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "39865:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "39865:17:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "39888:4:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "39894:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "39884:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "39884:20:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "39858:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "39858:47:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "39858:47:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "39914:139:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "40048:4:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_ad8e9a422fe1279413cfad79198ac5655e066c8f7548850b9f2131c6ae0aa8bd_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "39922:124:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "39922:131:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "39914:4:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ad8e9a422fe1279413cfad79198ac5655e066c8f7548850b9f2131c6ae0aa8bd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "39792:9:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "39807:4:16",
                "type": ""
              }
            ],
            "src": "39641:419:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "40172:118:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "40194:6:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "40202:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "40190:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "40190:14:16"
                      },
                      {
                        "hexValue": "4661696c656420746f2073656e642043594f4e20746f20746865204e4654206f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "40206:34:16",
                        "type": "",
                        "value": "Failed to send CYON to the NFT o"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "40183:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "40183:58:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "40183:58:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "40262:6:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "40270:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "40258:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "40258:15:16"
                      },
                      {
                        "hexValue": "776e65722e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "40275:7:16",
                        "type": "",
                        "value": "wner."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "40251:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "40251:32:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "40251:32:16"
                }
              ]
            },
            "name": "store_literal_in_memory_604f2a465e5da2d3944668dd2853b95589c33b45bfa6f32de952c6982edd2c10",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40164:6:16",
                "type": ""
              }
            ],
            "src": "40066:224:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "40442:220:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "40452:74:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "40518:3:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "40523:2:16",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "40459:58:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "40459:67:16"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "40452:3:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "40624:3:16"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_604f2a465e5da2d3944668dd2853b95589c33b45bfa6f32de952c6982edd2c10",
                      "nodeType": "YulIdentifier",
                      "src": "40535:88:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "40535:93:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "40535:93:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "40637:19:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "40648:3:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "40653:2:16",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "40644:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "40644:12:16"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "40637:3:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_604f2a465e5da2d3944668dd2853b95589c33b45bfa6f32de952c6982edd2c10_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "40430:3:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "40438:3:16",
                "type": ""
              }
            ],
            "src": "40296:366:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "40839:248:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "40849:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "40861:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "40872:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "40857:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "40857:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "40849:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "40896:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "40907:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "40892:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "40892:17:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "40915:4:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "40921:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "40911:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "40911:20:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "40885:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "40885:47:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "40885:47:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "40941:139:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "41075:4:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_604f2a465e5da2d3944668dd2853b95589c33b45bfa6f32de952c6982edd2c10_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "40949:124:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "40949:131:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "40941:4:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_604f2a465e5da2d3944668dd2853b95589c33b45bfa6f32de952c6982edd2c10__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "40819:9:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "40834:4:16",
                "type": ""
              }
            ],
            "src": "40668:419:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "41199:73:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "41221:6:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "41229:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "41217:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "41217:14:16"
                      },
                      {
                        "hexValue": "54686973204e465420697320616c726561647920666f722073616c652e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "41233:31:16",
                        "type": "",
                        "value": "This NFT is already for sale."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "41210:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "41210:55:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "41210:55:16"
                }
              ]
            },
            "name": "store_literal_in_memory_52817f8b2682fbd43b92d8b9dd8f6a19b4c843251d62615ed2ec9bdfd033d401",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "41191:6:16",
                "type": ""
              }
            ],
            "src": "41093:179:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "41424:220:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "41434:74:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "41500:3:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "41505:2:16",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "41441:58:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "41441:67:16"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "41434:3:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "41606:3:16"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_52817f8b2682fbd43b92d8b9dd8f6a19b4c843251d62615ed2ec9bdfd033d401",
                      "nodeType": "YulIdentifier",
                      "src": "41517:88:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "41517:93:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "41517:93:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "41619:19:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "41630:3:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "41635:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "41626:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "41626:12:16"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "41619:3:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_52817f8b2682fbd43b92d8b9dd8f6a19b4c843251d62615ed2ec9bdfd033d401_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "41412:3:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "41420:3:16",
                "type": ""
              }
            ],
            "src": "41278:366:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "41821:248:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "41831:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "41843:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "41854:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "41839:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "41839:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "41831:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "41878:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "41889:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "41874:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "41874:17:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "41897:4:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "41903:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "41893:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "41893:20:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "41867:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "41867:47:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "41867:47:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "41923:139:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "42057:4:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_52817f8b2682fbd43b92d8b9dd8f6a19b4c843251d62615ed2ec9bdfd033d401_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "41931:124:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "41931:131:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "41923:4:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_52817f8b2682fbd43b92d8b9dd8f6a19b4c843251d62615ed2ec9bdfd033d401__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "41801:9:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "41816:4:16",
                "type": ""
              }
            ],
            "src": "41650:419:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "42120:146:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "42130:25:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "42153:1:16"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "42135:17:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "42135:20:16"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "42130:1:16"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "42164:25:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "42187:1:16"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "42169:17:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "42169:20:16"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "42164:1:16"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "42211:22:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "42213:16:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "42213:18:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "42213:18:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "42205:1:16"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "42208:1:16"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "42202:2:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "42202:8:16"
                  },
                  "nodeType": "YulIf",
                  "src": "42199:34:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "42243:17:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "42255:1:16"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "42258:1:16"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "42251:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "42251:9:16"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "42243:4:16"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "42106:1:16",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "42109:1:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "42115:4:16",
                "type": ""
              }
            ],
            "src": "42075:191:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "42300:152:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "42317:1:16",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "42320:77:16",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "42310:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "42310:88:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "42310:88:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "42414:1:16",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "42417:4:16",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "42407:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "42407:15:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "42407:15:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "42438:1:16",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "42441:4:16",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "42431:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "42431:15:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "42431:15:16"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "42272:180:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "42501:128:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "42511:33:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "42538:5:16"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "42520:17:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "42520:24:16"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "42511:5:16"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "42572:22:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "42574:16:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "42574:18:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "42574:18:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "42559:5:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "42566:4:16",
                        "type": "",
                        "value": "0x00"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "42556:2:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "42556:15:16"
                  },
                  "nodeType": "YulIf",
                  "src": "42553:41:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "42603:20:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "42614:5:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "42621:1:16",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "42610:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "42610:13:16"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "42603:3:16"
                    }
                  ]
                }
              ]
            },
            "name": "decrement_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "42487:5:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "42497:3:16",
                "type": ""
              }
            ],
            "src": "42458:171:16"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$77_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$77_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 160))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value5 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_75d51b7f4f784217631f4d90c02e688b32ba4b4faadf2799078ab0609aeff458(memPtr) {\n\n        mstore(add(memPtr, 0), \"The collection address needs to \")\n\n        mstore(add(memPtr, 32), \"be different from zero.\")\n\n    }\n\n    function abi_encode_t_stringliteral_75d51b7f4f784217631f4d90c02e688b32ba4b4faadf2799078ab0609aeff458_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 55)\n        store_literal_in_memory_75d51b7f4f784217631f4d90c02e688b32ba4b4faadf2799078ab0609aeff458(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_75d51b7f4f784217631f4d90c02e688b32ba4b4faadf2799078ab0609aeff458__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_75d51b7f4f784217631f4d90c02e688b32ba4b4faadf2799078ab0609aeff458_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_249c9a1e474a0c842afe62f50e173a3d189009824d168304fa12f2538493206d(memPtr) {\n\n        mstore(add(memPtr, 0), \"There is no auction started for \")\n\n        mstore(add(memPtr, 32), \"this NFT.\")\n\n    }\n\n    function abi_encode_t_stringliteral_249c9a1e474a0c842afe62f50e173a3d189009824d168304fa12f2538493206d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_249c9a1e474a0c842afe62f50e173a3d189009824d168304fa12f2538493206d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_249c9a1e474a0c842afe62f50e173a3d189009824d168304fa12f2538493206d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_249c9a1e474a0c842afe62f50e173a3d189009824d168304fa12f2538493206d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_bd03a8d87c70fb34480c591cf12a6a899128bca11952a84818f1acd30d41f66a(memPtr) {\n\n        mstore(add(memPtr, 0), \"This NFT does not belong to the \")\n\n        mstore(add(memPtr, 32), \"current message sender.\")\n\n    }\n\n    function abi_encode_t_stringliteral_bd03a8d87c70fb34480c591cf12a6a899128bca11952a84818f1acd30d41f66a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 55)\n        store_literal_in_memory_bd03a8d87c70fb34480c591cf12a6a899128bca11952a84818f1acd30d41f66a(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_bd03a8d87c70fb34480c591cf12a6a899128bca11952a84818f1acd30d41f66a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bd03a8d87c70fb34480c591cf12a6a899128bca11952a84818f1acd30d41f66a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b9ebebcb369b061f0ded2abc03dd5c1efcd60e09dffde1f0eed07a42693c8f81(memPtr) {\n\n        mstore(add(memPtr, 0), \"Please define a selling price hi\")\n\n        mstore(add(memPtr, 32), \"gher than zero.\")\n\n    }\n\n    function abi_encode_t_stringliteral_b9ebebcb369b061f0ded2abc03dd5c1efcd60e09dffde1f0eed07a42693c8f81_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_b9ebebcb369b061f0ded2abc03dd5c1efcd60e09dffde1f0eed07a42693c8f81(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b9ebebcb369b061f0ded2abc03dd5c1efcd60e09dffde1f0eed07a42693c8f81__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b9ebebcb369b061f0ded2abc03dd5c1efcd60e09dffde1f0eed07a42693c8f81_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_501011de456270e6d688e8443437231c2568dc785d874a77f30894a009ba645f(memPtr) {\n\n        mstore(add(memPtr, 0), \"This NFT did not start an auctio\")\n\n        mstore(add(memPtr, 32), \"n.\")\n\n    }\n\n    function abi_encode_t_stringliteral_501011de456270e6d688e8443437231c2568dc785d874a77f30894a009ba645f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_501011de456270e6d688e8443437231c2568dc785d874a77f30894a009ba645f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_501011de456270e6d688e8443437231c2568dc785d874a77f30894a009ba645f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_501011de456270e6d688e8443437231c2568dc785d874a77f30894a009ba645f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c28146fd998b3c26c3dbbf224b649b757f3a777e9384ac0ea067659d0f358f25(memPtr) {\n\n        mstore(add(memPtr, 0), \"The auction has not finished yet\")\n\n        mstore(add(memPtr, 32), \".\")\n\n    }\n\n    function abi_encode_t_stringliteral_c28146fd998b3c26c3dbbf224b649b757f3a777e9384ac0ea067659d0f358f25_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_c28146fd998b3c26c3dbbf224b649b757f3a777e9384ac0ea067659d0f358f25(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c28146fd998b3c26c3dbbf224b649b757f3a777e9384ac0ea067659d0f358f25__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c28146fd998b3c26c3dbbf224b649b757f3a777e9384ac0ea067659d0f358f25_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_a39f1af373a3b18a733a1f8206b930382ab93f9170098f2793be2b48a56be00e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Error: the highest bidder is the\")\n\n        mstore(add(memPtr, 32), \" zero address.\")\n\n    }\n\n    function abi_encode_t_stringliteral_a39f1af373a3b18a733a1f8206b930382ab93f9170098f2793be2b48a56be00e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_a39f1af373a3b18a733a1f8206b930382ab93f9170098f2793be2b48a56be00e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a39f1af373a3b18a733a1f8206b930382ab93f9170098f2793be2b48a56be00e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a39f1af373a3b18a733a1f8206b930382ab93f9170098f2793be2b48a56be00e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_c3acfb094a156b84661b3c3c57a84f0a875490c81d212e3c337f85800112c49c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Failed to send ETH to the NFT ow\")\n\n        mstore(add(memPtr, 32), \"ner.\")\n\n    }\n\n    function abi_encode_t_stringliteral_c3acfb094a156b84661b3c3c57a84f0a875490c81d212e3c337f85800112c49c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c3acfb094a156b84661b3c3c57a84f0a875490c81d212e3c337f85800112c49c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c3acfb094a156b84661b3c3c57a84f0a875490c81d212e3c337f85800112c49c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c3acfb094a156b84661b3c3c57a84f0a875490c81d212e3c337f85800112c49c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_rational_0_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_0_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_rational_0_by_1(value)))\n    }\n\n    function abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_0_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_rational_0_by_1__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_address_t_uint256_t_address_t_address_t_uint256__to_t_string_memory_ptr_t_address_t_uint256_t_address_t_address_t_uint256__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function store_literal_in_memory_94d8d73aa0c1acd69400f57ad2aabae77b042082027641a43c5fb8bb82a45167(memPtr) {\n\n        mstore(add(memPtr, 0), \"There is nothing to refund to th\")\n\n        mstore(add(memPtr, 32), \"e message sender for this NFT.\")\n\n    }\n\n    function abi_encode_t_stringliteral_94d8d73aa0c1acd69400f57ad2aabae77b042082027641a43c5fb8bb82a45167_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 62)\n        store_literal_in_memory_94d8d73aa0c1acd69400f57ad2aabae77b042082027641a43c5fb8bb82a45167(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_94d8d73aa0c1acd69400f57ad2aabae77b042082027641a43c5fb8bb82a45167__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_94d8d73aa0c1acd69400f57ad2aabae77b042082027641a43c5fb8bb82a45167_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_845c21fd6e7fee0a800c229bb8fd48445693aff5ca0ae521158b96ea1ce8bafc(memPtr) {\n\n        mstore(add(memPtr, 0), \"Failed to send ETH to the reques\")\n\n        mstore(add(memPtr, 32), \"ter.\")\n\n    }\n\n    function abi_encode_t_stringliteral_845c21fd6e7fee0a800c229bb8fd48445693aff5ca0ae521158b96ea1ce8bafc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_845c21fd6e7fee0a800c229bb8fd48445693aff5ca0ae521158b96ea1ce8bafc(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_845c21fd6e7fee0a800c229bb8fd48445693aff5ca0ae521158b96ea1ce8bafc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_845c21fd6e7fee0a800c229bb8fd48445693aff5ca0ae521158b96ea1ce8bafc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_54702dde2fcba02dc2fb39a69338ef316373b8f0d93345ef98921592a6d1400d(memPtr) {\n\n        mstore(add(memPtr, 0), \"The validity of the auction has \")\n\n        mstore(add(memPtr, 32), \"not been verified, yet\")\n\n    }\n\n    function abi_encode_t_stringliteral_54702dde2fcba02dc2fb39a69338ef316373b8f0d93345ef98921592a6d1400d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 54)\n        store_literal_in_memory_54702dde2fcba02dc2fb39a69338ef316373b8f0d93345ef98921592a6d1400d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_54702dde2fcba02dc2fb39a69338ef316373b8f0d93345ef98921592a6d1400d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_54702dde2fcba02dc2fb39a69338ef316373b8f0d93345ef98921592a6d1400d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8a94a0eb38503ba28009a528bd20a18e293fd97737506e6e2e140a4a1602d00a(memPtr) {\n\n        mstore(add(memPtr, 0), \"An auction has already started f\")\n\n        mstore(add(memPtr, 32), \"or this NFT.\")\n\n    }\n\n    function abi_encode_t_stringliteral_8a94a0eb38503ba28009a528bd20a18e293fd97737506e6e2e140a4a1602d00a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 44)\n        store_literal_in_memory_8a94a0eb38503ba28009a528bd20a18e293fd97737506e6e2e140a4a1602d00a(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8a94a0eb38503ba28009a528bd20a18e293fd97737506e6e2e140a4a1602d00a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8a94a0eb38503ba28009a528bd20a18e293fd97737506e6e2e140a4a1602d00a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2be4c66a0a8402e5a8c2b19644e62a846859ad218ddc26fe72aabdd7e5a25614(memPtr) {\n\n        mstore(add(memPtr, 0), \"Please define an auction higher \")\n\n        mstore(add(memPtr, 32), \"than zero.\")\n\n    }\n\n    function abi_encode_t_stringliteral_2be4c66a0a8402e5a8c2b19644e62a846859ad218ddc26fe72aabdd7e5a25614_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_2be4c66a0a8402e5a8c2b19644e62a846859ad218ddc26fe72aabdd7e5a25614(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2be4c66a0a8402e5a8c2b19644e62a846859ad218ddc26fe72aabdd7e5a25614__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2be4c66a0a8402e5a8c2b19644e62a846859ad218ddc26fe72aabdd7e5a25614_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_e9f3da8375fea24efd9d8a688570028774acf8a4008e7c4b38411b770c6da437(memPtr) {\n\n        mstore(add(memPtr, 0), \"The auction has already ended.\")\n\n    }\n\n    function abi_encode_t_stringliteral_e9f3da8375fea24efd9d8a688570028774acf8a4008e7c4b38411b770c6da437_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_e9f3da8375fea24efd9d8a688570028774acf8a4008e7c4b38411b770c6da437(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e9f3da8375fea24efd9d8a688570028774acf8a4008e7c4b38411b770c6da437__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e9f3da8375fea24efd9d8a688570028774acf8a4008e7c4b38411b770c6da437_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b3e36e01c3527a0f0d8dcab377fe62a2cea2566c15108f41580a93a25242ff2f(memPtr) {\n\n        mstore(add(memPtr, 0), \"This auction achieved the maximu\")\n\n        mstore(add(memPtr, 32), \"m amount of bids.\")\n\n    }\n\n    function abi_encode_t_stringliteral_b3e36e01c3527a0f0d8dcab377fe62a2cea2566c15108f41580a93a25242ff2f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 49)\n        store_literal_in_memory_b3e36e01c3527a0f0d8dcab377fe62a2cea2566c15108f41580a93a25242ff2f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b3e36e01c3527a0f0d8dcab377fe62a2cea2566c15108f41580a93a25242ff2f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b3e36e01c3527a0f0d8dcab377fe62a2cea2566c15108f41580a93a25242ff2f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b568870c2a39b7e1009fb5b9aee119bd742bf27a280f6130a3761fd8cf6c7d28(memPtr) {\n\n        mstore(add(memPtr, 0), \"The bid is too low.\")\n\n    }\n\n    function abi_encode_t_stringliteral_b568870c2a39b7e1009fb5b9aee119bd742bf27a280f6130a3761fd8cf6c7d28_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_b568870c2a39b7e1009fb5b9aee119bd742bf27a280f6130a3761fd8cf6c7d28(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b568870c2a39b7e1009fb5b9aee119bd742bf27a280f6130a3761fd8cf6c7d28__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b568870c2a39b7e1009fb5b9aee119bd742bf27a280f6130a3761fd8cf6c7d28_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address_t_uint256__to_t_address_t_uint256_t_address_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function store_literal_in_memory_2ec7d52e022d4a512c31415dd9580c398033bd13d5d9ee290019f128926e073f(memPtr) {\n\n        mstore(add(memPtr, 0), \"The user address needs to be dif\")\n\n        mstore(add(memPtr, 32), \"ferent from zero.\")\n\n    }\n\n    function abi_encode_t_stringliteral_2ec7d52e022d4a512c31415dd9580c398033bd13d5d9ee290019f128926e073f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 49)\n        store_literal_in_memory_2ec7d52e022d4a512c31415dd9580c398033bd13d5d9ee290019f128926e073f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2ec7d52e022d4a512c31415dd9580c398033bd13d5d9ee290019f128926e073f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2ec7d52e022d4a512c31415dd9580c398033bd13d5d9ee290019f128926e073f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_address_t_rational_0_by_1_t_bool_t_bool__to_t_address_t_address_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_address_t_uint256_t_bool_t_bool__fromStack_reversed(headStart , value9, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 320)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value3,  tail)\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value4,  tail)\n\n        mstore(add(headStart, 160), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value5,  tail)\n\n        abi_encode_t_address_to_t_address_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value7,  add(headStart, 224))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value8,  add(headStart, 256))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value9,  add(headStart, 288))\n\n    }\n\n    function store_literal_in_memory_795e888268ddf9337f106a3868637d7c62055ce14f5dda1abe76d3564d875fc2(memPtr) {\n\n        mstore(add(memPtr, 0), \"This NFT is not for sale.\")\n\n    }\n\n    function abi_encode_t_stringliteral_795e888268ddf9337f106a3868637d7c62055ce14f5dda1abe76d3564d875fc2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_795e888268ddf9337f106a3868637d7c62055ce14f5dda1abe76d3564d875fc2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_795e888268ddf9337f106a3868637d7c62055ce14f5dda1abe76d3564d875fc2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_795e888268ddf9337f106a3868637d7c62055ce14f5dda1abe76d3564d875fc2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_ad8e9a422fe1279413cfad79198ac5655e066c8f7548850b9f2131c6ae0aa8bd(memPtr) {\n\n        mstore(add(memPtr, 0), \"CYON token allowance too low.\")\n\n    }\n\n    function abi_encode_t_stringliteral_ad8e9a422fe1279413cfad79198ac5655e066c8f7548850b9f2131c6ae0aa8bd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_ad8e9a422fe1279413cfad79198ac5655e066c8f7548850b9f2131c6ae0aa8bd(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ad8e9a422fe1279413cfad79198ac5655e066c8f7548850b9f2131c6ae0aa8bd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ad8e9a422fe1279413cfad79198ac5655e066c8f7548850b9f2131c6ae0aa8bd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_604f2a465e5da2d3944668dd2853b95589c33b45bfa6f32de952c6982edd2c10(memPtr) {\n\n        mstore(add(memPtr, 0), \"Failed to send CYON to the NFT o\")\n\n        mstore(add(memPtr, 32), \"wner.\")\n\n    }\n\n    function abi_encode_t_stringliteral_604f2a465e5da2d3944668dd2853b95589c33b45bfa6f32de952c6982edd2c10_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_604f2a465e5da2d3944668dd2853b95589c33b45bfa6f32de952c6982edd2c10(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_604f2a465e5da2d3944668dd2853b95589c33b45bfa6f32de952c6982edd2c10__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_604f2a465e5da2d3944668dd2853b95589c33b45bfa6f32de952c6982edd2c10_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_52817f8b2682fbd43b92d8b9dd8f6a19b4c843251d62615ed2ec9bdfd033d401(memPtr) {\n\n        mstore(add(memPtr, 0), \"This NFT is already for sale.\")\n\n    }\n\n    function abi_encode_t_stringliteral_52817f8b2682fbd43b92d8b9dd8f6a19b4c843251d62615ed2ec9bdfd033d401_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_52817f8b2682fbd43b92d8b9dd8f6a19b4c843251d62615ed2ec9bdfd033d401(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_52817f8b2682fbd43b92d8b9dd8f6a19b4c843251d62615ed2ec9bdfd033d401__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_52817f8b2682fbd43b92d8b9dd8f6a19b4c843251d62615ed2ec9bdfd033d401_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function decrement_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0x00) { panic_error_0x11() }\n        ret := sub(value, 1)\n    }\n\n}\n",
      "id": 16,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "404:11768:13:-:0;;;1935:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1998:12;1979:9;;:32;;;;;;;;;;;;;;;;;;1935:83;404:11768;;88:117:16;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;404:11768:13:-;;;;;;;",
  "deployedSourceMap": "404:11768:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13684:536:12;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3773:911:13;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7999:2527;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;14604:536:12;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11124:489:13;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;715:23;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8446:953:12;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3492:1833;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5578:2522;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;11864:562;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2888:554:13;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5048:1461;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;15516:351:12;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6899:765:13;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12789:545:12;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13684:536;13786:4;13843:1;13810:35;;:21;:35;;;13802:102;;;;;;;;;;;;:::i;:::-;;;;;;;;;13973:10;:33;13984:21;13973:33;;;;;;;;;;;;;;;:46;14007:11;13973:46;;;;;;;;;;;:64;;;;;;;;;;;;13965:118;;;;;;;;;;;;:::i;:::-;;;;;;;;;14155:10;:33;14166:21;14155:33;;;;;;;;;;;;;;;:46;14189:11;14155:46;;;;;;;;;;;:57;;;14147:66;;13684:536;;;;:::o;3773:911:13:-;3913:1;3883:32;;:18;:32;;;3875:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;4274:10;4218:66;;4233:18;4218:42;;;4261:8;4218:52;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:66;;;4210:133;;;;;;;;;;;;:::i;:::-;;;;;;;;;4480:1;4471:6;:10;4463:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;4632:18;4617:43;;;4661:8;4670:6;4617:60;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3773:911;;;:::o;7999:2527::-;8124:1;8094:32;;:18;:32;;;8086:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;8261:18;8246:42;;;8289:8;8246:52;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8390:4;:16;;;8407:18;8426:8;8390:45;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8382:91;;;;;;;;;;;;:::i;:::-;;;;;;;;;8531:4;:28;;;8560:18;8579:8;8531:57;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8523:103;;;;;;;;;;;;:::i;:::-;;;;;;;;;8713:13;8729:4;:25;;;8755:18;8774:8;8729:54;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8713:70;;8793:20;8831:18;8816:42;;;8859:8;8816:52;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8793:75;;8878:21;8902:4;:28;;;8931:18;8951:8;8902:58;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8878:82;;9003:1;8978:27;;:13;:27;;;8970:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;9205:1;9197:5;:9;9194:1326;;;9276:12;9302;9294:26;;9327:5;9294:43;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9275:62;;;9359:7;9351:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;9597:12;9580:29;;:13;:29;;;9577:828;;9644:18;9629:43;;;9673:8;9682:5;9629:59;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9901:4;9833:73;;9848:18;9833:46;;;9880:8;9833:56;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:73;;;9825:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;10027:18;10012:51;;;10064:12;10078:13;10093:8;10012:90;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10210:18;10195:43;;;10239:8;10248:1;10195:55;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10274:116;10297:18;10282:39;;;:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10325:18;10345:8;10355:12;10369:13;10384:5;10274:116;;;;;;;;;;;:::i;:::-;;;;;;;;9577:828;10469:40;10480:18;10500:8;10469:10;:40::i;:::-;9208:1312;9194:1326;8076:2450;;;7999:2527;;:::o;14604:536:12:-;14702:4;14759:1;14726:35;;:21;:35;;;14718:102;;;;;;;;;;;;:::i;:::-;;;;;;;;;14889:10;:33;14900:21;14889:33;;;;;;;;;;;;;;;:46;14923:11;14889:46;;;;;;;;;;;:64;;;;;;;;;;;;14881:118;;;;;;;;;;;;:::i;:::-;;;;;;;;;15071:10;:33;15082:21;15071:33;;;;;;;;;;;;;;;:46;15105:11;15071:46;;;;;;;;;;;:54;;:61;;;;15063:70;;14604:536;;;;:::o;11124:489:13:-;11209:13;11424:18;11409:42;;;11452:8;11409:52;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;11567:18;11552:43;;;11596:8;11552:53;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11545:61;;11124:489;;;;:::o;715:23::-;;;;;;;;;;;;;:::o;8446:953:12:-;8579:1;8546:35;;:21;:35;;;8538:102;;;;;;;;;;;;:::i;:::-;;;;;;;;;8785:1;8709:10;:33;8720:21;8709:33;;;;;;;;;;;;;;;:46;8743:11;8709:46;;;;;;;;;;;:61;;:73;8771:10;8709:73;;;;;;;;;;;;;;;;:77;8701:152;;;;;;;;;;;;:::i;:::-;;;;;;;;;8907:11;8921:10;:33;8932:21;8921:33;;;;;;;;;;;;;;;:46;8955:11;8921:46;;;;;;;;;;;:61;;:73;8983:10;8921:73;;;;;;;;;;;;;;;;8907:87;;9132:1;9056:10;:33;9067:21;9056:33;;;;;;;;;;;;;;;:46;9090:11;9056:46;;;;;;;;;;;:61;;:73;9118:10;9056:73;;;;;;;;;;;;;;;:77;;;;9253:1;9183:10;:33;9194:21;9183:33;;;;;;;;;;;;;;;:46;9217:11;9183:46;;;;;;;;;;;:55;;:67;9239:10;9183:67;;;;;;;;;;;;;;;:71;;;;9275:12;9293:10;:15;;9315:6;9293:33;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9274:52;;;9344:7;9336:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;8528:871;;8446:953;;:::o;3492:1833::-;3650:1;3617:35;;:21;:35;;;3609:102;;;;;;;;;;;;:::i;:::-;;;;;;;;;3843:10;3780:73;;:10;:33;3791:21;3780:33;;;;;;;;;;;;;;;:46;3814:11;3780:46;;;;;;;;;;;:59;;;;;;;;;;;;:73;;;3772:139;;;;;;;;;;;;:::i;:::-;;;;;;;;;3990:10;:33;4001:21;3990:33;;;;;;;;;;;;;;;:46;4024:11;3990:46;;;;;;;;;;;:64;;;;;;;;;;;;3989:65;3981:122;;;;;;;;;;;;:::i;:::-;;;;;;;;;4181:1;4166:12;:16;4158:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;4415:12;4397:15;:30;;;;:::i;:::-;4333:10;:33;4344:21;4333:33;;;;;;;;;;;;;;;:46;4367:11;4333:46;;;;;;;;;;;:61;;:94;;;;4555:10;4492;:33;4503:21;4492:33;;;;;;;;;;;;;;;:46;4526:11;4492:46;;;;;;;;;;;:60;;;:73;;;;;;;;;;;;;;;;;;4711:9;4651:10;:33;4662:21;4651:33;;;;;;;;;;;;;;;:46;4685:11;4651:46;;;;;;;;;;;:57;;:69;;;;4851:4;4784:10;:33;4795:21;4784:33;;;;;;;;;;;;;;;:46;4818:11;4784:46;;;;;;;;;;;:64;;;:71;;;;;;;;;;;;;;;;;;4910:10;:33;4921:21;4910:33;;;;;;;;;;;;;;;:46;4944:11;4910:46;;;;;;;;;;;:54;;4970:10;4910:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5122:9;5051:10;:33;5062:21;5051:33;;;;;;;;;;;;;;;:46;5085:11;5051:46;;;;;;;;;;;:55;;:67;5107:10;5051:67;;;;;;;;;;;;;;;;:80;;;;;;;:::i;:::-;;;;;;;;5201:62;5216:21;5239:11;5252:10;5201:62;;;;;;;;:::i;:::-;;;;;;;;3492:1833;;;:::o;5578:2522::-;5708:1;5675:35;;:21;:35;;;5667:102;;;;;;;;;;;;:::i;:::-;;;;;;;;;5838:10;:33;5849:21;5838:33;;;;;;;;;;;;;;;:46;5872:11;5838:46;;;;;;;;;;;:64;;;;;;;;;;;;5830:118;;;;;;;;;;;;:::i;:::-;;;;;;;;;6039:10;:33;6050:21;6039:33;;;;;;;;;;;;;;;:46;6073:11;6039:46;;;;;;;;;;;:61;;;6021:15;:79;6013:122;;;;;;;;;;;;:::i;:::-;;;;;;;;;6265:4;6201:10;:33;6212:21;6201:33;;;;;;;;;;;;;;;:46;6235:11;6201:46;;;;;;;;;;;:54;;:61;;;;:68;6193:130;;;;;;;;;;;;:::i;:::-;;;;;;;;;6474:10;:33;6485:21;6474:33;;;;;;;;;;;;;;;:46;6508:11;6474:46;;;;;;;;;;;:57;;;6461:9;6393:10;:33;6404:21;6393:33;;;;;;;;;;;;;;;:46;6427:11;6393:46;;;;;;;;;;;:55;;:67;6449:10;6393:67;;;;;;;;;;;;;;;;:77;;;;:::i;:::-;6392:139;6384:171;;;;;;;;;;;;:::i;:::-;;;;;;;;;6764:1;6703:10;:33;6714:21;6703:33;;;;;;;;;;;;;;;:46;6737:11;6703:46;;;;;;;;;;;:57;;;:62;6700:276;;6908:10;:33;6919:21;6908:33;;;;;;;;;;;;;;;:46;6942:11;6908:46;;;;;;;;;;;:57;;;6781:10;:33;6792:21;6781:33;;;;;;;;;;;;;;;:46;6815:11;6781:46;;;;;;;;;;;:61;;:123;6843:10;:33;6854:21;6843:33;;;;;;;;;;;;;;;:46;6877:11;6843:46;;;;;;;;;;;:60;;;;;;;;;;;;6781:123;;;;;;;;;;;;;;;;:184;;;;;;;:::i;:::-;;;;;;;;6700:276;7122:1;7051:10;:33;7062:21;7051:33;;;;;;;;;;;;;;;:46;7085:11;7051:46;;;;;;;;;;;:55;;:67;7107:10;7051:67;;;;;;;;;;;;;;;;:72;7048:173;;7139:10;:33;7150:21;7139:33;;;;;;;;;;;;;;;:46;7173:11;7139:46;;;;;;;;;;;:54;;7199:10;7139:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7048:173;7355:9;7284:10;:33;7295:21;7284:33;;;;;;;;;;;;;;;:46;7318:11;7284:46;;;;;;;;;;;:55;;:67;7340:10;7284:67;;;;;;;;;;;;;;;;:80;;;;;;;:::i;:::-;;;;;;;;7482:10;:33;7493:21;7482:33;;;;;;;;;;;;;;;:46;7516:11;7482:46;;;;;;;;;;;:55;;:67;7538:10;7482:67;;;;;;;;;;;;;;;;7422:10;:33;7433:21;7422:33;;;;;;;;;;;;;;;:46;7456:11;7422:46;;;;;;;;;;;:57;;:127;;;;7710:10;7647;:33;7658:21;7647:33;;;;;;;;;;;;;;;:46;7681:11;7647:46;;;;;;;;;;;:60;;;:73;;;;;;;;;;;;;;;;;;7864:1;7788:10;:33;7799:21;7788:33;;;;;;;;;;;;;;;:46;7822:11;7788:46;;;;;;;;;;;:61;;:73;7850:10;7788:73;;;;;;;;;;;;;;;:77;;;;7919:123;7939:21;7961:11;7973:10;7984;:33;7995:21;7984:33;;;;;;;;;;;;;;;:46;8018:11;7984:46;;;;;;;;;;;:57;;;7919:123;;;;;;;;;:::i;:::-;;;;;;;;5578:2522;;:::o;11864:562::-;11969:4;12026:1;11993:35;;:21;:35;;;11985:102;;;;;;;;;;;;:::i;:::-;;;;;;;;;12156:10;:33;12167:21;12156:33;;;;;;;;;;;;;;;:46;12190:11;12156:46;;;;;;;;;;;:64;;;;;;;;;;;;12148:118;;;;;;;;;;;;:::i;:::-;;;;;;;;;12357:10;:33;12368:21;12357:33;;;;;;;;;;;;;;;:46;12391:11;12357:46;;;;;;;;;;;:61;;;12338:15;:80;;12330:89;;11864:562;;;;:::o;2888:554:13:-;3120:1;3090:32;;:18;:32;;;3082:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;3226:1;3203:25;;:11;:25;;;3195:86;;;;;;;;;;;;:::i;:::-;;;;;;;;;3313:18;3298:42;;;3341:11;3353:10;3364:9;3374:5;3380:12;3393:4;3406:9;;;;;;;;;;;3417:1;3419:5;3425;3298:133;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2888:554;;;;;;:::o;5048:1461::-;5202:1;5172:32;;:18;:32;;;5164:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;5324:13;5355:18;5340:43;;;5384:8;5340:53;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5324:69;;5419:1;5411:5;:9;5403:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;5609:5;5559:9;;;;;;;;;;;:19;;;5579:10;5599:4;5559:46;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:55;;5551:97;;;;;;;;;;;;:::i;:::-;;;;;;;;;5742:20;5780:18;5765:42;;;5808:8;5765:52;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5742:75;;5827:9;5839;;;;;;;;;;;:18;;;5858:12;5872:5;5839:39;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5827:51;;5896:4;5888:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;6070:4;6002:73;;6017:18;6002:46;;;6049:8;6002:56;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:73;;;5994:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;6188:18;6173:51;;;6225:12;6239:10;6251:8;6173:87;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6333:18;6318:43;;;6362:8;6371:1;6318:55;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6389:113;6412:18;6397:39;;;:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6440:18;6460:8;6470:12;6484:10;6496:5;6389:113;;;;;;;;;;;:::i;:::-;;;;;;;;5127:1382;;;5048:1461;;:::o;15516:351:12:-;15609:4;15666:1;15633:35;;:21;:35;;;15625:102;;;;;;;;;;;;:::i;:::-;;;;;;;;;15795:10;:33;15806:21;15795:33;;;;;;;;;;;;;;;:46;15829:11;15795:46;;;;;;;;;;;:64;;;;;;;;;;;;15788:72;;15516:351;;;;:::o;6899:765:13:-;6987:4;7041:1;7011:32;;:18;:32;;;7003:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;7227:10;7171:66;;7186:18;7171:42;;;7214:8;7171:52;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:66;;;7163:133;;;;;;;;;;;;:::i;:::-;;;;;;;;;7481:1;7439:18;7424:43;;;7468:8;7424:53;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:58;7416:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;7575:60;7594:18;7614:8;7624:10;7575:18;:60::i;:::-;7653:4;7646:11;;6899:765;;;;:::o;12789:545:12:-;12894:7;12954:1;12921:35;;:21;:35;;;12913:102;;;;;;;;;;;;:::i;:::-;;;;;;;;;13084:10;:33;13095:21;13084:33;;;;;;;;;;;;;;;:46;13118:11;13084:46;;;;;;;;;;;:64;;;;;;;;;;;;13076:118;;;;;;;;;;;;:::i;:::-;;;;;;;;;13266:10;:33;13277:21;13266:33;;;;;;;;;;;;;;;:46;13300:11;13266:46;;;;;;;;;;;:60;;;;;;;;;;;;13258:69;;12789:545;;;;:::o;9674:1536::-;10351:5;10284:10;:33;10295:21;10284:33;;;;;;;;;;;;;;;:46;10318:11;10284:46;;;;;;;;;;;:64;;;:72;;;;;;;;;;;;;;;;;;10437:1;10367:10;:33;10378:21;10367:33;;;;;;;;;;;;;;;:46;10401:11;10367:46;;;;;;;;;;;:59;;;:72;;;;;;;;;;;;;;;;;;10566:13;10582:10;:33;10593:21;10582:33;;;;;;;;;;;;;;;:46;10616:11;10582:46;;;;;;;;;;;:54;;:61;;;;10566:77;;10653:19;10687:6;10694:8;10687:15;;10682:213;10706:1;10704;:3;10682:213;;;10739:10;:33;10750:21;10739:33;;;;;;;;;;;;;;;:46;10773:11;10739:46;;;;;;;;;;;:54;;10796:1;10794;:3;;;;:::i;:::-;10739:59;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;10727:71;;10883:1;10812:10;:33;10823:21;10812:33;;;;;;;;;;;;;;;:46;10846:11;10812:46;;;;;;;;;;;:55;;:68;10868:11;10812:68;;;;;;;;;;;;;;;:72;;;;10709:3;;;;;:::i;:::-;;;;10682:213;;;;10911:10;:33;10922:21;10911:33;;;;;;;;;;;;;;;:46;10945:11;10911:46;;;;;;;;;;;:54;;;10904:61;;;;:::i;:::-;10981:169;10995:21;11018:11;11031:10;:33;11042:21;11031:33;;;;;;;;;;;;;;;:46;11065:11;11031:46;;;;;;;;;;;:60;;;;;;;;;;;;11092:10;:33;11103:21;11092:33;;;;;;;;;;;;;;;:46;11126:11;11092:46;;;;;;;;;;;:57;;;10981:169;;;;;;;;;:::i;:::-;;;;;;;;9752:1458;;9674:1536;;:::o;2540:542::-;2700:1;2667:35;;:21;:35;;;2659:102;;;;;;;;;;;;:::i;:::-;;;;;;;;;2831:10;:33;2842:21;2831:33;;;;;;;;;;;;;;;:46;2865:11;2831:46;;;;;;;;;;;:64;;;;;;;;;;;;2830:65;2822:122;;;;;;;;;;;;:::i;:::-;;;;;;;;;3062:13;3000:10;:33;3011:21;3000:33;;;;;;;;;;;;;;;:46;3034:11;3000:46;;;;;;;;;;;:59;;;:75;;;;;;;;;;;;;;;;;;2540:542;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:16:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:118::-;1764:24;1782:5;1764:24;:::i;:::-;1759:3;1752:37;1677:118;;:::o;1801:222::-;1894:4;1932:2;1921:9;1917:18;1909:26;;1945:71;2013:1;2002:9;1998:17;1989:6;1945:71;:::i;:::-;1801:222;;;;:::o;2029:619::-;2106:6;2114;2122;2171:2;2159:9;2150:7;2146:23;2142:32;2139:119;;;2177:79;;:::i;:::-;2139:119;2297:1;2322:53;2367:7;2358:6;2347:9;2343:22;2322:53;:::i;:::-;2312:63;;2268:117;2424:2;2450:53;2495:7;2486:6;2475:9;2471:22;2450:53;:::i;:::-;2440:63;;2395:118;2552:2;2578:53;2623:7;2614:6;2603:9;2599:22;2578:53;:::i;:::-;2568:63;;2523:118;2029:619;;;;;:::o;2654:99::-;2706:6;2740:5;2734:12;2724:22;;2654:99;;;:::o;2759:169::-;2843:11;2877:6;2872:3;2865:19;2917:4;2912:3;2908:14;2893:29;;2759:169;;;;:::o;2934:307::-;3002:1;3012:113;3026:6;3023:1;3020:13;3012:113;;;3111:1;3106:3;3102:11;3096:18;3092:1;3087:3;3083:11;3076:39;3048:2;3045:1;3041:10;3036:15;;3012:113;;;3143:6;3140:1;3137:13;3134:101;;;3223:1;3214:6;3209:3;3205:16;3198:27;3134:101;2983:258;2934:307;;;:::o;3247:102::-;3288:6;3339:2;3335:7;3330:2;3323:5;3319:14;3315:28;3305:38;;3247:102;;;:::o;3355:364::-;3443:3;3471:39;3504:5;3471:39;:::i;:::-;3526:71;3590:6;3585:3;3526:71;:::i;:::-;3519:78;;3606:52;3651:6;3646:3;3639:4;3632:5;3628:16;3606:52;:::i;:::-;3683:29;3705:6;3683:29;:::i;:::-;3678:3;3674:39;3667:46;;3447:272;3355:364;;;;:::o;3725:313::-;3838:4;3876:2;3865:9;3861:18;3853:26;;3925:9;3919:4;3915:20;3911:1;3900:9;3896:17;3889:47;3953:78;4026:4;4017:6;3953:78;:::i;:::-;3945:86;;3725:313;;;;:::o;4044:60::-;4072:3;4093:5;4086:12;;4044:60;;;:::o;4110:142::-;4160:9;4193:53;4211:34;4220:24;4238:5;4220:24;:::i;:::-;4211:34;:::i;:::-;4193:53;:::i;:::-;4180:66;;4110:142;;;:::o;4258:126::-;4308:9;4341:37;4372:5;4341:37;:::i;:::-;4328:50;;4258:126;;;:::o;4390:139::-;4453:9;4486:37;4517:5;4486:37;:::i;:::-;4473:50;;4390:139;;;:::o;4535:157::-;4635:50;4679:5;4635:50;:::i;:::-;4630:3;4623:63;4535:157;;:::o;4698:248::-;4804:4;4842:2;4831:9;4827:18;4819:26;;4855:84;4936:1;4925:9;4921:17;4912:6;4855:84;:::i;:::-;4698:248;;;;:::o;4952:90::-;4986:7;5029:5;5022:13;5015:21;5004:32;;4952:90;;;:::o;5048:109::-;5129:21;5144:5;5129:21;:::i;:::-;5124:3;5117:34;5048:109;;:::o;5163:210::-;5250:4;5288:2;5277:9;5273:18;5265:26;;5301:65;5363:1;5352:9;5348:17;5339:6;5301:65;:::i;:::-;5163:210;;;;:::o;5379:117::-;5488:1;5485;5478:12;5502:117;5611:1;5608;5601:12;5625:180;5673:77;5670:1;5663:88;5770:4;5767:1;5760:15;5794:4;5791:1;5784:15;5811:281;5894:27;5916:4;5894:27;:::i;:::-;5886:6;5882:40;6024:6;6012:10;6009:22;5988:18;5976:10;5973:34;5970:62;5967:88;;;6035:18;;:::i;:::-;5967:88;6075:10;6071:2;6064:22;5854:238;5811:281;;:::o;6098:129::-;6132:6;6159:20;;:::i;:::-;6149:30;;6188:33;6216:4;6208:6;6188:33;:::i;:::-;6098:129;;;:::o;6233:308::-;6295:4;6385:18;6377:6;6374:30;6371:56;;;6407:18;;:::i;:::-;6371:56;6445:29;6467:6;6445:29;:::i;:::-;6437:37;;6529:4;6523;6519:15;6511:23;;6233:308;;;:::o;6547:154::-;6631:6;6626:3;6621;6608:30;6693:1;6684:6;6679:3;6675:16;6668:27;6547:154;;;:::o;6707:412::-;6785:5;6810:66;6826:49;6868:6;6826:49;:::i;:::-;6810:66;:::i;:::-;6801:75;;6899:6;6892:5;6885:21;6937:4;6930:5;6926:16;6975:3;6966:6;6961:3;6957:16;6954:25;6951:112;;;6982:79;;:::i;:::-;6951:112;7072:41;7106:6;7101:3;7096;7072:41;:::i;:::-;6791:328;6707:412;;;;;:::o;7139:340::-;7195:5;7244:3;7237:4;7229:6;7225:17;7221:27;7211:122;;7252:79;;:::i;:::-;7211:122;7369:6;7356:20;7394:79;7469:3;7461:6;7454:4;7446:6;7442:17;7394:79;:::i;:::-;7385:88;;7201:278;7139:340;;;;:::o;7485:1777::-;7629:6;7637;7645;7653;7661;7669;7718:3;7706:9;7697:7;7693:23;7689:33;7686:120;;;7725:79;;:::i;:::-;7686:120;7845:1;7870:53;7915:7;7906:6;7895:9;7891:22;7870:53;:::i;:::-;7860:63;;7816:117;7972:2;7998:53;8043:7;8034:6;8023:9;8019:22;7998:53;:::i;:::-;7988:63;;7943:118;8128:2;8117:9;8113:18;8100:32;8159:18;8151:6;8148:30;8145:117;;;8181:79;;:::i;:::-;8145:117;8286:63;8341:7;8332:6;8321:9;8317:22;8286:63;:::i;:::-;8276:73;;8071:288;8426:2;8415:9;8411:18;8398:32;8457:18;8449:6;8446:30;8443:117;;;8479:79;;:::i;:::-;8443:117;8584:63;8639:7;8630:6;8619:9;8615:22;8584:63;:::i;:::-;8574:73;;8369:288;8724:3;8713:9;8709:19;8696:33;8756:18;8748:6;8745:30;8742:117;;;8778:79;;:::i;:::-;8742:117;8883:63;8938:7;8929:6;8918:9;8914:22;8883:63;:::i;:::-;8873:73;;8667:289;9023:3;9012:9;9008:19;8995:33;9055:18;9047:6;9044:30;9041:117;;;9077:79;;:::i;:::-;9041:117;9182:63;9237:7;9228:6;9217:9;9213:22;9182:63;:::i;:::-;9172:73;;8966:289;7485:1777;;;;;;;;:::o;9268:118::-;9355:24;9373:5;9355:24;:::i;:::-;9350:3;9343:37;9268:118;;:::o;9392:222::-;9485:4;9523:2;9512:9;9508:18;9500:26;;9536:71;9604:1;9593:9;9589:17;9580:6;9536:71;:::i;:::-;9392:222;;;;:::o;9620:242::-;9760:34;9756:1;9748:6;9744:14;9737:58;9829:25;9824:2;9816:6;9812:15;9805:50;9620:242;:::o;9868:366::-;10010:3;10031:67;10095:2;10090:3;10031:67;:::i;:::-;10024:74;;10107:93;10196:3;10107:93;:::i;:::-;10225:2;10220:3;10216:12;10209:19;;9868:366;;;:::o;10240:419::-;10406:4;10444:2;10433:9;10429:18;10421:26;;10493:9;10487:4;10483:20;10479:1;10468:9;10464:17;10457:47;10521:131;10647:4;10521:131;:::i;:::-;10513:139;;10240:419;;;:::o;10665:228::-;10805:34;10801:1;10793:6;10789:14;10782:58;10874:11;10869:2;10861:6;10857:15;10850:36;10665:228;:::o;10899:366::-;11041:3;11062:67;11126:2;11121:3;11062:67;:::i;:::-;11055:74;;11138:93;11227:3;11138:93;:::i;:::-;11256:2;11251:3;11247:12;11240:19;;10899:366;;;:::o;11271:419::-;11437:4;11475:2;11464:9;11460:18;11452:26;;11524:9;11518:4;11514:20;11510:1;11499:9;11495:17;11488:47;11552:131;11678:4;11552:131;:::i;:::-;11544:139;;11271:419;;;:::o;11696:143::-;11753:5;11784:6;11778:13;11769:22;;11800:33;11827:5;11800:33;:::i;:::-;11696:143;;;;:::o;11845:351::-;11915:6;11964:2;11952:9;11943:7;11939:23;11935:32;11932:119;;;11970:79;;:::i;:::-;11932:119;12090:1;12115:64;12171:7;12162:6;12151:9;12147:22;12115:64;:::i;:::-;12105:74;;12061:128;11845:351;;;;:::o;12202:242::-;12342:34;12338:1;12330:6;12326:14;12319:58;12411:25;12406:2;12398:6;12394:15;12387:50;12202:242;:::o;12450:366::-;12592:3;12613:67;12677:2;12672:3;12613:67;:::i;:::-;12606:74;;12689:93;12778:3;12689:93;:::i;:::-;12807:2;12802:3;12798:12;12791:19;;12450:366;;;:::o;12822:419::-;12988:4;13026:2;13015:9;13011:18;13003:26;;13075:9;13069:4;13065:20;13061:1;13050:9;13046:17;13039:47;13103:131;13229:4;13103:131;:::i;:::-;13095:139;;12822:419;;;:::o;13247:234::-;13387:34;13383:1;13375:6;13371:14;13364:58;13456:17;13451:2;13443:6;13439:15;13432:42;13247:234;:::o;13487:366::-;13629:3;13650:67;13714:2;13709:3;13650:67;:::i;:::-;13643:74;;13726:93;13815:3;13726:93;:::i;:::-;13844:2;13839:3;13835:12;13828:19;;13487:366;;;:::o;13859:419::-;14025:4;14063:2;14052:9;14048:18;14040:26;;14112:9;14106:4;14102:20;14098:1;14087:9;14083:17;14076:47;14140:131;14266:4;14140:131;:::i;:::-;14132:139;;13859:419;;;:::o;14284:332::-;14405:4;14443:2;14432:9;14428:18;14420:26;;14456:71;14524:1;14513:9;14509:17;14500:6;14456:71;:::i;:::-;14537:72;14605:2;14594:9;14590:18;14581:6;14537:72;:::i;:::-;14284:332;;;;;:::o;14622:::-;14743:4;14781:2;14770:9;14766:18;14758:26;;14794:71;14862:1;14851:9;14847:17;14838:6;14794:71;:::i;:::-;14875:72;14943:2;14932:9;14928:18;14919:6;14875:72;:::i;:::-;14622:332;;;;;:::o;14960:116::-;15030:21;15045:5;15030:21;:::i;:::-;15023:5;15020:32;15010:60;;15066:1;15063;15056:12;15010:60;14960:116;:::o;15082:137::-;15136:5;15167:6;15161:13;15152:22;;15183:30;15207:5;15183:30;:::i;:::-;15082:137;;;;:::o;15225:345::-;15292:6;15341:2;15329:9;15320:7;15316:23;15312:32;15309:119;;;15347:79;;:::i;:::-;15309:119;15467:1;15492:61;15545:7;15536:6;15525:9;15521:22;15492:61;:::i;:::-;15482:71;;15438:125;15225:345;;;;:::o;15576:221::-;15716:34;15712:1;15704:6;15700:14;15693:58;15785:4;15780:2;15772:6;15768:15;15761:29;15576:221;:::o;15803:366::-;15945:3;15966:67;16030:2;16025:3;15966:67;:::i;:::-;15959:74;;16042:93;16131:3;16042:93;:::i;:::-;16160:2;16155:3;16151:12;16144:19;;15803:366;;;:::o;16175:419::-;16341:4;16379:2;16368:9;16364:18;16356:26;;16428:9;16422:4;16418:20;16414:1;16403:9;16399:17;16392:47;16456:131;16582:4;16456:131;:::i;:::-;16448:139;;16175:419;;;:::o;16600:220::-;16740:34;16736:1;16728:6;16724:14;16717:58;16809:3;16804:2;16796:6;16792:15;16785:28;16600:220;:::o;16826:366::-;16968:3;16989:67;17053:2;17048:3;16989:67;:::i;:::-;16982:74;;17065:93;17154:3;17065:93;:::i;:::-;17183:2;17178:3;17174:12;17167:19;;16826:366;;;:::o;17198:419::-;17364:4;17402:2;17391:9;17387:18;17379:26;;17451:9;17445:4;17441:20;17437:1;17426:9;17422:17;17415:47;17479:131;17605:4;17479:131;:::i;:::-;17471:139;;17198:419;;;:::o;17623:143::-;17680:5;17711:6;17705:13;17696:22;;17727:33;17754:5;17727:33;:::i;:::-;17623:143;;;;:::o;17772:351::-;17842:6;17891:2;17879:9;17870:7;17866:23;17862:32;17859:119;;;17897:79;;:::i;:::-;17859:119;18017:1;18042:64;18098:7;18089:6;18078:9;18074:22;18042:64;:::i;:::-;18032:74;;17988:128;17772:351;;;;:::o;18129:233::-;18269:34;18265:1;18257:6;18253:14;18246:58;18338:16;18333:2;18325:6;18321:15;18314:41;18129:233;:::o;18368:366::-;18510:3;18531:67;18595:2;18590:3;18531:67;:::i;:::-;18524:74;;18607:93;18696:3;18607:93;:::i;:::-;18725:2;18720:3;18716:12;18709:19;;18368:366;;;:::o;18740:419::-;18906:4;18944:2;18933:9;18929:18;18921:26;;18993:9;18987:4;18983:20;18979:1;18968:9;18964:17;18957:47;19021:131;19147:4;19021:131;:::i;:::-;19013:139;;18740:419;;;:::o;19165:147::-;19266:11;19303:3;19288:18;;19165:147;;;;:::o;19318:114::-;;:::o;19438:398::-;19597:3;19618:83;19699:1;19694:3;19618:83;:::i;:::-;19611:90;;19710:93;19799:3;19710:93;:::i;:::-;19828:1;19823:3;19819:11;19812:18;;19438:398;;;:::o;19842:379::-;20026:3;20048:147;20191:3;20048:147;:::i;:::-;20041:154;;20212:3;20205:10;;19842:379;;;:::o;20227:223::-;20367:34;20363:1;20355:6;20351:14;20344:58;20436:6;20431:2;20423:6;20419:15;20412:31;20227:223;:::o;20456:366::-;20598:3;20619:67;20683:2;20678:3;20619:67;:::i;:::-;20612:74;;20695:93;20784:3;20695:93;:::i;:::-;20813:2;20808:3;20804:12;20797:19;;20456:366;;;:::o;20828:419::-;20994:4;21032:2;21021:9;21017:18;21009:26;;21081:9;21075:4;21071:20;21067:1;21056:9;21052:17;21045:47;21109:131;21235:4;21109:131;:::i;:::-;21101:139;;20828:419;;;:::o;21253:364::-;21395:3;21416:66;21480:1;21475:3;21416:66;:::i;:::-;21409:73;;21491:93;21580:3;21491:93;:::i;:::-;21609:1;21604:3;21600:11;21593:18;;21253:364;;;:::o;21623:419::-;21789:4;21827:2;21816:9;21812:18;21804:26;;21876:9;21870:4;21866:20;21862:1;21851:9;21847:17;21840:47;21904:131;22030:4;21904:131;:::i;:::-;21896:139;;21623:419;;;:::o;22048:442::-;22197:4;22235:2;22224:9;22220:18;22212:26;;22248:71;22316:1;22305:9;22301:17;22292:6;22248:71;:::i;:::-;22329:72;22397:2;22386:9;22382:18;22373:6;22329:72;:::i;:::-;22411;22479:2;22468:9;22464:18;22455:6;22411:72;:::i;:::-;22048:442;;;;;;:::o;22496:85::-;22541:7;22570:5;22559:16;;22496:85;;;:::o;22587:158::-;22645:9;22678:61;22696:42;22705:32;22731:5;22705:32;:::i;:::-;22696:42;:::i;:::-;22678:61;:::i;:::-;22665:74;;22587:158;;;:::o;22751:147::-;22846:45;22885:5;22846:45;:::i;:::-;22841:3;22834:58;22751:147;;:::o;22904:348::-;23033:4;23071:2;23060:9;23056:18;23048:26;;23084:71;23152:1;23141:9;23137:17;23128:6;23084:71;:::i;:::-;23165:80;23241:2;23230:9;23226:18;23217:6;23165:80;:::i;:::-;22904:348;;;;;:::o;23258:421::-;23347:5;23372:66;23388:49;23430:6;23388:49;:::i;:::-;23372:66;:::i;:::-;23363:75;;23461:6;23454:5;23447:21;23499:4;23492:5;23488:16;23537:3;23528:6;23523:3;23519:16;23516:25;23513:112;;;23544:79;;:::i;:::-;23513:112;23634:39;23666:6;23661:3;23656;23634:39;:::i;:::-;23353:326;23258:421;;;;;:::o;23699:355::-;23766:5;23815:3;23808:4;23800:6;23796:17;23792:27;23782:122;;23823:79;;:::i;:::-;23782:122;23933:6;23927:13;23958:90;24044:3;24036:6;24029:4;24021:6;24017:17;23958:90;:::i;:::-;23949:99;;23772:282;23699:355;;;;:::o;24060:524::-;24140:6;24189:2;24177:9;24168:7;24164:23;24160:32;24157:119;;;24195:79;;:::i;:::-;24157:119;24336:1;24325:9;24321:17;24315:24;24366:18;24358:6;24355:30;24352:117;;;24388:79;;:::i;:::-;24352:117;24493:74;24559:7;24550:6;24539:9;24535:22;24493:74;:::i;:::-;24483:84;;24286:291;24060:524;;;;:::o;24590:866::-;24843:4;24881:3;24870:9;24866:19;24858:27;;24931:9;24925:4;24921:20;24917:1;24906:9;24902:17;24895:47;24959:78;25032:4;25023:6;24959:78;:::i;:::-;24951:86;;25047:72;25115:2;25104:9;25100:18;25091:6;25047:72;:::i;:::-;25129;25197:2;25186:9;25182:18;25173:6;25129:72;:::i;:::-;25211;25279:2;25268:9;25264:18;25255:6;25211:72;:::i;:::-;25293:73;25361:3;25350:9;25346:19;25337:6;25293:73;:::i;:::-;25376;25444:3;25433:9;25429:19;25420:6;25376:73;:::i;:::-;24590:866;;;;;;;;;:::o;25462:249::-;25602:34;25598:1;25590:6;25586:14;25579:58;25671:32;25666:2;25658:6;25654:15;25647:57;25462:249;:::o;25717:366::-;25859:3;25880:67;25944:2;25939:3;25880:67;:::i;:::-;25873:74;;25956:93;26045:3;25956:93;:::i;:::-;26074:2;26069:3;26065:12;26058:19;;25717:366;;;:::o;26089:419::-;26255:4;26293:2;26282:9;26278:18;26270:26;;26342:9;26336:4;26332:20;26328:1;26317:9;26313:17;26306:47;26370:131;26496:4;26370:131;:::i;:::-;26362:139;;26089:419;;;:::o;26514:223::-;26654:34;26650:1;26642:6;26638:14;26631:58;26723:6;26718:2;26710:6;26706:15;26699:31;26514:223;:::o;26743:366::-;26885:3;26906:67;26970:2;26965:3;26906:67;:::i;:::-;26899:74;;26982:93;27071:3;26982:93;:::i;:::-;27100:2;27095:3;27091:12;27084:19;;26743:366;;;:::o;27115:419::-;27281:4;27319:2;27308:9;27304:18;27296:26;;27368:9;27362:4;27358:20;27354:1;27343:9;27339:17;27332:47;27396:131;27522:4;27396:131;:::i;:::-;27388:139;;27115:419;;;:::o;27540:241::-;27680:34;27676:1;27668:6;27664:14;27657:58;27749:24;27744:2;27736:6;27732:15;27725:49;27540:241;:::o;27787:366::-;27929:3;27950:67;28014:2;28009:3;27950:67;:::i;:::-;27943:74;;28026:93;28115:3;28026:93;:::i;:::-;28144:2;28139:3;28135:12;28128:19;;27787:366;;;:::o;28159:419::-;28325:4;28363:2;28352:9;28348:18;28340:26;;28412:9;28406:4;28402:20;28398:1;28387:9;28383:17;28376:47;28440:131;28566:4;28440:131;:::i;:::-;28432:139;;28159:419;;;:::o;28584:231::-;28724:34;28720:1;28712:6;28708:14;28701:58;28793:14;28788:2;28780:6;28776:15;28769:39;28584:231;:::o;28821:366::-;28963:3;28984:67;29048:2;29043:3;28984:67;:::i;:::-;28977:74;;29060:93;29149:3;29060:93;:::i;:::-;29178:2;29173:3;29169:12;29162:19;;28821:366;;;:::o;29193:419::-;29359:4;29397:2;29386:9;29382:18;29374:26;;29446:9;29440:4;29436:20;29432:1;29421:9;29417:17;29410:47;29474:131;29600:4;29474:131;:::i;:::-;29466:139;;29193:419;;;:::o;29618:229::-;29758:34;29754:1;29746:6;29742:14;29735:58;29827:12;29822:2;29814:6;29810:15;29803:37;29618:229;:::o;29853:366::-;29995:3;30016:67;30080:2;30075:3;30016:67;:::i;:::-;30009:74;;30092:93;30181:3;30092:93;:::i;:::-;30210:2;30205:3;30201:12;30194:19;;29853:366;;;:::o;30225:419::-;30391:4;30429:2;30418:9;30414:18;30406:26;;30478:9;30472:4;30468:20;30464:1;30453:9;30449:17;30442:47;30506:131;30632:4;30506:131;:::i;:::-;30498:139;;30225:419;;;:::o;30650:180::-;30698:77;30695:1;30688:88;30795:4;30792:1;30785:15;30819:4;30816:1;30809:15;30836:305;30876:3;30895:20;30913:1;30895:20;:::i;:::-;30890:25;;30929:20;30947:1;30929:20;:::i;:::-;30924:25;;31083:1;31015:66;31011:74;31008:1;31005:81;31002:107;;;31089:18;;:::i;:::-;31002:107;31133:1;31130;31126:9;31119:16;;30836:305;;;;:::o;31147:442::-;31296:4;31334:2;31323:9;31319:18;31311:26;;31347:71;31415:1;31404:9;31400:17;31391:6;31347:71;:::i;:::-;31428:72;31496:2;31485:9;31481:18;31472:6;31428:72;:::i;:::-;31510;31578:2;31567:9;31563:18;31554:6;31510:72;:::i;:::-;31147:442;;;;;;:::o;31595:180::-;31735:32;31731:1;31723:6;31719:14;31712:56;31595:180;:::o;31781:366::-;31923:3;31944:67;32008:2;32003:3;31944:67;:::i;:::-;31937:74;;32020:93;32109:3;32020:93;:::i;:::-;32138:2;32133:3;32129:12;32122:19;;31781:366;;;:::o;32153:419::-;32319:4;32357:2;32346:9;32342:18;32334:26;;32406:9;32400:4;32396:20;32392:1;32381:9;32377:17;32370:47;32434:131;32560:4;32434:131;:::i;:::-;32426:139;;32153:419;;;:::o;32578:236::-;32718:34;32714:1;32706:6;32702:14;32695:58;32787:19;32782:2;32774:6;32770:15;32763:44;32578:236;:::o;32820:366::-;32962:3;32983:67;33047:2;33042:3;32983:67;:::i;:::-;32976:74;;33059:93;33148:3;33059:93;:::i;:::-;33177:2;33172:3;33168:12;33161:19;;32820:366;;;:::o;33192:419::-;33358:4;33396:2;33385:9;33381:18;33373:26;;33445:9;33439:4;33435:20;33431:1;33420:9;33416:17;33409:47;33473:131;33599:4;33473:131;:::i;:::-;33465:139;;33192:419;;;:::o;33617:169::-;33757:21;33753:1;33745:6;33741:14;33734:45;33617:169;:::o;33792:366::-;33934:3;33955:67;34019:2;34014:3;33955:67;:::i;:::-;33948:74;;34031:93;34120:3;34031:93;:::i;:::-;34149:2;34144:3;34140:12;34133:19;;33792:366;;;:::o;34164:419::-;34330:4;34368:2;34357:9;34353:18;34345:26;;34417:9;34411:4;34407:20;34403:1;34392:9;34388:17;34381:47;34445:131;34571:4;34445:131;:::i;:::-;34437:139;;34164:419;;;:::o;34589:553::-;34766:4;34804:3;34793:9;34789:19;34781:27;;34818:71;34886:1;34875:9;34871:17;34862:6;34818:71;:::i;:::-;34899:72;34967:2;34956:9;34952:18;34943:6;34899:72;:::i;:::-;34981;35049:2;35038:9;35034:18;35025:6;34981:72;:::i;:::-;35063;35131:2;35120:9;35116:18;35107:6;35063:72;:::i;:::-;34589:553;;;;;;;:::o;35148:236::-;35288:34;35284:1;35276:6;35272:14;35265:58;35357:19;35352:2;35344:6;35340:15;35333:44;35148:236;:::o;35390:366::-;35532:3;35553:67;35617:2;35612:3;35553:67;:::i;:::-;35546:74;;35629:93;35718:3;35629:93;:::i;:::-;35747:2;35742:3;35738:12;35731:19;;35390:366;;;:::o;35762:419::-;35928:4;35966:2;35955:9;35951:18;35943:26;;36015:9;36009:4;36005:20;36001:1;35990:9;35986:17;35979:47;36043:131;36169:4;36043:131;:::i;:::-;36035:139;;35762:419;;;:::o;36187:1575::-;36608:4;36646:3;36635:9;36631:19;36623:27;;36660:71;36728:1;36717:9;36713:17;36704:6;36660:71;:::i;:::-;36741:72;36809:2;36798:9;36794:18;36785:6;36741:72;:::i;:::-;36860:9;36854:4;36850:20;36845:2;36834:9;36830:18;36823:48;36888:78;36961:4;36952:6;36888:78;:::i;:::-;36880:86;;37013:9;37007:4;37003:20;36998:2;36987:9;36983:18;36976:48;37041:78;37114:4;37105:6;37041:78;:::i;:::-;37033:86;;37167:9;37161:4;37157:20;37151:3;37140:9;37136:19;37129:49;37195:78;37268:4;37259:6;37195:78;:::i;:::-;37187:86;;37321:9;37315:4;37311:20;37305:3;37294:9;37290:19;37283:49;37349:78;37422:4;37413:6;37349:78;:::i;:::-;37341:86;;37437:73;37505:3;37494:9;37490:19;37481:6;37437:73;:::i;:::-;37520:81;37596:3;37585:9;37581:19;37572:6;37520:81;:::i;:::-;37611:67;37673:3;37662:9;37658:19;37649:6;37611:67;:::i;:::-;37688;37750:3;37739:9;37735:19;37726:6;37688:67;:::i;:::-;36187:1575;;;;;;;;;;;;;:::o;37768:175::-;37908:27;37904:1;37896:6;37892:14;37885:51;37768:175;:::o;37949:366::-;38091:3;38112:67;38176:2;38171:3;38112:67;:::i;:::-;38105:74;;38188:93;38277:3;38188:93;:::i;:::-;38306:2;38301:3;38297:12;38290:19;;37949:366;;;:::o;38321:419::-;38487:4;38525:2;38514:9;38510:18;38502:26;;38574:9;38568:4;38564:20;38560:1;38549:9;38545:17;38538:47;38602:131;38728:4;38602:131;:::i;:::-;38594:139;;38321:419;;;:::o;38746:332::-;38867:4;38905:2;38894:9;38890:18;38882:26;;38918:71;38986:1;38975:9;38971:17;38962:6;38918:71;:::i;:::-;38999:72;39067:2;39056:9;39052:18;39043:6;38999:72;:::i;:::-;38746:332;;;;;:::o;39084:179::-;39224:31;39220:1;39212:6;39208:14;39201:55;39084:179;:::o;39269:366::-;39411:3;39432:67;39496:2;39491:3;39432:67;:::i;:::-;39425:74;;39508:93;39597:3;39508:93;:::i;:::-;39626:2;39621:3;39617:12;39610:19;;39269:366;;;:::o;39641:419::-;39807:4;39845:2;39834:9;39830:18;39822:26;;39894:9;39888:4;39884:20;39880:1;39869:9;39865:17;39858:47;39922:131;40048:4;39922:131;:::i;:::-;39914:139;;39641:419;;;:::o;40066:224::-;40206:34;40202:1;40194:6;40190:14;40183:58;40275:7;40270:2;40262:6;40258:15;40251:32;40066:224;:::o;40296:366::-;40438:3;40459:67;40523:2;40518:3;40459:67;:::i;:::-;40452:74;;40535:93;40624:3;40535:93;:::i;:::-;40653:2;40648:3;40644:12;40637:19;;40296:366;;;:::o;40668:419::-;40834:4;40872:2;40861:9;40857:18;40849:26;;40921:9;40915:4;40911:20;40907:1;40896:9;40892:17;40885:47;40949:131;41075:4;40949:131;:::i;:::-;40941:139;;40668:419;;;:::o;41093:179::-;41233:31;41229:1;41221:6;41217:14;41210:55;41093:179;:::o;41278:366::-;41420:3;41441:67;41505:2;41500:3;41441:67;:::i;:::-;41434:74;;41517:93;41606:3;41517:93;:::i;:::-;41635:2;41630:3;41626:12;41619:19;;41278:366;;;:::o;41650:419::-;41816:4;41854:2;41843:9;41839:18;41831:26;;41903:9;41897:4;41893:20;41889:1;41878:9;41874:17;41867:47;41931:131;42057:4;41931:131;:::i;:::-;41923:139;;41650:419;;;:::o;42075:191::-;42115:4;42135:20;42153:1;42135:20;:::i;:::-;42130:25;;42169:20;42187:1;42169:20;:::i;:::-;42164:25;;42208:1;42205;42202:8;42199:34;;;42213:18;;:::i;:::-;42199:34;42258:1;42255;42251:9;42243:17;;42075:191;;;;:::o;42272:180::-;42320:77;42317:1;42310:88;42417:4;42414:1;42407:15;42441:4;42438:1;42431:15;42458:171;42497:3;42520:24;42538:5;42520:24;:::i;:::-;42511:33;;42566:4;42559:5;42556:15;42553:41;;42574:18;;:::i;:::-;42553:41;42621:1;42614:5;42610:13;42603:20;;42458:171;;;:::o",
  "source": "// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.8.13;\n\nimport \"./Auction.sol\";\nimport \"./NFTCollectionFactory.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\n/// @title Master contract to manage the decentralized NFT market place \n/// @author Sebastien Gazeau, Sébastien Dupertuis et Alexis Mendoza\n/// @notice This smart contract is the link between the Dapp and the subcontracts\ncontract Master is Auction {\n    \n    //------------------------------------------------------------------------------------\n    // ----------------------------------Variables----------------------------------------\n    //------------------------------------------------------------------------------------\n    IERC20 public tokenCYON;\n\n    //------------------------------------------------------------------------------------\n    // ------------------------------------Events-----------------------------------------\n    //------------------------------------------------------------------------------------\n    /// @notice event for NFT sales\n    /// @param _collectionName Name of the NFT collection\n    /// @param _collectionAddress Address of the collection\n    /// @param _tokenID The ID of this given NFT\n    /// @param _oldOwner Previous owner of the sold NFT\n    /// @param _newOwner New owner of the bought NFT\n    /// @param _price The sale price of the given NFT\n    event NFTSold(string _collectionName, address _collectionAddress, uint256 _tokenID, address _oldOwner, address _newOwner, uint256 _price);\n\n    //------------------------------------------------------------------------------------\n    // ----------------------------------Constructor--------------------------------------\n    //------------------------------------------------------------------------------------\n    /// @notice The constructor the Master smart contract\n    /// @param _addressCYON The ERC20 address of the platform token (CYON) \n    constructor(address _addressCYON) {\n        tokenCYON = IERC20(_addressCYON);\n    }\n\n    //------------------------------------------------------------------------------------\n    // -----------------------------------Functions---------------------------------------\n    //------------------------------------------------------------------------------------\n    /// @notice This function allows to create NFTs inside a collection and mint it directly\n    /// @dev Call this function when the user wants to create a new NFT and mint it to the given address\n    /// @param _collectionAddress The address of the collection in which the NFT will be created/minted\n    /// @param _firstOwner The destination address to which the NFT is minted\n    /// @param _tokenURI The metadata through a link URI\n    /// @param _name Name of the new NFT\n    /// @param _description Description of the new NFT\n    /// @param _tag Tag of the new NFT allowing filtering\n    function createNFT(address _collectionAddress, address _firstOwner, string memory _tokenURI, string memory _name, \n        string memory _description, string memory _tag) external {\n            require(_collectionAddress != address(0),\"The collection address needs to be different from zero.\");\n            require(_firstOwner != address(0),\"The user address needs to be different from zero.\");  \n\n            NFTCollections(_collectionAddress).MintNFT(_firstOwner,msg.sender,_tokenURI,_name,_description,_tag,address(tokenCYON),0,false,false);\n        }\n\n\n    /// @notice This function allows to set the price of the given NFT\n    /// @dev Call this function when a sale is initiated\n    /// @param _collectionAddress The address of the collection of the NFT to set the price\n    /// @param _tokenID The token ID of the NFT to set the price\n    /// @param _price The price to set\n    function setNewPrice(address _collectionAddress, uint256 _tokenID, uint256 _price) external {\n        require(_collectionAddress != address(0),\"The collection address needs to be different from zero.\");    // Make sure the address is different from zero\n        //require((_tokenID <= NFTCollections(_collectionAddress).getTotalSupply()) && (_tokenID > 0), \"This token ID does not exist.\");      // Make sure the token ID exists\n        require(NFTCollections(_collectionAddress).ownerOf(_tokenID) == msg.sender,\"This NFT does not belong to the current message sender.\");  // Make sure the sale comes from the owner. Revert if the tokenID does not exist (ERC721Upgradeable library)\n        require(_price > 0,\"Please define a selling price higher than zero.\");                                  // Make sure the price is more than zero\n\n        NFTCollections(_collectionAddress).setPrice(_tokenID,_price);\n    }\n\n    /// @notice This function allows to transfer the money to the NFT owner and the NFT to the buyer after a direct sale.\n    /// @dev Call this function when a buyer click on the BUY button\n    /// @param _collectionAddress The address of the collection of the NFT to be sold/transfered\n    /// @param _tokenID The token ID of the NFT to be sold/transfered\n    function buyNFT(address _collectionAddress, uint256 _tokenID) external payable {\n        // Global requires\n        require(_collectionAddress != address(0),\"The collection address needs to be different from zero.\");    // Make sure the address is different from zero\n        uint256 price = NFTCollections(_collectionAddress).getPrice(_tokenID);\n        require(price > 0,\"This NFT is not for sale.\");     // Make sure the NFT is for sale\n    \n        // Send the CYON to the current NFT owner\n        require(tokenCYON.allowance(msg.sender, address(this)) >= price, \"CYON token allowance too low.\");      // Make sure the Master contract has the allowance to manage the CYON transfer\n        address currentOwner = NFTCollections(_collectionAddress).ownerOf(_tokenID);\n        bool sent = tokenCYON.transfer(currentOwner, price);\n        require(sent, \"Failed to send CYON to the NFT owner.\");\n\n        // Send the NFT to the new owner\n        require(NFTCollections(_collectionAddress).getApproved(_tokenID) == address(this),\"\");       // Make sure the Master contract has the allowance to manage the NFT transfer\n        NFTCollections(_collectionAddress).safeTransferFrom(currentOwner, msg.sender, _tokenID);\n\n        // Reset the price to 0 after the sale\n        NFTCollections(_collectionAddress).setPrice(_tokenID,0);\n\n        emit NFTSold(NFTCollections(_collectionAddress).name(), _collectionAddress, _tokenID, currentOwner, msg.sender, price);\n    }\n\n    /// @notice This function allows to initiate an auction by verifying owner and tokenID\n    /// @dev Call this function before starting the auction procedure\n    /// @param _collectionAddress The address of the collection of the NFT to start an auction\n    /// @param _tokenID The token ID of the NFT to start an auction\n    /// @return _validity True if the auction is authorized\n    function requestAuction(address _collectionAddress, uint256 _tokenID) external returns (bool) {\n        require(_collectionAddress != address(0),\"The collection address needs to be different from zero.\");    // Make sure the address is different from zero\n        require(NFTCollections(_collectionAddress).ownerOf(_tokenID) == msg.sender,\"This NFT does not belong to the current message sender.\");  // Make sure the sale comes from the owner. Revert if the tokenID does not exist (ERC721Upgradeable library)\n        require(NFTCollections(_collectionAddress).getPrice(_tokenID) == 0,\"This NFT is already for sale.\");     // Make sure the NFT is not already for sale\n\n        setAuctionValidity(_collectionAddress, _tokenID, msg.sender);\n\n        return true;\n    }\n\n    /// @notice This function allows to close an auction when the time has expired\n    /// @dev Call this function from the front when the auction time has expired\n    /// @param _collectionAddress The address of the collection of the NFT to close the auction\n    /// @param _tokenID The token ID of the NFT to close the auction\n    function closeAuction(address _collectionAddress, uint256 _tokenID) external {\n        require(_collectionAddress != address(0),\"The collection address needs to be different from zero.\");    // Make sure the address is different from zero\n        NFTCollections(_collectionAddress).ownerOf(_tokenID);       // Revert if the tokenID does not exist (ERC721Upgradeable library)\n        require(this.isInAuction(_collectionAddress,_tokenID),\"This NFT did not start an auction.\");         // Make sure an auction started\n        require(this.checkAuctionTimeExpired(_collectionAddress,_tokenID), \"The auction has not finished yet.\"); // Make sure the auction is finished\n\n        // Get the data of the auction\n        uint256 price = this.getCurrentHighestBid(_collectionAddress,_tokenID);\n        address currentOwner = NFTCollections(_collectionAddress).ownerOf(_tokenID);\n        address highestBidder = this.getCurrentHighestBidder(_collectionAddress, _tokenID);\n        require(highestBidder != address(0),\"Error: the highest bidder is the zero address.\");  // Make sure the address of the highest bidder is valid\n\n        // Check if price is more than 0. Otherwise, nobody has bidded\n        if(price > 0) {\n            // Send the ETH to the current NFT owner\n            (bool success, ) = payable(currentOwner).call{value:price}(\"\");\n            require(success, \"Failed to send ETH to the NFT owner.\");\n\n            // Verify that the highest bidder is not the current owner. Otherwise, nobody has bidded, except the initial bid of the owner (starting price)\n            if(highestBidder != currentOwner) {\n                NFTCollections(_collectionAddress).setPrice(_tokenID,price);        // Update the price of the NFT for event tracking\n            \n                // Send the NFT to the new owner\n                require(NFTCollections(_collectionAddress).getApproved(_tokenID) == address(this),\"\");       // Make sure the Master contract has the allowance to manage the NFT transfer\n                NFTCollections(_collectionAddress).safeTransferFrom(currentOwner, highestBidder, _tokenID);\n\n                // Reset the price to 0 after the sale for price tracking\n                NFTCollections(_collectionAddress).setPrice(_tokenID,0);\n\n                emit NFTSold(NFTCollections(_collectionAddress).name(), _collectionAddress, _tokenID, currentOwner, highestBidder, price);\n            }\n            \n            // Reset the auction data\n            endAuction(_collectionAddress, _tokenID);\n        }\n    }\n\n\n    //------------------------------------------------------------------------------------\n    // ------------------------------------Getters----------------------------------------\n    //------------------------------------------------------------------------------------\n    /// @notice This function returns the URI data of the given NFT\n    /// @dev Call this function to get the metadata of the NFT\n    /// @param _collectionAddress The address of the collection of the NFT to get the URI\n    /// @param _tokenID The token ID of the NFT to get the URI\n    /// @return _URI The URI data\n    function getURI(address _collectionAddress, uint256 _tokenID) external view returns (string memory) {\n        //require((_tokenID <= NFTCollections(_collectionAddress).getTotalSupply()) && (_tokenID > 0), \"This token ID does not exist.\");      // Make sure the token ID exists\n        NFTCollections(_collectionAddress).ownerOf(_tokenID);       // Revert if the tokenID does not exist (ERC721Upgradeable library)\n        return(NFTCollections(_collectionAddress).tokenURI(_tokenID));\n    }\n/*\n    /// @notice This function returns the current owner of the given NFT\n    /// @dev Call this function to get the owner of the NFT. Revert if the tokenID does not exist\n    /// @param _collectionAddress The address of the collection of the NFT to get the owner\n    /// @param _tokenID The token ID of the NFT to get the owner\n    /// @return _address The owner address\n    function getNFTOwner(address _collectionAddress, uint256 _tokenID) external view returns (address) {\n        return(NFTCollections(_collectionAddress).ownerOf(_tokenID));\n    }*/\n}\n",
  "sourcePath": "/home/sebastien/Alyra/Developpeur-Ethereum-Template/8. NFT/project-nft-cyon/contracts/Master.sol",
  "ast": {
    "absolutePath": "project:/contracts/Master.sol",
    "exportedSymbols": {
      "Address": [
        1527
      ],
      "Auction": [
        2669
      ],
      "Context": [
        1549
      ],
      "Counters": [
        1623
      ],
      "ERC165": [
        1850
      ],
      "ERC721": [
        943
      ],
      "ERC721URIStorage": [
        1205
      ],
      "IERC165": [
        1862
      ],
      "IERC20": [
        77
      ],
      "IERC721": [
        1059
      ],
      "IERC721Metadata": [
        1232
      ],
      "IERC721Receiver": [
        1077
      ],
      "Master": [
        3179
      ],
      "NFTCollectionFactory": [
        3238
      ],
      "NFTCollections": [
        3444
      ],
      "Strings": [
        1826
      ]
    },
    "id": 3180,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2671,
        "literals": [
          "solidity",
          "0.8",
          ".13"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:23:13"
      },
      {
        "absolutePath": "project:/contracts/Auction.sol",
        "file": "./Auction.sol",
        "id": 2672,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3180,
        "sourceUnit": 2670,
        "src": "61:23:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/NFTCollectionFactory.sol",
        "file": "./NFTCollectionFactory.sol",
        "id": 2673,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3180,
        "sourceUnit": 3239,
        "src": "85:36:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 2674,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3180,
        "sourceUnit": 78,
        "src": "122:56:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2676,
              "name": "Auction",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2669,
              "src": "423:7:13"
            },
            "id": 2677,
            "nodeType": "InheritanceSpecifier",
            "src": "423:7:13"
          }
        ],
        "canonicalName": "Master",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 2675,
          "nodeType": "StructuredDocumentation",
          "src": "180:224:13",
          "text": "@title Master contract to manage the decentralized NFT market place \n @author Sebastien Gazeau, Sébastien Dupertuis et Alexis Mendoza\n @notice This smart contract is the link between the Dapp and the subcontracts"
        },
        "fullyImplemented": true,
        "id": 3179,
        "linearizedBaseContracts": [
          3179,
          2669
        ],
        "name": "Master",
        "nameLocation": "413:6:13",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "50194895",
            "id": 2680,
            "mutability": "mutable",
            "name": "tokenCYON",
            "nameLocation": "729:9:13",
            "nodeType": "VariableDeclaration",
            "scope": 3179,
            "src": "715:23:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$77",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 2679,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2678,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 77,
                "src": "715:6:13"
              },
              "referencedDeclaration": 77,
              "src": "715:6:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$77",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 2681,
              "nodeType": "StructuredDocumentation",
              "src": "1018:361:13",
              "text": "@notice event for NFT sales\n @param _collectionName Name of the NFT collection\n @param _collectionAddress Address of the collection\n @param _tokenID The ID of this given NFT\n @param _oldOwner Previous owner of the sold NFT\n @param _newOwner New owner of the bought NFT\n @param _price The sale price of the given NFT"
            },
            "eventSelector": "8146a1050e7850dd9a48240ef51ee45f907a45710d3c5136077e83e633c3ebe1",
            "id": 2695,
            "name": "NFTSold",
            "nameLocation": "1390:7:13",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2694,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2683,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_collectionName",
                  "nameLocation": "1405:15:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2695,
                  "src": "1398:22:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2682,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1398:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2685,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_collectionAddress",
                  "nameLocation": "1430:18:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2695,
                  "src": "1422:26:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2684,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1422:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2687,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_tokenID",
                  "nameLocation": "1458:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2695,
                  "src": "1450:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2686,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1450:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2689,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_oldOwner",
                  "nameLocation": "1476:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2695,
                  "src": "1468:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2688,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1468:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2691,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_newOwner",
                  "nameLocation": "1495:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2695,
                  "src": "1487:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2690,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1487:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2693,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_price",
                  "nameLocation": "1514:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2695,
                  "src": "1506:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2692,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1506:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1397:124:13"
            },
            "src": "1384:138:13"
          },
          {
            "body": {
              "id": 2707,
              "nodeType": "Block",
              "src": "1969:49:13",
              "statements": [
                {
                  "expression": {
                    "id": 2705,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2701,
                      "name": "tokenCYON",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2680,
                      "src": "1979:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$77",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2703,
                          "name": "_addressCYON",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2698,
                          "src": "1998:12:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2702,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77,
                        "src": "1991:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 2704,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1991:20:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$77",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1979:32:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$77",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 2706,
                  "nodeType": "ExpressionStatement",
                  "src": "1979:32:13"
                }
              ]
            },
            "documentation": {
              "id": 2696,
              "nodeType": "StructuredDocumentation",
              "src": "1801:129:13",
              "text": "@notice The constructor the Master smart contract\n @param _addressCYON The ERC20 address of the platform token (CYON) "
            },
            "id": 2708,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2699,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2698,
                  "mutability": "mutable",
                  "name": "_addressCYON",
                  "nameLocation": "1955:12:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2708,
                  "src": "1947:20:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2697,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1947:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1946:22:13"
            },
            "returnParameters": {
              "id": 2700,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1969:0:13"
            },
            "scope": 3179,
            "src": "1935:83:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2764,
              "nodeType": "Block",
              "src": "3068:374:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2730,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2725,
                          "name": "_collectionAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2711,
                          "src": "3090:18:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2728,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3120:1:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2727,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3112:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2726,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3112:7:13",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2729,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3112:10:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3090:32:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520636f6c6c656374696f6e2061646472657373206e6565647320746f20626520646966666572656e742066726f6d207a65726f2e",
                        "id": 2731,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3123:57:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_75d51b7f4f784217631f4d90c02e688b32ba4b4faadf2799078ab0609aeff458",
                          "typeString": "literal_string \"The collection address needs to be different from zero.\""
                        },
                        "value": "The collection address needs to be different from zero."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_75d51b7f4f784217631f4d90c02e688b32ba4b4faadf2799078ab0609aeff458",
                          "typeString": "literal_string \"The collection address needs to be different from zero.\""
                        }
                      ],
                      "id": 2724,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3082:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3082:99:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2733,
                  "nodeType": "ExpressionStatement",
                  "src": "3082:99:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2740,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2735,
                          "name": "_firstOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2713,
                          "src": "3203:11:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2738,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3226:1:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2737,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3218:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2736,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3218:7:13",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2739,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3218:10:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3203:25:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520757365722061646472657373206e6565647320746f20626520646966666572656e742066726f6d207a65726f2e",
                        "id": 2741,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3229:51:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2ec7d52e022d4a512c31415dd9580c398033bd13d5d9ee290019f128926e073f",
                          "typeString": "literal_string \"The user address needs to be different from zero.\""
                        },
                        "value": "The user address needs to be different from zero."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2ec7d52e022d4a512c31415dd9580c398033bd13d5d9ee290019f128926e073f",
                          "typeString": "literal_string \"The user address needs to be different from zero.\""
                        }
                      ],
                      "id": 2734,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3195:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2742,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3195:86:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2743,
                  "nodeType": "ExpressionStatement",
                  "src": "3195:86:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2748,
                        "name": "_firstOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2713,
                        "src": "3341:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 2749,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3353:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2750,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3353:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2751,
                        "name": "_tokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2715,
                        "src": "3364:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 2752,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2717,
                        "src": "3374:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 2753,
                        "name": "_description",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2719,
                        "src": "3380:12:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 2754,
                        "name": "_tag",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2721,
                        "src": "3393:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 2757,
                            "name": "tokenCYON",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2680,
                            "src": "3406:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$77",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$77",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 2756,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3398:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2755,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3398:7:13",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2758,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3398:18:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 2759,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3417:1:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 2760,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3419:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 2761,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3425:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 2745,
                            "name": "_collectionAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2711,
                            "src": "3313:18:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2744,
                          "name": "NFTCollections",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3444,
                          "src": "3298:14:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_NFTCollections_$3444_$",
                            "typeString": "type(contract NFTCollections)"
                          }
                        },
                        "id": 2746,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3298:34:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFTCollections_$3444",
                          "typeString": "contract NFTCollections"
                        }
                      },
                      "id": 2747,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "MintNFT",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3390,
                      "src": "3298:42:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_uint256_$_t_bool_$_t_bool_$returns$_t_uint256_$",
                        "typeString": "function (address,address,string memory,string memory,string memory,string memory,address,uint256,bool,bool) external returns (uint256)"
                      }
                    },
                    "id": 2762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3298:133:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2763,
                  "nodeType": "ExpressionStatement",
                  "src": "3298:133:13"
                }
              ]
            },
            "documentation": {
              "id": 2709,
              "nodeType": "StructuredDocumentation",
              "src": "2297:586:13",
              "text": "@notice This function allows to create NFTs inside a collection and mint it directly\n @dev Call this function when the user wants to create a new NFT and mint it to the given address\n @param _collectionAddress The address of the collection in which the NFT will be created/minted\n @param _firstOwner The destination address to which the NFT is minted\n @param _tokenURI The metadata through a link URI\n @param _name Name of the new NFT\n @param _description Description of the new NFT\n @param _tag Tag of the new NFT allowing filtering"
            },
            "functionSelector": "811ca7cf",
            "id": 2765,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createNFT",
            "nameLocation": "2897:9:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2722,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2711,
                  "mutability": "mutable",
                  "name": "_collectionAddress",
                  "nameLocation": "2915:18:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2765,
                  "src": "2907:26:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2710,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2907:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2713,
                  "mutability": "mutable",
                  "name": "_firstOwner",
                  "nameLocation": "2943:11:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2765,
                  "src": "2935:19:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2712,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2935:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2715,
                  "mutability": "mutable",
                  "name": "_tokenURI",
                  "nameLocation": "2970:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2765,
                  "src": "2956:23:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2714,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2956:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2717,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "2995:5:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2765,
                  "src": "2981:19:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2716,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2981:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2719,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "3025:12:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2765,
                  "src": "3011:26:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2718,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3011:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2721,
                  "mutability": "mutable",
                  "name": "_tag",
                  "nameLocation": "3053:4:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2765,
                  "src": "3039:18:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2720,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3039:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2906:152:13"
            },
            "returnParameters": {
              "id": 2723,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3068:0:13"
            },
            "scope": 3179,
            "src": "2888:554:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2813,
              "nodeType": "Block",
              "src": "3865:819:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2781,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2776,
                          "name": "_collectionAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2768,
                          "src": "3883:18:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2779,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3913:1:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2778,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3905:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2777,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3905:7:13",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2780,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3905:10:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3883:32:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520636f6c6c656374696f6e2061646472657373206e6565647320746f20626520646966666572656e742066726f6d207a65726f2e",
                        "id": 2782,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3916:57:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_75d51b7f4f784217631f4d90c02e688b32ba4b4faadf2799078ab0609aeff458",
                          "typeString": "literal_string \"The collection address needs to be different from zero.\""
                        },
                        "value": "The collection address needs to be different from zero."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_75d51b7f4f784217631f4d90c02e688b32ba4b4faadf2799078ab0609aeff458",
                          "typeString": "literal_string \"The collection address needs to be different from zero.\""
                        }
                      ],
                      "id": 2775,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3875:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3875:99:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2784,
                  "nodeType": "ExpressionStatement",
                  "src": "3875:99:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2794,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 2790,
                              "name": "_tokenID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2770,
                              "src": "4261:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2787,
                                  "name": "_collectionAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2768,
                                  "src": "4233:18:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2786,
                                "name": "NFTCollections",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3444,
                                "src": "4218:14:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_NFTCollections_$3444_$",
                                  "typeString": "type(contract NFTCollections)"
                                }
                              },
                              "id": 2788,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4218:34:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_NFTCollections_$3444",
                                "typeString": "contract NFTCollections"
                              }
                            },
                            "id": 2789,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 223,
                            "src": "4218:42:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 2791,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4218:52:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 2792,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4274:3:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2793,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4274:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4218:66:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686973204e465420646f6573206e6f742062656c6f6e6720746f207468652063757272656e74206d6573736167652073656e6465722e",
                        "id": 2795,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4285:57:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bd03a8d87c70fb34480c591cf12a6a899128bca11952a84818f1acd30d41f66a",
                          "typeString": "literal_string \"This NFT does not belong to the current message sender.\""
                        },
                        "value": "This NFT does not belong to the current message sender."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bd03a8d87c70fb34480c591cf12a6a899128bca11952a84818f1acd30d41f66a",
                          "typeString": "literal_string \"This NFT does not belong to the current message sender.\""
                        }
                      ],
                      "id": 2785,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4210:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2796,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4210:133:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2797,
                  "nodeType": "ExpressionStatement",
                  "src": "4210:133:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2801,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2799,
                          "name": "_price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2772,
                          "src": "4471:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2800,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4480:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4471:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506c6561736520646566696e6520612073656c6c696e6720707269636520686967686572207468616e207a65726f2e",
                        "id": 2802,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4482:49:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b9ebebcb369b061f0ded2abc03dd5c1efcd60e09dffde1f0eed07a42693c8f81",
                          "typeString": "literal_string \"Please define a selling price higher than zero.\""
                        },
                        "value": "Please define a selling price higher than zero."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b9ebebcb369b061f0ded2abc03dd5c1efcd60e09dffde1f0eed07a42693c8f81",
                          "typeString": "literal_string \"Please define a selling price higher than zero.\""
                        }
                      ],
                      "id": 2798,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4463:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2803,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4463:69:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2804,
                  "nodeType": "ExpressionStatement",
                  "src": "4463:69:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2809,
                        "name": "_tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2770,
                        "src": "4661:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2810,
                        "name": "_price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2772,
                        "src": "4670:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 2806,
                            "name": "_collectionAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2768,
                            "src": "4632:18:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2805,
                          "name": "NFTCollections",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3444,
                          "src": "4617:14:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_NFTCollections_$3444_$",
                            "typeString": "type(contract NFTCollections)"
                          }
                        },
                        "id": 2807,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4617:34:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFTCollections_$3444",
                          "typeString": "contract NFTCollections"
                        }
                      },
                      "id": 2808,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setPrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3420,
                      "src": "4617:43:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) external"
                      }
                    },
                    "id": 2811,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4617:60:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2812,
                  "nodeType": "ExpressionStatement",
                  "src": "4617:60:13"
                }
              ]
            },
            "documentation": {
              "id": 2766,
              "nodeType": "StructuredDocumentation",
              "src": "3449:319:13",
              "text": "@notice This function allows to set the price of the given NFT\n @dev Call this function when a sale is initiated\n @param _collectionAddress The address of the collection of the NFT to set the price\n @param _tokenID The token ID of the NFT to set the price\n @param _price The price to set"
            },
            "functionSelector": "28d4ae0f",
            "id": 2814,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setNewPrice",
            "nameLocation": "3782:11:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2773,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2768,
                  "mutability": "mutable",
                  "name": "_collectionAddress",
                  "nameLocation": "3802:18:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2814,
                  "src": "3794:26:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2767,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3794:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2770,
                  "mutability": "mutable",
                  "name": "_tokenID",
                  "nameLocation": "3830:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2814,
                  "src": "3822:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2769,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3822:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2772,
                  "mutability": "mutable",
                  "name": "_price",
                  "nameLocation": "3848:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2814,
                  "src": "3840:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2771,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3840:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3793:62:13"
            },
            "returnParameters": {
              "id": 2774,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3865:0:13"
            },
            "scope": 3179,
            "src": "3773:911:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2932,
              "nodeType": "Block",
              "src": "5127:1382:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2828,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2823,
                          "name": "_collectionAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2817,
                          "src": "5172:18:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2826,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5202:1:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2825,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5194:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2824,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5194:7:13",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2827,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5194:10:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5172:32:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520636f6c6c656374696f6e2061646472657373206e6565647320746f20626520646966666572656e742066726f6d207a65726f2e",
                        "id": 2829,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5205:57:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_75d51b7f4f784217631f4d90c02e688b32ba4b4faadf2799078ab0609aeff458",
                          "typeString": "literal_string \"The collection address needs to be different from zero.\""
                        },
                        "value": "The collection address needs to be different from zero."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_75d51b7f4f784217631f4d90c02e688b32ba4b4faadf2799078ab0609aeff458",
                          "typeString": "literal_string \"The collection address needs to be different from zero.\""
                        }
                      ],
                      "id": 2822,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5164:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2830,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5164:99:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2831,
                  "nodeType": "ExpressionStatement",
                  "src": "5164:99:13"
                },
                {
                  "assignments": [
                    2833
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2833,
                      "mutability": "mutable",
                      "name": "price",
                      "nameLocation": "5332:5:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 2932,
                      "src": "5324:13:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2832,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5324:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2840,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2838,
                        "name": "_tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2819,
                        "src": "5384:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 2835,
                            "name": "_collectionAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2817,
                            "src": "5355:18:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2834,
                          "name": "NFTCollections",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3444,
                          "src": "5340:14:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_NFTCollections_$3444_$",
                            "typeString": "type(contract NFTCollections)"
                          }
                        },
                        "id": 2836,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5340:34:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFTCollections_$3444",
                          "typeString": "contract NFTCollections"
                        }
                      },
                      "id": 2837,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getPrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3443,
                      "src": "5340:43:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view external returns (uint256)"
                      }
                    },
                    "id": 2839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5340:53:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5324:69:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2844,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2842,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2833,
                          "src": "5411:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2843,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5419:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5411:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686973204e4654206973206e6f7420666f722073616c652e",
                        "id": 2845,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5421:27:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_795e888268ddf9337f106a3868637d7c62055ce14f5dda1abe76d3564d875fc2",
                          "typeString": "literal_string \"This NFT is not for sale.\""
                        },
                        "value": "This NFT is not for sale."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_795e888268ddf9337f106a3868637d7c62055ce14f5dda1abe76d3564d875fc2",
                          "typeString": "literal_string \"This NFT is not for sale.\""
                        }
                      ],
                      "id": 2841,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5403:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2846,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5403:46:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2847,
                  "nodeType": "ExpressionStatement",
                  "src": "5403:46:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2851,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "5579:3:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2852,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5579:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 2855,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "5599:4:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Master_$3179",
                                    "typeString": "contract Master"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Master_$3179",
                                    "typeString": "contract Master"
                                  }
                                ],
                                "id": 2854,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5591:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2853,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5591:7:13",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2856,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5591:13:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 2849,
                              "name": "tokenCYON",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2680,
                              "src": "5559:9:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$77",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2850,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 54,
                            "src": "5559:19:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 2857,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5559:46:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 2858,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2833,
                          "src": "5609:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5559:55:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43594f4e20746f6b656e20616c6c6f77616e636520746f6f206c6f772e",
                        "id": 2860,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5616:31:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ad8e9a422fe1279413cfad79198ac5655e066c8f7548850b9f2131c6ae0aa8bd",
                          "typeString": "literal_string \"CYON token allowance too low.\""
                        },
                        "value": "CYON token allowance too low."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ad8e9a422fe1279413cfad79198ac5655e066c8f7548850b9f2131c6ae0aa8bd",
                          "typeString": "literal_string \"CYON token allowance too low.\""
                        }
                      ],
                      "id": 2848,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5551:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2861,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5551:97:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2862,
                  "nodeType": "ExpressionStatement",
                  "src": "5551:97:13"
                },
                {
                  "assignments": [
                    2864
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2864,
                      "mutability": "mutable",
                      "name": "currentOwner",
                      "nameLocation": "5750:12:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 2932,
                      "src": "5742:20:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2863,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5742:7:13",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2871,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2869,
                        "name": "_tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2819,
                        "src": "5808:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 2866,
                            "name": "_collectionAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2817,
                            "src": "5780:18:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2865,
                          "name": "NFTCollections",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3444,
                          "src": "5765:14:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_NFTCollections_$3444_$",
                            "typeString": "type(contract NFTCollections)"
                          }
                        },
                        "id": 2867,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5765:34:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFTCollections_$3444",
                          "typeString": "contract NFTCollections"
                        }
                      },
                      "id": 2868,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 223,
                      "src": "5765:42:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view external returns (address)"
                      }
                    },
                    "id": 2870,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5765:52:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5742:75:13"
                },
                {
                  "assignments": [
                    2873
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2873,
                      "mutability": "mutable",
                      "name": "sent",
                      "nameLocation": "5832:4:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 2932,
                      "src": "5827:9:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2872,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "5827:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2879,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2876,
                        "name": "currentOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2864,
                        "src": "5858:12:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2877,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2833,
                        "src": "5872:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2874,
                        "name": "tokenCYON",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2680,
                        "src": "5839:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$77",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2875,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44,
                      "src": "5839:18:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2878,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5839:39:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5827:51:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2881,
                        "name": "sent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2873,
                        "src": "5896:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661696c656420746f2073656e642043594f4e20746f20746865204e4654206f776e65722e",
                        "id": 2882,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5902:39:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_604f2a465e5da2d3944668dd2853b95589c33b45bfa6f32de952c6982edd2c10",
                          "typeString": "literal_string \"Failed to send CYON to the NFT owner.\""
                        },
                        "value": "Failed to send CYON to the NFT owner."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_604f2a465e5da2d3944668dd2853b95589c33b45bfa6f32de952c6982edd2c10",
                          "typeString": "literal_string \"Failed to send CYON to the NFT owner.\""
                        }
                      ],
                      "id": 2880,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5888:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2883,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5888:54:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2884,
                  "nodeType": "ExpressionStatement",
                  "src": "5888:54:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2896,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 2890,
                              "name": "_tokenID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2819,
                              "src": "6049:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2887,
                                  "name": "_collectionAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2817,
                                  "src": "6017:18:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2886,
                                "name": "NFTCollections",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3444,
                                "src": "6002:14:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_NFTCollections_$3444_$",
                                  "typeString": "type(contract NFTCollections)"
                                }
                              },
                              "id": 2888,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6002:34:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_NFTCollections_$3444",
                                "typeString": "contract NFTCollections"
                              }
                            },
                            "id": 2889,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getApproved",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 358,
                            "src": "6002:46:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 2891,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6002:56:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 2894,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "6070:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Master_$3179",
                                "typeString": "contract Master"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Master_$3179",
                                "typeString": "contract Master"
                              }
                            ],
                            "id": 2893,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6062:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2892,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6062:7:13",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2895,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6062:13:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6002:73:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 2897,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6076:2:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 2885,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5994:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2898,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5994:85:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2899,
                  "nodeType": "ExpressionStatement",
                  "src": "5994:85:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2904,
                        "name": "currentOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2864,
                        "src": "6225:12:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 2905,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "6239:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2906,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6239:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2907,
                        "name": "_tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2819,
                        "src": "6251:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 2901,
                            "name": "_collectionAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2817,
                            "src": "6188:18:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2900,
                          "name": "NFTCollections",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3444,
                          "src": "6173:14:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_NFTCollections_$3444_$",
                            "typeString": "type(contract NFTCollections)"
                          }
                        },
                        "id": 2902,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6173:34:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFTCollections_$3444",
                          "typeString": "contract NFTCollections"
                        }
                      },
                      "id": 2903,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 439,
                      "src": "6173:51:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 2908,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6173:87:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2909,
                  "nodeType": "ExpressionStatement",
                  "src": "6173:87:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2914,
                        "name": "_tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2819,
                        "src": "6362:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 2915,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6371:1:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 2911,
                            "name": "_collectionAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2817,
                            "src": "6333:18:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2910,
                          "name": "NFTCollections",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3444,
                          "src": "6318:14:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_NFTCollections_$3444_$",
                            "typeString": "type(contract NFTCollections)"
                          }
                        },
                        "id": 2912,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6318:34:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFTCollections_$3444",
                          "typeString": "contract NFTCollections"
                        }
                      },
                      "id": 2913,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setPrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3420,
                      "src": "6318:43:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) external"
                      }
                    },
                    "id": 2916,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6318:55:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2917,
                  "nodeType": "ExpressionStatement",
                  "src": "6318:55:13"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "arguments": [
                              {
                                "id": 2920,
                                "name": "_collectionAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2817,
                                "src": "6412:18:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 2919,
                              "name": "NFTCollections",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3444,
                              "src": "6397:14:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_NFTCollections_$3444_$",
                                "typeString": "type(contract NFTCollections)"
                              }
                            },
                            "id": 2921,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6397:34:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NFTCollections_$3444",
                              "typeString": "contract NFTCollections"
                            }
                          },
                          "id": 2922,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "name",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 233,
                          "src": "6397:39:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                            "typeString": "function () view external returns (string memory)"
                          }
                        },
                        "id": 2923,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6397:41:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 2924,
                        "name": "_collectionAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2817,
                        "src": "6440:18:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2925,
                        "name": "_tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2819,
                        "src": "6460:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2926,
                        "name": "currentOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2864,
                        "src": "6470:12:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 2927,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "6484:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2928,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6484:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2929,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2833,
                        "src": "6496:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2918,
                      "name": "NFTSold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2695,
                      "src": "6389:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,address,uint256,address,address,uint256)"
                      }
                    },
                    "id": 2930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6389:113:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2931,
                  "nodeType": "EmitStatement",
                  "src": "6384:118:13"
                }
              ]
            },
            "documentation": {
              "id": 2815,
              "nodeType": "StructuredDocumentation",
              "src": "4690:353:13",
              "text": "@notice This function allows to transfer the money to the NFT owner and the NFT to the buyer after a direct sale.\n @dev Call this function when a buyer click on the BUY button\n @param _collectionAddress The address of the collection of the NFT to be sold/transfered\n @param _tokenID The token ID of the NFT to be sold/transfered"
            },
            "functionSelector": "a82ba76f",
            "id": 2933,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "buyNFT",
            "nameLocation": "5057:6:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2820,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2817,
                  "mutability": "mutable",
                  "name": "_collectionAddress",
                  "nameLocation": "5072:18:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2933,
                  "src": "5064:26:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2816,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5064:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2819,
                  "mutability": "mutable",
                  "name": "_tokenID",
                  "nameLocation": "5100:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2933,
                  "src": "5092:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2818,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5092:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5063:46:13"
            },
            "returnParameters": {
              "id": 2821,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5127:0:13"
            },
            "scope": 3179,
            "src": "5048:1461:13",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2987,
              "nodeType": "Block",
              "src": "6993:671:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2949,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2944,
                          "name": "_collectionAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2936,
                          "src": "7011:18:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2947,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7041:1:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2946,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7033:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2945,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7033:7:13",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2948,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7033:10:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7011:32:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520636f6c6c656374696f6e2061646472657373206e6565647320746f20626520646966666572656e742066726f6d207a65726f2e",
                        "id": 2950,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7044:57:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_75d51b7f4f784217631f4d90c02e688b32ba4b4faadf2799078ab0609aeff458",
                          "typeString": "literal_string \"The collection address needs to be different from zero.\""
                        },
                        "value": "The collection address needs to be different from zero."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_75d51b7f4f784217631f4d90c02e688b32ba4b4faadf2799078ab0609aeff458",
                          "typeString": "literal_string \"The collection address needs to be different from zero.\""
                        }
                      ],
                      "id": 2943,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7003:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2951,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7003:99:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2952,
                  "nodeType": "ExpressionStatement",
                  "src": "7003:99:13"
                },
                {
>>>>>>> Stashed changes
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
<<<<<<< Updated upstream
                        "id": 3526,
=======
                        "id": 2962,
>>>>>>> Stashed changes
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
<<<<<<< Updated upstream
                          "id": 3521,
                          "name": "_collectionAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3515,
                          "src": "5089:18:16",
=======
                          "arguments": [
                            {
                              "id": 2958,
                              "name": "_tokenID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2938,
                              "src": "7214:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2955,
                                  "name": "_collectionAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2936,
                                  "src": "7186:18:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2954,
                                "name": "NFTCollections",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3444,
                                "src": "7171:14:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_NFTCollections_$3444_$",
                                  "typeString": "type(contract NFTCollections)"
                                }
                              },
                              "id": 2956,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7171:34:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_NFTCollections_$3444",
                                "typeString": "contract NFTCollections"
                              }
                            },
                            "id": 2957,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 223,
                            "src": "7171:42:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 2959,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7171:52:13",
                          "tryCall": false,
>>>>>>> Stashed changes
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
<<<<<<< Updated upstream
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3524,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5119:1:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
=======
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 2960,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "7227:3:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2961,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "7227:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7171:66:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686973204e465420646f6573206e6f742062656c6f6e6720746f207468652063757272656e74206d6573736167652073656e6465722e",
                        "id": 2963,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7238:57:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bd03a8d87c70fb34480c591cf12a6a899128bca11952a84818f1acd30d41f66a",
                          "typeString": "literal_string \"This NFT does not belong to the current message sender.\""
                        },
                        "value": "This NFT does not belong to the current message sender."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bd03a8d87c70fb34480c591cf12a6a899128bca11952a84818f1acd30d41f66a",
                          "typeString": "literal_string \"This NFT does not belong to the current message sender.\""
                        }
                      ],
                      "id": 2953,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7163:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2964,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7163:133:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2965,
                  "nodeType": "ExpressionStatement",
                  "src": "7163:133:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2974,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 2971,
                              "name": "_tokenID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2938,
                              "src": "7468:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
>>>>>>> Stashed changes
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
<<<<<<< Updated upstream
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3523,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5111:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3522,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5111:7:16",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3525,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5111:10:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5089:32:16",
=======
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2968,
                                  "name": "_collectionAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2936,
                                  "src": "7439:18:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2967,
                                "name": "NFTCollections",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3444,
                                "src": "7424:14:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_NFTCollections_$3444_$",
                                  "typeString": "type(contract NFTCollections)"
                                }
                              },
                              "id": 2969,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7424:34:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_NFTCollections_$3444",
                                "typeString": "contract NFTCollections"
                              }
                            },
                            "id": 2970,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getPrice",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3443,
                            "src": "7424:43:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view external returns (uint256)"
                            }
                          },
                          "id": 2972,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7424:53:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2973,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7481:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7424:58:13",
>>>>>>> Stashed changes
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
<<<<<<< Updated upstream
                        "hexValue": "54686520636f6c6c656374696f6e2061646472657373206e6565647320746f20626520646966666572656e742066726f6d207a65726f2e",
                        "id": 3527,
=======
                        "hexValue": "54686973204e465420697320616c726561647920666f722073616c652e",
                        "id": 2975,
>>>>>>> Stashed changes
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< Updated upstream
                        "src": "5122:57:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_75d51b7f4f784217631f4d90c02e688b32ba4b4faadf2799078ab0609aeff458",
                          "typeString": "literal_string \"The collection address needs to be different from zero.\""
                        },
                        "value": "The collection address needs to be different from zero."
=======
                        "src": "7483:31:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_52817f8b2682fbd43b92d8b9dd8f6a19b4c843251d62615ed2ec9bdfd033d401",
                          "typeString": "literal_string \"This NFT is already for sale.\""
                        },
                        "value": "This NFT is already for sale."
>>>>>>> Stashed changes
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
<<<<<<< Updated upstream
                          "typeIdentifier": "t_stringliteral_75d51b7f4f784217631f4d90c02e688b32ba4b4faadf2799078ab0609aeff458",
                          "typeString": "literal_string \"The collection address needs to be different from zero.\""
                        }
                      ],
                      "id": 3520,
=======
                          "typeIdentifier": "t_stringliteral_52817f8b2682fbd43b92d8b9dd8f6a19b4c843251d62615ed2ec9bdfd033d401",
                          "typeString": "literal_string \"This NFT is already for sale.\""
                        }
                      ],
                      "id": 2966,
>>>>>>> Stashed changes
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< Updated upstream
                      "src": "5081:7:16",
=======
                      "src": "7416:7:13",
>>>>>>> Stashed changes
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< Updated upstream
                    "id": 3528,
=======
                    "id": 2976,
>>>>>>> Stashed changes
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< Updated upstream
                    "src": "5081:99:16",
=======
                    "src": "7416:99:13",
>>>>>>> Stashed changes
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< Updated upstream
                  "id": 3529,
                  "nodeType": "ExpressionStatement",
                  "src": "5081:99:16"
                },
                {
                  "assignments": [
                    3531
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3531,
                      "mutability": "mutable",
                      "name": "price",
                      "nameLocation": "5249:5:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 3630,
                      "src": "5241:13:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3530,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5241:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3538,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3536,
                        "name": "_tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3517,
                        "src": "5301:8:16",
=======
                  "id": 2977,
                  "nodeType": "ExpressionStatement",
                  "src": "7416:99:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2979,
                        "name": "_collectionAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2936,
                        "src": "7594:18:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2980,
                        "name": "_tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2938,
                        "src": "7614:8:13",
>>>>>>> Stashed changes
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
<<<<<<< Updated upstream
=======
                      },
                      {
                        "expression": {
                          "id": 2981,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "7624:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2982,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7624:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
>>>>>>> Stashed changes
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
<<<<<<< Updated upstream
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 3533,
                            "name": "_collectionAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3515,
                            "src": "5272:18:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3532,
                          "name": "NFTCollections",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3954,
                          "src": "5257:14:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_NFTCollections_$3954_$",
                            "typeString": "type(contract NFTCollections)"
                          }
                        },
                        "id": 3534,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5257:34:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFTCollections_$3954",
                          "typeString": "contract NFTCollections"
                        }
                      },
                      "id": 3535,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getPrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3941,
                      "src": "5257:43:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view external returns (uint256)"
                      }
                    },
                    "id": 3537,
=======
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2978,
                      "name": "setAuctionValidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1967,
                      "src": "7575:18:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,uint256,address)"
                      }
                    },
                    "id": 2983,
>>>>>>> Stashed changes
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< Updated upstream
                    "src": "5257:53:16",
                    "tryCall": false,
=======
                    "src": "7575:60:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2984,
                  "nodeType": "ExpressionStatement",
                  "src": "7575:60:13"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 2985,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7653:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2942,
                  "id": 2986,
                  "nodeType": "Return",
                  "src": "7646:11:13"
                }
              ]
            },
            "documentation": {
              "id": 2934,
              "nodeType": "StructuredDocumentation",
              "src": "6515:379:13",
              "text": "@notice This function allows to initiate an auction by verifying owner and tokenID\n @dev Call this function before starting the auction procedure\n @param _collectionAddress The address of the collection of the NFT to start an auction\n @param _tokenID The token ID of the NFT to start an auction\n @return _validity True if the auction is authorized"
            },
            "functionSelector": "d189ab19",
            "id": 2988,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "requestAuction",
            "nameLocation": "6908:14:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2939,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2936,
                  "mutability": "mutable",
                  "name": "_collectionAddress",
                  "nameLocation": "6931:18:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2988,
                  "src": "6923:26:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2935,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6923:7:13",
                    "stateMutability": "nonpayable",
>>>>>>> Stashed changes
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
<<<<<<< Updated upstream
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5241:69:16"
                },
=======
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2938,
                  "mutability": "mutable",
                  "name": "_tokenID",
                  "nameLocation": "6959:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2988,
                  "src": "6951:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2937,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6951:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6922:46:13"
            },
            "returnParameters": {
              "id": 2942,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2941,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2988,
                  "src": "6987:4:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2940,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6987:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6986:6:13"
            },
            "scope": 3179,
            "src": "6899:765:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3151,
              "nodeType": "Block",
              "src": "8076:2450:13",
              "statements": [
>>>>>>> Stashed changes
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
<<<<<<< Updated upstream
                        "id": 3542,
=======
                        "id": 3002,
>>>>>>> Stashed changes
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
<<<<<<< Updated upstream
                          "id": 3540,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3531,
                          "src": "5328:5:16",
=======
                          "id": 2997,
                          "name": "_collectionAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2991,
                          "src": "8094:18:13",
>>>>>>> Stashed changes
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
<<<<<<< Updated upstream
                          "hexValue": "30",
                          "id": 3541,
=======
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3000,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8124:1:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2999,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8116:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2998,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8116:7:13",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3001,
>>>>>>> Stashed changes
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
<<<<<<< Updated upstream
                          "nodeType": "Literal",
                          "src": "5336:1:16",
=======
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8116:10:13",
                          "tryCall": false,
>>>>>>> Stashed changes
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
<<<<<<< Updated upstream
                        "src": "5328:9:16",
=======
                        "src": "8094:32:13",
>>>>>>> Stashed changes
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
<<<<<<< Updated upstream
                        "hexValue": "54686973204e4654206973206e6f7420666f722073616c652e",
                        "id": 3543,
=======
                        "hexValue": "54686520636f6c6c656374696f6e2061646472657373206e6565647320746f20626520646966666572656e742066726f6d207a65726f2e",
                        "id": 3003,
>>>>>>> Stashed changes
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< Updated upstream
                        "src": "5338:27:16",
=======
                        "src": "8127:57:13",
>>>>>>> Stashed changes
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_795e888268ddf9337f106a3868637d7c62055ce14f5dda1abe76d3564d875fc2",
                          "typeString": "literal_string \"This NFT is not for sale.\""
                        },
                        "value": "This NFT is not for sale."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_795e888268ddf9337f106a3868637d7c62055ce14f5dda1abe76d3564d875fc2",
                          "typeString": "literal_string \"This NFT is not for sale.\""
                        }
                      ],
<<<<<<< Updated upstream
                      "id": 3539,
=======
                      "id": 2996,
>>>>>>> Stashed changes
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< Updated upstream
                      "src": "5320:7:16",
=======
                      "src": "8086:7:13",
>>>>>>> Stashed changes
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< Updated upstream
                    "id": 3544,
=======
                    "id": 3004,
>>>>>>> Stashed changes
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< Updated upstream
                    "src": "5320:46:16",
=======
                    "src": "8086:99:13",
>>>>>>> Stashed changes
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< Updated upstream
                  "id": 3545,
                  "nodeType": "ExpressionStatement",
                  "src": "5320:46:16"
=======
                  "id": 3005,
                  "nodeType": "ExpressionStatement",
                  "src": "8086:99:13"
>>>>>>> Stashed changes
                },
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< Updated upstream
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3557,
=======
                        "id": 3010,
                        "name": "_tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2993,
                        "src": "8289:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 3007,
                            "name": "_collectionAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2991,
                            "src": "8261:18:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3006,
                          "name": "NFTCollections",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3444,
                          "src": "8246:14:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_NFTCollections_$3444_$",
                            "typeString": "type(contract NFTCollections)"
                          }
                        },
                        "id": 3008,
>>>>>>> Stashed changes
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
<<<<<<< Updated upstream
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 3549,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "5496:3:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3550,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5496:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 3553,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "5516:4:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Master_$3668",
                                    "typeString": "contract Master"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Master_$3668",
                                    "typeString": "contract Master"
                                  }
                                ],
                                "id": 3552,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5508:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3551,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5508:7:16",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3554,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5508:13:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 3547,
                              "name": "tokenCYON",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3361,
                              "src": "5476:9:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$4032",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 3548,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4009,
                            "src": "5476:19:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 3555,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5476:46:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 3556,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3531,
                          "src": "5526:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5476:55:16",
=======
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8246:34:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFTCollections_$3444",
                          "typeString": "contract NFTCollections"
                        }
                      },
                      "id": 3009,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 223,
                      "src": "8246:42:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view external returns (address)"
                      }
                    },
                    "id": 3011,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8246:52:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3012,
                  "nodeType": "ExpressionStatement",
                  "src": "8246:52:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3016,
                            "name": "_collectionAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2991,
                            "src": "8407:18:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 3017,
                            "name": "_tokenID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2993,
                            "src": "8426:8:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 3014,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "8390:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Master_$3179",
                              "typeString": "contract Master"
                            }
                          },
                          "id": 3015,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isInAuction",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2668,
                          "src": "8390:16:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view external returns (bool)"
                          }
                        },
                        "id": 3018,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8390:45:13",
                        "tryCall": false,
>>>>>>> Stashed changes
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
<<<<<<< Updated upstream
                        "hexValue": "43594f4e20746f6b656e20616c6c6f77616e636520746f6f206c6f772e",
                        "id": 3558,
=======
                        "hexValue": "54686973204e465420646964206e6f7420737461727420616e2061756374696f6e2e",
                        "id": 3019,
>>>>>>> Stashed changes
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< Updated upstream
                        "src": "5533:31:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ad8e9a422fe1279413cfad79198ac5655e066c8f7548850b9f2131c6ae0aa8bd",
                          "typeString": "literal_string \"CYON token allowance too low.\""
                        },
                        "value": "CYON token allowance too low."
=======
                        "src": "8436:36:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_501011de456270e6d688e8443437231c2568dc785d874a77f30894a009ba645f",
                          "typeString": "literal_string \"This NFT did not start an auction.\""
                        },
                        "value": "This NFT did not start an auction."
>>>>>>> Stashed changes
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
<<<<<<< Updated upstream
                          "typeIdentifier": "t_stringliteral_ad8e9a422fe1279413cfad79198ac5655e066c8f7548850b9f2131c6ae0aa8bd",
                          "typeString": "literal_string \"CYON token allowance too low.\""
                        }
                      ],
                      "id": 3546,
=======
                          "typeIdentifier": "t_stringliteral_501011de456270e6d688e8443437231c2568dc785d874a77f30894a009ba645f",
                          "typeString": "literal_string \"This NFT did not start an auction.\""
                        }
                      ],
                      "id": 3013,
>>>>>>> Stashed changes
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< Updated upstream
                      "src": "5468:7:16",
=======
                      "src": "8382:7:13",
>>>>>>> Stashed changes
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< Updated upstream
                    "id": 3559,
=======
                    "id": 3020,
>>>>>>> Stashed changes
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< Updated upstream
                    "src": "5468:97:16",
=======
                    "src": "8382:91:13",
>>>>>>> Stashed changes
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< Updated upstream
                  "id": 3560,
                  "nodeType": "ExpressionStatement",
                  "src": "5468:97:16"
                },
                {
                  "assignments": [
                    3562
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3562,
                      "mutability": "mutable",
                      "name": "currentOwner",
                      "nameLocation": "5667:12:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 3630,
                      "src": "5659:20:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3561,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5659:7:16",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3569,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3567,
                        "name": "_tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3517,
                        "src": "5725:8:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
=======
                  "id": 3021,
                  "nodeType": "ExpressionStatement",
                  "src": "8382:91:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3025,
                            "name": "_collectionAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2991,
                            "src": "8560:18:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 3026,
                            "name": "_tokenID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2993,
                            "src": "8579:8:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 3023,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "8531:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Master_$3179",
                              "typeString": "contract Master"
                            }
                          },
                          "id": 3024,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "checkAuctionTimeExpired",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2521,
                          "src": "8531:28:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view external returns (bool)"
                          }
                        },
                        "id": 3027,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8531:57:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468652061756374696f6e20686173206e6f742066696e6973686564207965742e",
                        "id": 3028,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8590:35:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c28146fd998b3c26c3dbbf224b649b757f3a777e9384ac0ea067659d0f358f25",
                          "typeString": "literal_string \"The auction has not finished yet.\""
                        },
                        "value": "The auction has not finished yet."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c28146fd998b3c26c3dbbf224b649b757f3a777e9384ac0ea067659d0f358f25",
                          "typeString": "literal_string \"The auction has not finished yet.\""
                        }
                      ],
                      "id": 3022,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8523:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3029,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8523:103:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3030,
                  "nodeType": "ExpressionStatement",
                  "src": "8523:103:13"
                },
                {
                  "assignments": [
                    3032
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3032,
                      "mutability": "mutable",
                      "name": "price",
                      "nameLocation": "8721:5:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 3151,
                      "src": "8713:13:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3031,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8713:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3038,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3035,
                        "name": "_collectionAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2991,
                        "src": "8755:18:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3036,
                        "name": "_tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2993,
                        "src": "8774:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3033,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967268,
                        "src": "8729:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Master_$3179",
                          "typeString": "contract Master"
                        }
                      },
                      "id": 3034,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getCurrentHighestBid",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2599,
                      "src": "8729:25:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) view external returns (uint256)"
                      }
                    },
                    "id": 3037,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8729:54:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8713:70:13"
                },
                {
                  "assignments": [
                    3040
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3040,
                      "mutability": "mutable",
                      "name": "currentOwner",
                      "nameLocation": "8801:12:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 3151,
                      "src": "8793:20:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3039,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8793:7:13",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3047,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3045,
                        "name": "_tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2993,
                        "src": "8859:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
>>>>>>> Stashed changes
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
<<<<<<< Updated upstream
                            "id": 3564,
                            "name": "_collectionAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3515,
                            "src": "5697:18:16",
=======
                            "id": 3042,
                            "name": "_collectionAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2991,
                            "src": "8831:18:13",
>>>>>>> Stashed changes
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
<<<<<<< Updated upstream
                          "id": 3563,
                          "name": "NFTCollections",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3954,
                          "src": "5682:14:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_NFTCollections_$3954_$",
                            "typeString": "type(contract NFTCollections)"
                          }
                        },
                        "id": 3565,
=======
                          "id": 3041,
                          "name": "NFTCollections",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3444,
                          "src": "8816:14:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_NFTCollections_$3444_$",
                            "typeString": "type(contract NFTCollections)"
                          }
                        },
                        "id": 3043,
>>>>>>> Stashed changes
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< Updated upstream
                        "src": "5682:34:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFTCollections_$3954",
                          "typeString": "contract NFTCollections"
                        }
                      },
                      "id": 3566,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 834,
                      "src": "5682:42:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view external returns (address)"
                      }
                    },
                    "id": 3568,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5682:52:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5659:75:16"
                },
                {
                  "assignments": [
                    3571
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3571,
                      "mutability": "mutable",
                      "name": "sent",
                      "nameLocation": "5749:4:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 3630,
                      "src": "5744:9:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 3570,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "5744:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3577,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3574,
                        "name": "currentOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3562,
                        "src": "5775:12:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3575,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3531,
                        "src": "5789:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3572,
                        "name": "tokenCYON",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3361,
                        "src": "5756:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$4032",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 3573,
=======
                        "src": "8816:34:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFTCollections_$3444",
                          "typeString": "contract NFTCollections"
                        }
                      },
                      "id": 3044,
>>>>>>> Stashed changes
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
<<<<<<< Updated upstream
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3999,
                      "src": "5756:18:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 3576,
=======
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 223,
                      "src": "8816:42:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view external returns (address)"
                      }
                    },
                    "id": 3046,
>>>>>>> Stashed changes
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< Updated upstream
                    "src": "5756:39:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5744:51:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3579,
                        "name": "sent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3571,
                        "src": "5813:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661696c656420746f2073656e642043594f4e20746f20746865204e4654206f776e65722e",
                        "id": 3580,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5819:39:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_604f2a465e5da2d3944668dd2853b95589c33b45bfa6f32de952c6982edd2c10",
                          "typeString": "literal_string \"Failed to send CYON to the NFT owner.\""
                        },
                        "value": "Failed to send CYON to the NFT owner."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_604f2a465e5da2d3944668dd2853b95589c33b45bfa6f32de952c6982edd2c10",
                          "typeString": "literal_string \"Failed to send CYON to the NFT owner.\""
                        }
                      ],
                      "id": 3578,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5805:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5805:54:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3582,
                  "nodeType": "ExpressionStatement",
                  "src": "5805:54:16"
=======
                    "src": "8816:52:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8793:75:13"
                },
                {
                  "assignments": [
                    3049
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3049,
                      "mutability": "mutable",
                      "name": "highestBidder",
                      "nameLocation": "8886:13:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 3151,
                      "src": "8878:21:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3048,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8878:7:13",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3055,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3052,
                        "name": "_collectionAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2991,
                        "src": "8931:18:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3053,
                        "name": "_tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2993,
                        "src": "8951:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3050,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967268,
                        "src": "8902:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Master_$3179",
                          "typeString": "contract Master"
                        }
                      },
                      "id": 3051,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getCurrentHighestBidder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2560,
                      "src": "8902:28:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (address,uint256) view external returns (address)"
                      }
                    },
                    "id": 3054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8902:58:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8878:82:13"
>>>>>>> Stashed changes
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
<<<<<<< Updated upstream
                        "id": 3594,
=======
                        "id": 3062,
>>>>>>> Stashed changes
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
<<<<<<< Updated upstream
                          "arguments": [
                            {
                              "id": 3588,
                              "name": "_tokenID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3517,
                              "src": "5966:8:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 3585,
                                  "name": "_collectionAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3515,
                                  "src": "5934:18:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 3584,
                                "name": "NFTCollections",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3954,
                                "src": "5919:14:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_NFTCollections_$3954_$",
                                  "typeString": "type(contract NFTCollections)"
                                }
                              },
                              "id": 3586,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5919:34:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_NFTCollections_$3954",
                                "typeString": "contract NFTCollections"
                              }
                            },
                            "id": 3587,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getApproved",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 969,
                            "src": "5919:46:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 3589,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5919:56:16",
                          "tryCall": false,
=======
                          "id": 3057,
                          "name": "highestBidder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3049,
                          "src": "8978:13:13",
>>>>>>> Stashed changes
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
<<<<<<< Updated upstream
                              "id": 3592,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "5987:4:16",
=======
                              "hexValue": "30",
                              "id": 3060,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9003:1:13",
>>>>>>> Stashed changes
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Master_$3668",
                                "typeString": "contract Master"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
<<<<<<< Updated upstream
                                "typeIdentifier": "t_contract$_Master_$3668",
                                "typeString": "contract Master"
                              }
                            ],
                            "id": 3591,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5979:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3590,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5979:7:16",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3593,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5979:13:16",
=======
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3059,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8995:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3058,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8995:7:13",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3061,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8995:10:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8978:27:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4572726f723a2074686520686967686573742062696464657220697320746865207a65726f20616464726573732e",
                        "id": 3063,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9006:48:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a39f1af373a3b18a733a1f8206b930382ab93f9170098f2793be2b48a56be00e",
                          "typeString": "literal_string \"Error: the highest bidder is the zero address.\""
                        },
                        "value": "Error: the highest bidder is the zero address."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a39f1af373a3b18a733a1f8206b930382ab93f9170098f2793be2b48a56be00e",
                          "typeString": "literal_string \"Error: the highest bidder is the zero address.\""
                        }
                      ],
                      "id": 3056,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8970:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8970:85:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3065,
                  "nodeType": "ExpressionStatement",
                  "src": "8970:85:13"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3068,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3066,
                      "name": "price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3032,
                      "src": "9197:5:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 3067,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9205:1:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9197:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3150,
                  "nodeType": "IfStatement",
                  "src": "9194:1326:13",
                  "trueBody": {
                    "id": 3149,
                    "nodeType": "Block",
                    "src": "9208:1312:13",
                    "statements": [
                      {
                        "assignments": [
                          3070,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3070,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "9281:7:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 3149,
                            "src": "9276:12:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 3069,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "9276:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 3080,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "",
                              "id": 3078,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9334:2:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 3073,
                                    "name": "currentOwner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3040,
                                    "src": "9302:12:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 3072,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "9294:8:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_payable_$",
                                    "typeString": "type(address payable)"
                                  },
                                  "typeName": {
                                    "id": 3071,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "9294:8:13",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 3074,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9294:21:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 3075,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "9294:26:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 3077,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 3076,
                                "name": "price",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3032,
                                "src": "9327:5:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "9294:39:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 3079,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9294:43:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9275:62:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3082,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3070,
                              "src": "9359:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4661696c656420746f2073656e642045544820746f20746865204e4654206f776e65722e",
                              "id": 3083,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9368:38:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c3acfb094a156b84661b3c3c57a84f0a875490c81d212e3c337f85800112c49c",
                                "typeString": "literal_string \"Failed to send ETH to the NFT owner.\""
                              },
                              "value": "Failed to send ETH to the NFT owner."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c3acfb094a156b84661b3c3c57a84f0a875490c81d212e3c337f85800112c49c",
                                "typeString": "literal_string \"Failed to send ETH to the NFT owner.\""
                              }
                            ],
                            "id": 3081,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "9351:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3084,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9351:56:13",
>>>>>>> Stashed changes
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
<<<<<<< Updated upstream
                        "src": "5919:73:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 3595,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5993:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 3583,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5911:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5911:85:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3597,
                  "nodeType": "ExpressionStatement",
                  "src": "5911:85:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3602,
                        "name": "currentOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3562,
                        "src": "6142:12:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 3603,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "6156:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3604,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6156:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3605,
                        "name": "_tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3517,
                        "src": "6168:8:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 3599,
                            "name": "_collectionAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3515,
                            "src": "6105:18:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3598,
                          "name": "NFTCollections",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3954,
                          "src": "6090:14:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_NFTCollections_$3954_$",
                            "typeString": "type(contract NFTCollections)"
                          }
                        },
                        "id": 3600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6090:34:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFTCollections_$3954",
                          "typeString": "contract NFTCollections"
                        }
                      },
                      "id": 3601,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1050,
                      "src": "6090:51:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 3606,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6090:87:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3607,
                  "nodeType": "ExpressionStatement",
                  "src": "6090:87:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3612,
                        "name": "_tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3517,
                        "src": "6279:8:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 3613,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6288:1:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 3609,
                            "name": "_collectionAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3515,
                            "src": "6250:18:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3608,
                          "name": "NFTCollections",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3954,
                          "src": "6235:14:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_NFTCollections_$3954_$",
                            "typeString": "type(contract NFTCollections)"
                          }
                        },
                        "id": 3610,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6235:34:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFTCollections_$3954",
                          "typeString": "contract NFTCollections"
                        }
                      },
                      "id": 3611,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setPrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3909,
                      "src": "6235:43:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) external"
                      }
                    },
                    "id": 3614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6235:55:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3615,
                  "nodeType": "ExpressionStatement",
                  "src": "6235:55:16"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
=======
                        "id": 3085,
                        "nodeType": "ExpressionStatement",
                        "src": "9351:56:13"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 3088,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3086,
                            "name": "highestBidder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3049,
                            "src": "9580:13:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 3087,
                            "name": "currentOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3040,
                            "src": "9597:12:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9580:29:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3143,
                        "nodeType": "IfStatement",
                        "src": "9577:828:13",
                        "trueBody": {
                          "id": 3142,
                          "nodeType": "Block",
                          "src": "9611:794:13",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 3093,
                                    "name": "_tokenID",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2993,
                                    "src": "9673:8:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 3094,
                                    "name": "price",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3032,
                                    "src": "9682:5:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 3090,
                                        "name": "_collectionAddress",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2991,
                                        "src": "9644:18:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 3089,
                                      "name": "NFTCollections",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3444,
                                      "src": "9629:14:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_NFTCollections_$3444_$",
                                        "typeString": "type(contract NFTCollections)"
                                      }
                                    },
                                    "id": 3091,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9629:34:13",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_NFTCollections_$3444",
                                      "typeString": "contract NFTCollections"
                                    }
                                  },
                                  "id": 3092,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "setPrice",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3420,
                                  "src": "9629:43:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256,uint256) external"
                                  }
                                },
                                "id": 3095,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9629:59:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3096,
                              "nodeType": "ExpressionStatement",
                              "src": "9629:59:13"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    "id": 3108,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "arguments": [
                                        {
                                          "id": 3102,
                                          "name": "_tokenID",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2993,
                                          "src": "9880:8:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "arguments": [
                                            {
                                              "id": 3099,
                                              "name": "_collectionAddress",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2991,
                                              "src": "9848:18:13",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "id": 3098,
                                            "name": "NFTCollections",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3444,
                                            "src": "9833:14:13",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_NFTCollections_$3444_$",
                                              "typeString": "type(contract NFTCollections)"
                                            }
                                          },
                                          "id": 3100,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "9833:34:13",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_NFTCollections_$3444",
                                            "typeString": "contract NFTCollections"
                                          }
                                        },
                                        "id": 3101,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "getApproved",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 358,
                                        "src": "9833:46:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                          "typeString": "function (uint256) view external returns (address)"
                                        }
                                      },
                                      "id": 3103,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "9833:56:13",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "arguments": [
                                        {
                                          "id": 3106,
                                          "name": "this",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4294967268,
                                          "src": "9901:4:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_Master_$3179",
                                            "typeString": "contract Master"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_Master_$3179",
                                            "typeString": "contract Master"
                                          }
                                        ],
                                        "id": 3105,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "9893:7:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 3104,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "9893:7:13",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 3107,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "9893:13:13",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "src": "9833:73:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "",
                                    "id": 3109,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "9907:2:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    },
                                    "value": ""
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    }
                                  ],
                                  "id": 3097,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    4294967278,
                                    4294967278
                                  ],
                                  "referencedDeclaration": 4294967278,
                                  "src": "9825:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 3110,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9825:85:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3111,
                              "nodeType": "ExpressionStatement",
                              "src": "9825:85:13"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 3116,
                                    "name": "currentOwner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3040,
                                    "src": "10064:12:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 3117,
                                    "name": "highestBidder",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3049,
                                    "src": "10078:13:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 3118,
                                    "name": "_tokenID",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2993,
                                    "src": "10093:8:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 3113,
                                        "name": "_collectionAddress",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2991,
                                        "src": "10027:18:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 3112,
                                      "name": "NFTCollections",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3444,
                                      "src": "10012:14:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_NFTCollections_$3444_$",
                                        "typeString": "type(contract NFTCollections)"
                                      }
                                    },
                                    "id": 3114,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10012:34:13",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_NFTCollections_$3444",
                                      "typeString": "contract NFTCollections"
                                    }
                                  },
                                  "id": 3115,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "safeTransferFrom",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 439,
                                  "src": "10012:51:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,address,uint256) external"
                                  }
                                },
                                "id": 3119,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10012:90:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3120,
                              "nodeType": "ExpressionStatement",
                              "src": "10012:90:13"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 3125,
                                    "name": "_tokenID",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2993,
                                    "src": "10239:8:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 3126,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "10248:1:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 3122,
                                        "name": "_collectionAddress",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2991,
                                        "src": "10210:18:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 3121,
                                      "name": "NFTCollections",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3444,
                                      "src": "10195:14:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_NFTCollections_$3444_$",
                                        "typeString": "type(contract NFTCollections)"
                                      }
                                    },
                                    "id": 3123,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10195:34:13",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_NFTCollections_$3444",
                                      "typeString": "contract NFTCollections"
                                    }
                                  },
                                  "id": 3124,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "setPrice",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3420,
                                  "src": "10195:43:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256,uint256) external"
                                  }
                                },
                                "id": 3127,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10195:55:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3128,
                              "nodeType": "ExpressionStatement",
                              "src": "10195:55:13"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "expression": {
                                        "arguments": [
                                          {
                                            "id": 3131,
                                            "name": "_collectionAddress",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2991,
                                            "src": "10297:18:13",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "id": 3130,
                                          "name": "NFTCollections",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3444,
                                          "src": "10282:14:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_NFTCollections_$3444_$",
                                            "typeString": "type(contract NFTCollections)"
                                          }
                                        },
                                        "id": 3132,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "10282:34:13",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_NFTCollections_$3444",
                                          "typeString": "contract NFTCollections"
                                        }
                                      },
                                      "id": 3133,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "name",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 233,
                                      "src": "10282:39:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                                        "typeString": "function () view external returns (string memory)"
                                      }
                                    },
                                    "id": 3134,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10282:41:13",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  },
                                  {
                                    "id": 3135,
                                    "name": "_collectionAddress",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2991,
                                    "src": "10325:18:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 3136,
                                    "name": "_tokenID",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2993,
                                    "src": "10345:8:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 3137,
                                    "name": "currentOwner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3040,
                                    "src": "10355:12:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 3138,
                                    "name": "highestBidder",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3049,
                                    "src": "10369:13:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 3139,
                                    "name": "price",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3032,
                                    "src": "10384:5:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 3129,
                                  "name": "NFTSold",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2695,
                                  "src": "10274:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (string memory,address,uint256,address,address,uint256)"
                                  }
                                },
                                "id": 3140,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10274:116:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3141,
                              "nodeType": "EmitStatement",
                              "src": "10269:121:13"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3145,
                              "name": "_collectionAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2991,
                              "src": "10480:18:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3146,
                              "name": "_tokenID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2993,
                              "src": "10500:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
>>>>>>> Stashed changes
                          "expression": {
                            "arguments": [
                              {
<<<<<<< Updated upstream
                                "id": 3618,
                                "name": "_collectionAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3515,
                                "src": "6329:18:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 3617,
                              "name": "NFTCollections",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3954,
                              "src": "6314:14:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_NFTCollections_$3954_$",
                                "typeString": "type(contract NFTCollections)"
                              }
                            },
                            "id": 3619,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6314:34:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NFTCollections_$3954",
                              "typeString": "contract NFTCollections"
                            }
                          },
                          "id": 3620,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "name",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 844,
                          "src": "6314:39:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                            "typeString": "function () view external returns (string memory)"
                          }
                        },
                        "id": 3621,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6314:41:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 3622,
                        "name": "_collectionAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3515,
                        "src": "6357:18:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3623,
                        "name": "_tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3517,
                        "src": "6377:8:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3624,
                        "name": "currentOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3562,
                        "src": "6387:12:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 3625,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "6401:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3626,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6401:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3627,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3531,
                        "src": "6413:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3616,
                      "name": "NFTSold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3376,
                      "src": "6306:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,address,uint256,address,address,uint256)"
                      }
                    },
                    "id": 3628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6306:113:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3629,
                  "nodeType": "EmitStatement",
                  "src": "6301:118:16"
                }
              ]
            },
            "documentation": {
              "id": 3513,
              "nodeType": "StructuredDocumentation",
              "src": "4627:333:16",
              "text": "@notice This function allows to transfer the money to the NFT owner and the NFT to the buyer.\n @dev Call this function when a buyer click on the BUY button\n @param _collectionAddress The address of the collection of the NFT to be sold/transfered\n @param _tokenID The token ID of the NFT to be sold/transfered"
            },
            "functionSelector": "a82ba76f",
            "id": 3631,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "buyNFT",
            "nameLocation": "4974:6:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3518,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3515,
                  "mutability": "mutable",
                  "name": "_collectionAddress",
                  "nameLocation": "4989:18:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3631,
                  "src": "4981:26:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3514,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4981:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3517,
                  "mutability": "mutable",
                  "name": "_tokenID",
                  "nameLocation": "5017:8:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3631,
                  "src": "5009:16:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3516,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5009:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4980:46:16"
            },
            "returnParameters": {
              "id": 3519,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5044:0:16"
            },
            "scope": 3668,
            "src": "4965:1461:16",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3666,
              "nodeType": "Block",
              "src": "7124:251:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 3654,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3648,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3642,
                                "name": "_tokenID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3636,
                                "src": "7143:8:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 3644,
                                        "name": "_collectionAddress",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3634,
                                        "src": "7170:18:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 3643,
                                      "name": "NFTCollections",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3954,
                                      "src": "7155:14:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_NFTCollections_$3954_$",
                                        "typeString": "type(contract NFTCollections)"
                                      }
                                    },
                                    "id": 3645,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7155:34:16",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_NFTCollections_$3954",
                                      "typeString": "contract NFTCollections"
                                    }
                                  },
                                  "id": 3646,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "getTotalSupply",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3953,
                                  "src": "7155:49:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                    "typeString": "function () view external returns (uint256)"
                                  }
                                },
                                "id": 3647,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7155:51:16",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "7143:63:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 3649,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "7142:65:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3652,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3650,
                                "name": "_tokenID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3636,
                                "src": "7212:8:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 3651,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7223:1:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "7212:12:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 3653,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "7211:14:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "7142:83:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468697320746f6b656e20494420646f6573206e6f742065786973742e",
                        "id": 3655,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7227:31:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3560abc763ffb7960cf5b3b423463cddda9049a7ba8f6add1f51e3df44d662ec",
                          "typeString": "literal_string \"This token ID does not exist.\""
                        },
                        "value": "This token ID does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3560abc763ffb7960cf5b3b423463cddda9049a7ba8f6add1f51e3df44d662ec",
                          "typeString": "literal_string \"This token ID does not exist.\""
                        }
                      ],
                      "id": 3641,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7134:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3656,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7134:125:16",
                    "tryCall": false,
=======
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3144,
                            "name": "endAuction",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2479,
                            "src": "10469:10:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 3147,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10469:40:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3148,
                        "nodeType": "ExpressionStatement",
                        "src": "10469:40:13"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 2989,
              "nodeType": "StructuredDocumentation",
              "src": "7670:324:13",
              "text": "@notice This function allows to close an auction when the time has expired\n @dev Call this function from the front when the auction time has expired\n @param _collectionAddress The address of the collection of the NFT to close the auction\n @param _tokenID The token ID of the NFT to close the auction"
            },
            "functionSelector": "438364a1",
            "id": 3152,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "closeAuction",
            "nameLocation": "8008:12:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2994,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2991,
                  "mutability": "mutable",
                  "name": "_collectionAddress",
                  "nameLocation": "8029:18:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3152,
                  "src": "8021:26:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2990,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8021:7:13",
                    "stateMutability": "nonpayable",
>>>>>>> Stashed changes
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
<<<<<<< Updated upstream
                  "id": 3657,
                  "nodeType": "ExpressionStatement",
                  "src": "7134:125:16"
=======
                  "visibility": "internal"
>>>>>>> Stashed changes
                },
                {
                  "constant": false,
                  "id": 2993,
                  "mutability": "mutable",
                  "name": "_tokenID",
                  "nameLocation": "8057:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3152,
                  "src": "8049:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2992,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8049:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8020:46:13"
            },
            "returnParameters": {
              "id": 2995,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8076:0:13"
            },
            "scope": 3179,
            "src": "7999:2527:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3177,
              "nodeType": "Block",
              "src": "11224:389:13",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
<<<<<<< Updated upstream
                        "arguments": [
                          {
                            "id": 3662,
                            "name": "_tokenID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3636,
                            "src": "7358:8:16",
=======
                        "id": 3166,
                        "name": "_tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3157,
                        "src": "11452:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 3163,
                            "name": "_collectionAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3155,
                            "src": "11424:18:13",
>>>>>>> Stashed changes
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
<<<<<<< Updated upstream
                          "expression": {
                            "arguments": [
                              {
                                "id": 3659,
                                "name": "_collectionAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3634,
                                "src": "7329:18:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 3658,
                              "name": "NFTCollections",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3954,
                              "src": "7314:14:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_NFTCollections_$3954_$",
                                "typeString": "type(contract NFTCollections)"
                              }
                            },
                            "id": 3660,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7314:34:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NFTCollections_$3954",
                              "typeString": "contract NFTCollections"
                            }
                          },
                          "id": 3661,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tokenURI",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1763,
                          "src": "7314:43:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_string_memory_ptr_$",
                            "typeString": "function (uint256) view external returns (string memory)"
                          }
                        },
                        "id": 3663,
=======
                          "id": 3162,
                          "name": "NFTCollections",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3444,
                          "src": "11409:14:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_NFTCollections_$3444_$",
                            "typeString": "type(contract NFTCollections)"
                          }
                        },
                        "id": 3164,
>>>>>>> Stashed changes
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< Updated upstream
                        "src": "7314:53:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "id": 3664,
=======
                        "src": "11409:34:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFTCollections_$3444",
                          "typeString": "contract NFTCollections"
                        }
                      },
                      "id": 3165,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 223,
                      "src": "11409:42:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view external returns (address)"
                      }
                    },
                    "id": 3167,
>>>>>>> Stashed changes
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
<<<<<<< Updated upstream
                    "nodeType": "TupleExpression",
                    "src": "7313:55:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 3640,
                  "id": 3665,
                  "nodeType": "Return",
                  "src": "7307:61:16"
=======
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11409:52:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3168,
                  "nodeType": "ExpressionStatement",
                  "src": "11409:52:13"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "arguments": [
                          {
                            "id": 3173,
                            "name": "_tokenID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3157,
                            "src": "11596:8:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 3170,
                                "name": "_collectionAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3155,
                                "src": "11567:18:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 3169,
                              "name": "NFTCollections",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3444,
                              "src": "11552:14:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_NFTCollections_$3444_$",
                                "typeString": "type(contract NFTCollections)"
                              }
                            },
                            "id": 3171,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11552:34:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NFTCollections_$3444",
                              "typeString": "contract NFTCollections"
                            }
                          },
                          "id": 3172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tokenURI",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1152,
                          "src": "11552:43:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_string_memory_ptr_$",
                            "typeString": "function (uint256) view external returns (string memory)"
                          }
                        },
                        "id": 3174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11552:53:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "id": 3175,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "11551:55:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 3161,
                  "id": 3176,
                  "nodeType": "Return",
                  "src": "11545:61:13"
>>>>>>> Stashed changes
                }
              ]
            },
            "documentation": {
<<<<<<< Updated upstream
              "id": 3632,
              "nodeType": "StructuredDocumentation",
              "src": "6706:313:16",
              "text": "@notice This function returns the URI data of the given NFT\n @dev Call this function to get the metadata of the NFT\n @param _collectionAddress The address of the collection of the NFT to get the URI\n @param _tokenID The token ID of the NFT to get the URI\n @return _URI The URI data"
            },
            "functionSelector": "47237162",
            "id": 3667,
=======
              "id": 3153,
              "nodeType": "StructuredDocumentation",
              "src": "10806:313:13",
              "text": "@notice This function returns the URI data of the given NFT\n @dev Call this function to get the metadata of the NFT\n @param _collectionAddress The address of the collection of the NFT to get the URI\n @param _tokenID The token ID of the NFT to get the URI\n @return _URI The URI data"
            },
            "functionSelector": "47237162",
            "id": 3178,
>>>>>>> Stashed changes
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getURI",
<<<<<<< Updated upstream
            "nameLocation": "7033:6:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3637,
=======
            "nameLocation": "11133:6:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3158,
>>>>>>> Stashed changes
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< Updated upstream
                  "id": 3634,
                  "mutability": "mutable",
                  "name": "_collectionAddress",
                  "nameLocation": "7048:18:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3667,
                  "src": "7040:26:16",
=======
                  "id": 3155,
                  "mutability": "mutable",
                  "name": "_collectionAddress",
                  "nameLocation": "11148:18:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3178,
                  "src": "11140:26:13",
>>>>>>> Stashed changes
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< Updated upstream
                    "id": 3633,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7040:7:16",
=======
                    "id": 3154,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11140:7:13",
>>>>>>> Stashed changes
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< Updated upstream
                  "id": 3636,
                  "mutability": "mutable",
                  "name": "_tokenID",
                  "nameLocation": "7076:8:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3667,
                  "src": "7068:16:16",
=======
                  "id": 3157,
                  "mutability": "mutable",
                  "name": "_tokenID",
                  "nameLocation": "11176:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3178,
                  "src": "11168:16:13",
>>>>>>> Stashed changes
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< Updated upstream
                    "id": 3635,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7068:7:16",
=======
                    "id": 3156,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11168:7:13",
>>>>>>> Stashed changes
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< Updated upstream
              "src": "7039:46:16"
            },
            "returnParameters": {
              "id": 3640,
=======
              "src": "11139:46:13"
            },
            "returnParameters": {
              "id": 3161,
>>>>>>> Stashed changes
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< Updated upstream
                  "id": 3639,
=======
                  "id": 3160,
>>>>>>> Stashed changes
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< Updated upstream
                  "scope": 3667,
                  "src": "7109:13:16",
=======
                  "scope": 3178,
                  "src": "11209:13:13",
>>>>>>> Stashed changes
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
<<<<<<< Updated upstream
                    "id": 3638,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7109:6:16",
=======
                    "id": 3159,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "11209:6:13",
>>>>>>> Stashed changes
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< Updated upstream
              "src": "7108:15:16"
            },
            "scope": 3668,
            "src": "7024:351:16",
=======
              "src": "11208:15:13"
            },
            "scope": 3179,
            "src": "11124:489:13",
>>>>>>> Stashed changes
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
<<<<<<< Updated upstream
        "scope": 3669,
        "src": "420:6957:16",
        "usedErrors": []
      }
    ],
    "src": "36:7342:16"
=======
        "scope": 3180,
        "src": "404:11768:13",
        "usedErrors": []
      }
    ],
    "src": "36:12137:13"
>>>>>>> Stashed changes
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.13+commit.abaa5c0e.Emscripten.clang"
  },
  "networks": {
    "1652335827167": {
      "events": {},
      "links": {},
      "address": "0xD03fC291D3866D1aE0be819a2fF88DFfaAd109d7",
      "transactionHash": "0x18dd0f8a612633adaac81a36e19f12df1ea953b6997041563de7f2ba7ba76b1f"
    },
<<<<<<< Updated upstream
    "1652447830722": {
      "events": {},
      "links": {},
      "address": "0xB6114A9ee858e9BB527c3B0785b955285757F415",
      "transactionHash": "0x09fc9a8bb361b34d66cfcdf5f56ebe273c4955ad74aec8ab4c5aec78847cc71d"
    }
  },
  "schemaVersion": "3.4.7",
  "updatedAt": "2022-05-13T13:31:06.917Z",
=======
    "1652351917227": {
      "events": {},
      "links": {},
      "address": "0xe614015ac39Cde484dE2cfB7E49100e3ea34BFCF",
      "transactionHash": "0x96b91365b4fa533aad20526df46e89fbedf1584bf9c27a4e0eaa4214af281091"
    }
  },
  "schemaVersion": "3.4.7",
  "updatedAt": "2022-05-13T14:24:20.535Z",
>>>>>>> Stashed changes
  "networkType": "ethereum",
  "devdoc": {
    "author": "Sebastien Gazeau, Sébastien Dupertuis et Alexis Mendoza",
    "events": {
      "NFTSold(string,address,uint256,address,address,uint256)": {
<<<<<<< Updated upstream
        "params": {
          "_collectionAddress": "Address of the collection",
          "_collectionName": "Name of the NFT collection",
          "_newOwner": "New owner of the bought NFT",
          "_oldOwner": "Previous owner of the sold NFT",
          "_price": "The sale price of the given NFT",
          "_tokenID": "The ID of this given NFT"
        }
      }
    },
    "kind": "dev",
    "methods": {
      "buyNFT(address,uint256)": {
        "details": "Call this function when a buyer click on the BUY button",
        "params": {
          "_collectionAddress": "The address of the collection of the NFT to be sold/transfered",
          "_tokenID": "The token ID of the NFT to be sold/transfered"
=======
        "params": {
          "_collectionAddress": "Address of the collection",
          "_collectionName": "Name of the NFT collection",
          "_newOwner": "New owner of the bought NFT",
          "_oldOwner": "Previous owner of the sold NFT",
          "_price": "The sale price of the given NFT",
          "_tokenID": "The ID of this given NFT"
        }
      }
    },
    "kind": "dev",
    "methods": {
      "bid(address,uint256)": {
        "details": "Call this function each time a user place a new bid",
        "params": {
          "_nftCollectionAddress": "Collection address of the given NFT",
          "_nftTokenID": "Token ID of the given NFT"
        }
      },
      "buyNFT(address,uint256)": {
        "details": "Call this function when a buyer click on the BUY button",
        "params": {
          "_collectionAddress": "The address of the collection of the NFT to be sold/transfered",
          "_tokenID": "The token ID of the NFT to be sold/transfered"
        }
      },
      "checkAuctionTimeExpired(address,uint256)": {
        "details": "Call this function to check if the time of the auction is over or not",
        "params": {
          "_nftCollectionAddress": "Collection address of the given NFT",
          "_nftTokenID": "Token ID of the given NFT"
        },
        "returns": {
          "_0": "Returns a boolean to define if the auction time has expired (true) or not (false)"
>>>>>>> Stashed changes
        }
      },
      "closeAuction(address,uint256)": {
        "details": "Call this function from the front when the auction time has expired",
        "params": {
          "_collectionAddress": "The address of the collection of the NFT to close the auction",
          "_tokenID": "The token ID of the NFT to close the auction"
        }
      },
      "constructor": {
        "params": {
          "_addressCYON": "The ERC20 address of the platform token (CYON) "
        }
      },
      "createNFT(address,address,string,string,string,string)": {
        "details": "Call this function when the user wants to create a new NFT and mint it to the given address",
        "params": {
          "_collectionAddress": "The address of the collection in which the NFT will be created/minted",
          "_description": "Description of the new NFT",
          "_firstOwner": "The destination address to which the NFT is minted",
          "_name": "Name of the new NFT",
          "_tag": "Tag of the new NFT allowing filtering",
          "_tokenURI": "The metadata through a link URI"
        }
      },
<<<<<<< Updated upstream
      "getURI(address,uint256)": {
        "details": "Call this function to get the metadata of the NFT",
        "params": {
          "_collectionAddress": "The address of the collection of the NFT to get the URI",
          "_tokenID": "The token ID of the NFT to get the URI"
        },
        "returns": {
          "_0": "_URI The URI data"
=======
      "getBiddersAmount(address,uint256)": {
        "details": "Call this function from the front to display the amount of bidders over the given limit (here 1000)",
        "params": {
          "_nftCollectionAddress": "Collection address of the given NFT",
          "_nftTokenID": "Token ID of the given NFT"
        },
        "returns": {
          "_0": "Returns the amount of bidders (how many addresses)"
        }
      },
      "getCurrentHighestBid(address,uint256)": {
        "details": "Call this function when you want to know the value of the highest bid",
        "params": {
          "_nftCollectionAddress": "Collection address of the given NFT",
          "_nftTokenID": "Token ID of the given NFT"
        },
        "returns": {
          "_0": "Returns the value of the current highest bid"
        }
      },
      "getCurrentHighestBidder(address,uint256)": {
        "details": "Call this function when you want to know the address of the highest bidder",
        "params": {
          "_nftCollectionAddress": "Collection address of the given NFT",
          "_nftTokenID": "Token ID of the given NFT"
        },
        "returns": {
          "_0": "Returns the address of the current highest bidder"
        }
      },
      "getURI(address,uint256)": {
        "details": "Call this function to get the metadata of the NFT",
        "params": {
          "_collectionAddress": "The address of the collection of the NFT to get the URI",
          "_tokenID": "The token ID of the NFT to get the URI"
        },
        "returns": {
          "_0": "_URI The URI data"
        }
      },
      "isInAuction(address,uint256)": {
        "details": "Call this function from the front to know if there is an auction ongoing",
        "params": {
          "_nftCollectionAddress": "Collection address of the given NFT",
          "_nftTokenID": "Token ID of the given NFT"
        },
        "returns": {
          "_0": "Returns true if an auction is in progress"
        }
      },
      "requestAuction(address,uint256)": {
        "details": "Call this function before starting the auction procedure",
        "params": {
          "_collectionAddress": "The address of the collection of the NFT to start an auction",
          "_tokenID": "The token ID of the NFT to start an auction"
        },
        "returns": {
          "_0": "_validity True if the auction is authorized"
>>>>>>> Stashed changes
        }
      },
      "setNewPrice(address,uint256,uint256)": {
        "details": "Call this function when a sale is initiated",
        "params": {
          "_collectionAddress": "The address of the collection of the NFT to set the price",
          "_price": "The price to set",
          "_tokenID": "The token ID of the NFT to set the price"
        }
<<<<<<< Updated upstream
=======
      },
      "startAuction(address,uint256,uint256)": {
        "details": "Call this function when the user decides to sell his NFT through an auction. The owner can define a starting price if he sends money in the transaction.",
        "params": {
          "_biddingTime": "Auction time in seconds",
          "_nftCollectionAddress": "Collection address of the given NFT",
          "_nftTokenID": "Token ID of the given NFT"
        }
      },
      "withdrawRefund(address,uint256)": {
        "details": "The user can call this function through the front when his bid is not the highest anymore.",
        "params": {
          "_nftCollectionAddress": "Collection address of the given NFT",
          "_nftTokenID": "Token ID of the given NFT"
        }
>>>>>>> Stashed changes
      }
    },
    "title": "Master contract to manage the decentralized NFT market place ",
    "version": 1
  },
  "userdoc": {
    "events": {
<<<<<<< Updated upstream
=======
      "AuctionClosed(address,uint256,address,uint256)": {
        "notice": "Event raised when the auction has finished"
      },
      "AuctionStarted(address,uint256,address)": {
        "notice": "Event raised when the auction has started"
      },
      "HighestBidIncreased(address,uint256,address,uint256)": {
        "notice": "Event raised when the bid has increased"
      },
>>>>>>> Stashed changes
      "NFTSold(string,address,uint256,address,address,uint256)": {
        "notice": "event for NFT sales"
      }
    },
    "kind": "user",
    "methods": {
<<<<<<< Updated upstream
      "buyNFT(address,uint256)": {
        "notice": "This function allows to transfer the money to the NFT owner and the NFT to the buyer."
=======
      "bid(address,uint256)": {
        "notice": "This function allows to place a new bid"
      },
      "buyNFT(address,uint256)": {
        "notice": "This function allows to transfer the money to the NFT owner and the NFT to the buyer after a direct sale."
      },
      "checkAuctionTimeExpired(address,uint256)": {
        "notice": "This function allows to check if the auction ended"
>>>>>>> Stashed changes
      },
      "closeAuction(address,uint256)": {
        "notice": "This function allows to close an auction when the time has expired"
      },
      "constructor": {
        "notice": "The constructor the Master smart contract"
      },
      "createNFT(address,address,string,string,string,string)": {
        "notice": "This function allows to create NFTs inside a collection and mint it directly"
      },
<<<<<<< Updated upstream
      "getURI(address,uint256)": {
        "notice": "This function returns the URI data of the given NFT"
      },
      "setNewPrice(address,uint256,uint256)": {
        "notice": "This function allows to set the price of the given NFT"
=======
      "getBiddersAmount(address,uint256)": {
        "notice": "This function allows to check for the amount of bidders"
      },
      "getCurrentHighestBid(address,uint256)": {
        "notice": "This function allows to check for the current highest bid"
      },
      "getCurrentHighestBidder(address,uint256)": {
        "notice": "This function allows to check for the current highest bidder"
      },
      "getURI(address,uint256)": {
        "notice": "This function returns the URI data of the given NFT"
      },
      "isInAuction(address,uint256)": {
        "notice": "This function allows to check if there is an auction in progress for the given NFT"
      },
      "requestAuction(address,uint256)": {
        "notice": "This function allows to initiate an auction by verifying owner and tokenID"
      },
      "setNewPrice(address,uint256,uint256)": {
        "notice": "This function allows to set the price of the given NFT"
      },
      "startAuction(address,uint256,uint256)": {
        "notice": "This function allows to start a new auction"
      },
      "withdrawRefund(address,uint256)": {
        "notice": "This function allows a user that placed a bid (not the highest anymore) to get back his funds"
>>>>>>> Stashed changes
      }
    },
    "notice": "This smart contract is the link between the Dapp and the subcontracts",
    "version": 1
  }
}